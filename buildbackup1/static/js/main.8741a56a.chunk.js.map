{"version":3,"sources":["redux/reducers.js","modules/dashboard-360/redux/constants.js","components/RouteItem.js","components/RouteSwitch.js","redux/constants.js","redux/action.js","components/CustomBreadcrumbs.js","serviceWorker.js","modules/dashboard-360/components/GlobalStyles.js","modules/dashboard-360/mixins/chartjs.js","modules/dashboard-360/theme/index.js","modules/dashboard-360/theme/shadows.js","modules/dashboard-360/theme/typography.js","redux/store.js","redux/rootModule.js","components/MainLoader.js","modules/dashboard-360/components/Logo.js","modules/dashboard-360/utils/endpoints.js","components/TopBar.js","modules/dashboard-360/layouts/DashboardLayout/NavBar/NavItem.js","modules/dashboard-360/layouts/DashboardLayout/NavBar/index.js","modules/dashboard-360/redux/action.js","modules/dashboard-360/utils/columns-config.js","components/CommonAlert.js","modules/dashboard-360/views/DashboardView/DownloadReport.js","modules/dashboard-360/views/admin/invoices/index.js","modules/dashboard-360/views/admin/orders/index.js","components/Page.js","modules/dashboard-360/components/BasicTable.js","modules/dashboard-360/views/DashboardView/switch.js","modules/dashboard-360/views/DashboardView/DispositionForm.js","modules/dashboard-360/views/DashboardView/index.js","modules/dashboard-360/views/admin/agentlastfive/index.js","modules/dashboard-360/views/admin/agentopenTickets/index.js","modules/dashboard-360/views/admin/distributerlastfive/index.js","modules/dashboard-360/views/admin/callerInteractions/index.js","modules/dashboard-360/routes/adminRoutes.js","modules/dashboard-360/views/account/AccountView/Profile.js","modules/dashboard-360/views/account/AccountView/ProfileDetails.js","modules/dashboard-360/views/account/AccountView/index.js","modules/dashboard-360/routes/userRoutes.js","modules/dashboard-360/layouts/MainLayout/index.js","modules/dashboard-360/layouts/DashboardLayout/index.js","modules/dashboard-360/routes/index.js","modules/telephony/views/dashboard/timepicker.js","modules/telephony/views/dashboard/DaterangeReport.js","modules/telephony/views/dashboard/Ivrfileupload.js","modules/telephony/views/dashboard/DownloadReport.js","modules/telephony/views/dashboard/index.js","components/ExcelReport.js","modules/telephony/routes/index.js","modules/FAQ/routes/index.js","modules/FAQ/views/dashboard/index.js","modules/dashboard-360/views/customer/CustomerListView/data.js","modules/auth/views/Login.js","modules/auth/routes/index.js","modules/agentForm/views/dashboard/CreateAgentform.js","modules/agentForm/views/dashboard/EditAgent.js","modules/agentForm/views/dashboard/AgentTable.js","modules/agentForm/views/dashboard/index.js","modules/agentForm/routes/index.js","modules/groupadminForm/views/dashboard/Createform.js","modules/groupadminForm/views/dashboard/Edit.js","modules/groupadminForm/views/dashboard/Table.js","modules/groupadminForm/views/dashboard/index.js","modules/groupadminForm/routes/index.js","modules/telephony/views/dashboard/FileUpload3.js","modules/telephony/views/dashboard/campaign.js","modules/telephony/views/dashboard/ivrcampaign.js","modules/telephony/views/dashboard/Auto-report/dialog.js","modules/telephony/views/dashboard/Auto-report/updatedialog.js","modules/telephony/views/dashboard/Auto-report/PopUp.js","modules/telephony/views/dashboard/Auto-report/manageagents.js","modules/telephony/views/dashboard/Auto-report/agentperformance_date.js","modules/telephony/views/dashboard/ExcelReport.js","modules/telephony/views/dashboard/Auto-report/agentperformance.js","modules/telephony/views/dashboard/Auto-report/DaterangeReport.js","modules/telephony/views/dashboard/Auto-report/cdrPopup.js","modules/telephony/views/dashboard/Auto-report/interactionreport.js","routes/index.js","Main.js","App.js","index.js"],"names":["agentInitialState","logInState","state","action","type","SET_LOGGED_IN","payload","userData","SET_USER_DATA","agentCurrentStatus","SET_AGENT_CURRENT_STATUS","accountType","SET_ACCOUNT_TYPE","activatedRoute","SET_ACTIVATED_ROUTE","crumbs","Map","SET_NEW_CRUMB","set","key","value","urlMatchFound","SET_URL_MATCH_FOUND","searchDistributor","SET_SEARCH_DISTRIBUTOR","SET_DISTRIBUTOR_ORDERS","SET_DISTRIBUTOR_INVOICES","connect","dispatch","setCrumb","route","setNewCrumb","setMatchFound","setUrlMatchFound","setActivatedRoute","useEffect","computedMatch","url","path","exact","render","props","component","routes","map","subRoute","crumb","concat","redirectPath","isRoot","location","useLocation","from","to","pathname","slice","ADMIN","USER","COMMON","setLoggedIn","isLoggedIn","setUserDetails","details","setAccountType","accType","val","setAgentCurrentStatus","console","log","setSearchDistributor","useState","breadCrumbLinks","setbreadCrumbLinks","get","newLink","container","length","style","margin","split","index","window","href","splice","join","Boolean","hostname","match","useStyles","makeStyles","createStyles","boxSizing","padding","html","height","width","body","backgroundColor","a","textDecoration","color","colors","indigo","common","white","fontSize","fontFamily","fontWeight","lineHeight","letterSpacing","position","minHeight","withRouter","activateRoute","resetMatchFound","loc","useRef","current","Chart","helpers","extend","elements","Rectangle","prototype","draw","left","right","top","bottom","signX","signY","borderSkipped","radius","ctx","this","_chart","vm","_view","borderWidth","cornerRadius","config","options","horizontal","base","x","y","barSize","Math","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","strokeStyle","borderColor","lineWidth","corners","startCorner","indexOf","cornerAt","corner","moveTo","i","nextCornerId","floor","xTl","xTr","yTl","yTr","xBl","xBr","yBl","yBr","lineTo","quadraticCurveTo","fill","stroke","theme","createMuiTheme","palette","background","dark","default","paper","primary","main","secondary","light","contrastText","text","blueGrey","red","shadows","typography","h1","h2","h3","h4","h5","h6","overline","createStore","id","reducerMap","useStyle","dtheme","root","MainLoader","classes","useLoading","loading","indicator","containerProps","indicatorEl","Box","justifyContent","alignItems","display","className","Logo","alt","src","AMI","avatar","search","borderRadius","shape","fade","marginLeft","breakpoints","up","spacing","searchIcon","pointerEvents","title","marginRight","inputRoot","inputInput","paddingLeft","transition","transitions","create","searchtextdist","logout","searchDist","onMobileNavOpen","rest","useSelector","viewAccess","localStorage","getItem","clear","reload","axios","require","data","JSON","stringify","method","headers","then","response","catch","error","AgentSIPID","AppBar","clsx","elevation","Toolbar","flexGrow","Hidden","mdDown","Typography","variant","noWrap","Tooltip","IconButton","onClick","logoutUser","lgUp","item","paddingTop","paddingBottom","button","fontWeightMedium","textTransform","icon","active","NavItem","Icon","ListItem","disableGutters","Button","activeClassName","RouterLink","size","user","items","BarChartIcon","UsersIcon","ShoppingBagIcon","UserIcon","SettingsIcon","LockIcon","UserPlusIcon","AlertCircleIcon","mobileDrawer","desktopDrawer","cursor","NavBar","onMobileClose","openMobile","content","flexDirection","p","Avatar","name","Divider","List","Drawer","anchor","onClose","open","defaultProps","setDistributorOrders","orders","setDistributorInvoices","invoices","orderColumns","field","headerName","renderCell","rowData","row","OrderNumber","flex","invoicesColumns","InvoiceNumber","AgentCallColumns","DistributerCallColumns","CallerInteractioncolumns","CommonAlert","Alert","severity","DownloadReport","DownloadData","filename","fields","result","Object","keys","header","dgContainer","maxHeight","paddingRight","distributorInvoices","setDistributorInvoicesAction","showLoader","setShowLoader","orderId","params","setSingleInvoiceDetails","orderIdPrev","getSingleInvoiceDetails","getDealerInvoiceDetails","res","page","setPage","CustomBreadcrumbs","onPageChange","pageSize","rowsPerPageOptions","pagination","autoHeight","columns","rows","order","maxWidth","distributorOrders","setDistributorOrdersAction","setSingleOrderDetails","getSingleOrderDetails","getDealerOrderDetails","Page","forwardRef","ref","children","Helmet","actions","linkContainer","withStyles","switchBase","purple","checked","track","Switch","grey","transform","opacity","border","thumb","focusVisible","focusVisibleClassName","disableRipple","boxShadow","fieldContainer","DispositionForm","disable","setDisable","addToQueue","agentId","queue","APIENDPOINT","removeFromQueue","CallerName","callermobilenumber","callerapplication","subcategory","category","secsubcategory","seccategory","comments","issuetype","initialValue","setInitialValue","formRef","issuetypes","categories","seccategories","finalsubCategories","setfinalsubCategories","subCategories","sefinalsecSubCategories","secSubCategories","selectedData1","filter","element","secCategory","secCategoryid","_id","secsubcategory1","subCategory","handleSubmitDisposition","e","handleBreak","handleSubmit","values","categoryOBJ","seccategoryOBJ","subcategoryOBJ","secsubcategoryOBJ","secSubCategory","setItem","setCurrentCallDetails","autoCompleteKey","validateOnBlur","initialValues","disform","onSubmit","validate","innerRef","validationSchema","yup","required","typeError","setFieldValue","Grid","direction","xs","sm","FormControl","Autocomplete","getOptionLabel","option","disabled","getOptionSelected","onChange","event","renderInput","TextField","label","subCategoryid","socketIOClient","transports","panelBody","dialogActions","modal","timerComp","borderBottomLeftRadius","borderBottomRightRadius","callWrapper","callInbound","success","callOutbound","drawerHeader","currentCall","setAgentCurrentStatusAction","loadingDetails","setLoadingDetails","remarks","setRemarks","ticketType","setTicketType","setCategory","agentExtension","agentID","asterixUniqueID","contactedNumber","created","createdAt","updatedAt","React","setOpen","useTheme","fullScreen","useMediaQuery","down","handleClose","setSubCategory","subCategoryItem","setSubCategoryItem","callStatus","callUniqueId","setCurrentCall","userType","AgentId","AgentType","AgentSipId","agent","DLF","disForm","setdisForm","getAgentCallStatus","agentSipID","Event","InteractionID","CallerIDNum","Paused","Queue","breakService","getInitialData","setInterval","GET_CURRENT_STATUS_BY_AGENT_SIP_ID","callerNumber","callDispositionStatus","breakStatus","Container","lg","md","Card","CardHeader","CardContent","form","cat","tkstyp","subcat","subcatitem","rks","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","ALF","agentdisposedCalls","setagentdisposedCalls","agentServiceURL","ALFDATA","reverse","exportButton","calls","Dashboard","Orders","agentDispostionList","agentOpentTickets","distribuerCallDisposedList","Profile","gutterBottom","dateText","moment","format","CardActions","fullWidth","states","ProfileDetails","firstName","lastName","email","phone","country","setValues","handleChange","target","autoComplete","noValidate","subheader","helperText","select","SelectProps","native","MainLayout","isAdmin","startsWith","RouteSwitch","overflow","wrapper","contentContainer","DashboardLayout","isMobileNavOpen","setMobileNavOpen","adminRoutes","userRoutes","MaterialUIPickers","handleTime","selectedDate","setSelectedDate","utils","DateFnsUtils","justify","date","KeyboardButtonProps","Date","startDate","setStartDate","disableToolbar","date1","setdate","FileUpload","handleUpload","retries","campaignID","file","formData","FormData","append","post","alert","err","handleFileChosen","files","accept","placeholder","multiple","ReactExport","ExcelFile","ExcelSheet","ExcelColumn","formControl","minWidth","selectEmpty","marginTop","campaigns","setCampaigns","selectedCamapign","setSelectedCampaign","campaigndata","setCampaignData","records1","setRecords","loader","setLoader","englishRecords","setEnglishRecords","hindiRecords","setHindiRecords","kannadaRecords","setKannadaRecords","attemptRecords","setAttemptRecords","getCampaigns","getExcelData","getInteractionDeatils","getCampaignDetails","Record","counts","Campaignstartdate","replace","Campaignenddate","message","ele","formatted","utc","Call_Duration","CDR_Duration","en","hi","kn","final","forEach","push","ivrsuccess","optionE1","option1","optionEC1","option2","optionEC2","option3","optionEC3","Callbackoption1","optionECT1","Callbackoption2","optionECT2","Callbackoption3","optionECT3","InvalidOption","optionEInvalid1","optionH2","optionHC1","optionHC2","optionHC3","optionHCT1","optionHCT2","optionHCT3","optionHInvalid2","optionK3","optionKC1","optionKC2","optionKC3","optionKCT1","optionKCT2","optionKCT3","optionKInvalid3","InputLabel","Select","labelId","autoWidth","MenuItem","campaign_name","textAlign","CircularProgress","totalRecords","DailedCountrecordsCount","NotDailedrecordsCount","AnsweredrecordCount","NoAnsweredrecordCount","FailerrecordCount","BusyrecordCount","CongestionrecordCount","jobcompleterecordcount","jobnotcompleterecordcount","useForm","register","firstNameRef","uuid","Copyright","align","Link","image","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","imageWrapper","submit","avatarWrapper","setUserDetailsMain","setAccountTypeMain","setLoggedInMain","useDispatch","setError","visibility","setVisibility","data1","setData1","otp","setOtp","setotphandle","username","password","Axios","myObj","CssBaseline","Paper","square","Yup","max","role","authenticate","errors","handleBlur","touched","onBlur","my","mt","data2","OTP","status","obj","accessToken","Location","AgentName","AgentEmail","Agentcontact","enable","Group","Groups","setGroups","fetch","json","group_name","Authorization","pushAgentCurrentStatusData","TableData","preventDefault","resetForm","multiline","dialog","DistSelect","InputLabelProps","showModal","setShowModal","Data","EditData","setFormData","EmployeeName","EmailID","External_num","GroupName","shrink","group_id","Enabled","flexBasis","contactNumber","agentCallDispositionStatus","agentCallType","agentCallUniqueId","agentCallEvent","agentCallStatus","DataGridDemo","agents","setAgents","setEditform","editData","setEditData","UserID","checkboxSelection","onSelectionChange","newSelection","getContrastText","menuButton","list","toolbar","mixins","listItem","cardcontent","GroupAdminName","GroupAdminEmail","groupcontact","reader","FileReader","rABS","readAsBinaryString","onload","wb","XLSX","read","wsname","SheetNames","ws","Sheets","sheet_to_json","raw","shift","arr","uuidv4","data3","readAsArrayBuffer","Campaign","startTime","setStartTime","endTime","setEndtime","setQueue","campaignRetry","setRetry","campaignName","setcampaignname","time","time2","updateCampaign","datetime_end","profilesColumns","estatus","endUtc","enddate","startUtc","startdate","localeDate","local","localsDate","closeButton","other","disableTypography","aria-label","MuiDialogContent","MuiDialogActions","CustomizedDialogs","setname","processtype","setProcessType","processName","setProcessname","setPhone","sip","setSip","processlocation","setProcessLocation","setEmail","processGroup","setProcessGroup","dividers","setPassword","Popup","show","record","ProcessType","ProcessName","ProcessLocation","UserName","ProcessGroup","handleReset","put","Inbound","liveCalls","setLivecalls","breakdetails","setBreakdetails","agentsFree","setAgentsFree","idle","setIdle","update","setUpdate","setShow","agentStatusColumn","showProfile","toUTCString","Mduration","idle1","break1","agentsFree1","live","onRowClick","getData","ExcelReport","fileName","entries","AgentPerformance","records","filteredArray","endDate","setEndDate","CRD","AccountCode","AnswerTime","UniqueID","CallerID","Channel","Destination","DestinationChannel","DestinationContext","Disposition","Duration","EndTime","LastApplication","LastData","Privilege","Source","StartTime","DIALSTARTEVENT","CallerIDName","ConnectedLineName","ConnectedLineNum","DestUniqueID","Dialstring","SubEvent","ORIGINATEEVENT","ActionID","Context","Exten","Reason","Response","Uniqueid","AGENTCALLEDEVENT","ChannelCalling","Extension","Priority","DIALENDEVENT","DialStatus","InteractionReport","cdr","setCdr","LASTDTMFOPTION","toString","optionsselct","hasOwnProperty","mainDisposition","CRMDISPOSITION","subDisposition","sip_id","agent_type","agent_id","agentName","CRD_AMAFlags","AMAFlags","CRD_AccountCode","CRD_AnswerTime","CRD_CallerID","CRD_Channel","CRD_Destination","CRD_DestinationChannel","CRD_DestinationContext","CRD_Disposition","CRD_Duration","CRD_EndTime","CRD_Event","CRD_LastApplication","CRD_LastData","CRD_Privilege","CRD_Source","CRD_StartTime","CRD_UniqueID","CRD_UserField","DIALENDEVENT_Channel","DIALENDEVENT_DialStatus","DIALENDEVENT_Event","DIALENDEVENT_Privilege","DIALENDEVENT_SubEvent","DIALENDEVENT_UniqueID","DIALSTARTEVENT_CallerIDName","DIALSTARTEVENT_CallerIDNum","DIALSTARTEVENT_Channel","DIALSTARTEVENT_ConnectedLineName","DIALSTARTEVENT_ConnectedLineNum","DIALSTARTEVENT_DestUniqueID","DIALSTARTEVENT_Destination","DIALSTARTEVENT_Dialstring","DIALSTARTEVENT_Event","DIALSTARTEVENT_Privilege","DIALSTARTEVENT_SubEvent","DIALSTARTEVENT_UniqueID","ORIGINATEEVENT_ActionID","ORIGINATEEVENT_CallerIDNam","CallerIDNam","ORIGINATEEVENT_CallerIDNum","ORIGINATEEVENT_Channel","ORIGINATEEVENT_Context","ORIGINATEEVENT_Event","ORIGINATEEVENT_Exten","ORIGINATEEVENT_Privilege","ORIGINATEEVENT_Reason","ORIGINATEEVENT_Response","ORIGINATEEVENT_Uniqueid","class","cellspacing","scope","CALLID","AGENTNAME","AGENTID","CALLERNUMBER","CALLSTARTTIME","CALLPICKEDTIME","CALLDICONNECTEDTIME","CALLNOANSWERTIME","CALLDISPOSEDTIME","TOTALCALLDURATION","CALLCONNECTEDDURATION","CALLDISCONECTEDDURATION","CALLRINGDURATION","CallbackDate","Remarks","lazy","requiresAuth","telephonyRoutes","faqRoutes","agentRoutes","groupRoutes","authRoutes","campaign","ivrcampaign","manageagents","agentPerformance","interactionreport","setLoading","filteredRoutes","setfilteredRoutes","localLoggedInState","setLocalLoggedIn","removeItem","App","store","rootStore","ThemeProvider","Suspense","fallback","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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B,CAC9B,CACET,MAAO,aACPC,WAAY,aACZK,KAAM,GAER,CACEN,MAAO,oBACPC,WAAY,qBACZK,KAAM,GAER,CACEN,MAAO,YACPC,WAAY,aACZK,KAAM,GAER,CACEN,MAAO,WACPC,WAAY,cACZK,KAAM,GAER,CACEN,MAAO,cACPC,WAAY,MACZK,KAAM,GAER,CACEN,MAAO,cACPC,WAAY,YACZK,KAAM,GAER,CACEN,MAAO,iBACPC,WAAY,YACZK,KAAM,GAER,CACEN,MAAO,OACPC,WAAY,OACZK,KAAM,GAGR,CACEN,MAAO,WACPC,WAAY,WACZK,KAAM,GAGR,CACEN,MAAO,UACPC,WAAY,OACZK,KAAM,IAGGI,GAAyB,CACpC,CAMET,WAAY,YACZD,MAAO,kBACPM,KAAM,GAOR,CACEN,MAAO,OACPC,WAAY,OACZK,KAAM,GAER,CACEN,MAAO,WACPC,WAAY,WACZK,KAAM,GAER,CACEN,MAAO,cACPC,WAAY,eACZK,KAAM,GAER,CACEN,MAAO,WACPC,WAAY,WACZK,KAAM,GAER,CACEN,MAAO,WACPC,WAAY,WACZK,KAAM,GAER,CACEN,MAAO,UACPC,WAAY,OACZK,KAAM,IAIGK,GAA2B,CACtC,CACEX,MAAO,aACPC,WAAY,aACZK,KAAM,GAER,CACEN,MAAO,oBACPC,WAAY,qBACZK,KAAM,GAER,CACEN,MAAO,YACPC,WAAY,aACZK,KAAM,GAER,CACEN,MAAO,WACPC,WAAY,cACZK,KAAM,GAER,CACEN,MAAO,cACPC,WAAY,MACZK,KAAM,GAER,CACEN,MAAO,cACPC,WAAY,YACZK,KAAM,GAER,CACEN,MAAO,iBACPC,WAAY,YACZK,KAAM,GAER,CACEN,MAAO,OACPC,WAAY,OACZK,KAAM,GAGR,CACEN,MAAO,WACPC,WAAY,WACZK,KAAM,GAGR,CACEN,MAAO,UACPC,WAAY,OACZK,KAAM,GAER,CACEN,MAAO,qBACPC,WAAY,gBACZK,KAAM,I,gCCxSK,SAASM,GAAT,GAAkD,IAA3BpE,EAA0B,EAA1BA,QAASpF,EAAiB,EAAjBA,KAASyD,EAAQ,kBAC9D,OACE,kBAACgG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","file":"static/js/main.8741a56a.chunk.js","sourcesContent":["import { SET_USER_DATA } from 'src/modules/dashboard-360/redux/constants';\nimport {\n  SET_LOGGED_IN,\n  SET_ACCOUNT_TYPE,\n  SET_ACTIVATED_ROUTE,\n  SET_NEW_CRUMB,\n  SET_URL_MATCH_FOUND,\n  SET_AGENT_CURRENT_STATUS,\n  SET_SEARCH_DISTRIBUTOR\n} from './constants';\n\nconst logInInitialState = false;\nconst accountTypeInitialState = '';\nconst agentInitialState = {\n  \"AgentType\":\"\",\n  \"role\":\"\",\n  \"callUniqueId\":\"\",\n  \"distributer_id\":\"\",\n  \"callStatusId\":\"\",\n  \"callDispositionStatus\":\"\",\n  \"callType\":\"\",\n  \"callEvent\":\"\",\n  \"callerNumber\":\"\",\n  \"callStatus\":\"\",\n  \"AgentSIPID\":\"\"\n}\n\nexport const logInState = (state = logInInitialState, action) => {\n  switch (action.type) {\n    case SET_LOGGED_IN: {\n      return action.payload;\n    }\n    default:\n      return state;\n  }\n};\n\nexport const userData = (state = null, action) => {\n  switch (action.type) {\n    case SET_USER_DATA: {\n      return action.payload;\n    }\n    default:\n      return state;\n  }\n};\n\nexport const agentCurrentStatus = (state = agentInitialState, action) =>{\n  switch (action.type) {\n    case SET_AGENT_CURRENT_STATUS: {\n      return action.payload\n    }\n    default:\n      return state\n  }\n}\n\nexport const accountType = (state = accountTypeInitialState, action) => {\n  switch (action.type) {\n    case SET_ACCOUNT_TYPE: {\n      return action.payload;\n    }\n    default:\n      return state;\n  }\n};\nexport const activatedRoute = (state = '', action) => {\n  switch (action.type) {\n    case SET_ACTIVATED_ROUTE: {\n      return action.payload;\n    }\n    default:\n      return state;\n  }\n};\nexport const crumbs = (state = new Map(), action) => {\n  switch (action.type) {\n    case SET_NEW_CRUMB: {\n      // Not changing reference to prevent rerendering purposefully\n      state.set(action.key, action.value);\n      return state;\n    }\n    default:\n      return state;\n  }\n};\nexport const urlMatchFound = (state = false, action) => {\n  switch (action.type) {\n    case SET_URL_MATCH_FOUND: {\n      return action.payload;\n    }\n    default:\n      return state;\n  }\n};\nexport const searchDistributor = (state = '', action) => {\n  switch (action.type) {\n    case SET_SEARCH_DISTRIBUTOR: {\n      return action.payload;\n    }\n    default:\n      return state;\n  }\n};","export const COMMON = 'COMMON';\nexport const REDIRECT_TO = 'REDIRECT_TO';\nexport const SET_LOGIN_ACTION = 'SET_LOGIN_ACTION';\nexport const SET_USER_DATA = 'SET_USER_DATA';\nexport const SET_PRODUCT_DATA = 'SET_PRODUCT_DATA';\nexport const SET_DISTRIBUTOR_ORDERS = 'SET_DISTRIBUTOR_ORDERS';\nexport const SET_DISTRIBUTOR_INVOICES = 'SET_DISTRIBUTOR_INVOICES';\nexport const SET_DELIVERY_PRICES = 'SET_DELIVERY_PRICES';\nexport const SET_CATEGORIES = 'SET_CATEGORIES';\nexport const SET_CATEGORIES_NAMES_MAP = 'SET_CATEGORIES_NAMES';\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router-dom';\nimport {\n  setNewCrumb,\n  setUrlMatchFound,\n  setActivatedRoute\n} from 'src/redux/action';\n\n/**\n * Render a route with potential sub routes\n */\nfunction RouteWithSubRoutes(route) {\n  useEffect(() => {\n    if (route.activatedRoute === route.computedMatch.url) {\n      if (route.computedMatch.path !== route.computedMatch.url) {\n        route.setActivatedRoute(route.computedMatch.path);\n      }\n      route.setMatchFound();\n    }\n  }, [route.activatedRoute]);\n  return (\n    <Route\n      path={route.path}\n      exact={route.exact}\n      render={props => (\n        <route.component\n          {...props}\n          routes={route.routes?.map(subRoute => ({\n            ...subRoute,\n            path: route.path + subRoute.path,\n            crumb: (typeof route.crumb === 'string'\n              ? [route.crumb]\n              : route.crumb || []\n            ).concat(subRoute.crumb || [''])\n          }))}\n        />\n      )}\n    />\n  );\n}\nconst mapStateToProps = state => ({\n  activatedRoute: state.activatedRoute\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setCrumb: route => dispatch(setNewCrumb(route)),\n  setMatchFound: () => dispatch(setUrlMatchFound(true)),\n  setActivatedRoute: route => dispatch(setActivatedRoute(route))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RouteWithSubRoutes);\n","import React, { useEffect } from 'react';\nimport { Switch, Route, Redirect, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { setNewCrumb } from 'src/redux/action';\nimport { connect } from 'react-redux';\nimport RouteWithSubRoutes from './RouteItem';\n\nfunction RouteSwitch({ routes, redirectPath, isRoot, setCrumb }) {\n  const location = useLocation();\n\n  useEffect(() => {\n    routes.map(route => setCrumb({ key: route.path, value: route.crumb }));\n  }, []);\n\n  return (\n    <Switch>\n      {isRoot && (\n        <Redirect from=\"/:url*(/+)\" to={location.pathname.slice(0, -1)} />\n      )}\n      {routes.map(route => {\n        return <RouteWithSubRoutes {...route} key={route} />;\n      })}\n      {redirectPath && (\n        <Route path=\"*\">\n          <Redirect to={redirectPath} />\n        </Route>\n      )}\n    </Switch>\n  );\n}\n\nRouteSwitch.propTypes = {\n  routes: PropTypes.any,\n  redirectPath: PropTypes.string,\n  isRoot: PropTypes.bool,\n  setCrumb: PropTypes.func\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setCrumb: route => dispatch(setNewCrumb(route))\n});\n\nexport default connect(null, mapDispatchToProps)(RouteSwitch);\n","export const SET_LOGGED_IN = 'SET_LOGGED_IN';\nexport const SET_ACCOUNT_TYPE = 'SET_ACCOUNT_TYPE';\nexport const ADMIN = 'ADMIN';\nexport const USER = 'USER';\nexport const COMMON = 'COMMON';\nexport const SET_ACTIVATED_ROUTE = 'SET_ACTIVATED_ROUTE';\nexport const SET_NEW_CRUMB = 'SET_NEW_CRUMB';\nexport const SET_URL_MATCH_FOUND = 'SET_URL_MATCH_FOUND';\nexport const SET_AGENT_CURRENT_STATUS = 'SET_AGENT_CURRENT_STATUS';\nexport const SET_SEARCH_DISTRIBUTOR='SET_SEARCH_DISTRIBUTOR';","import { SET_USER_DATA } from 'src/modules/dashboard-360/redux/constants';\nimport {\n  SET_LOGGED_IN,\n  SET_ACCOUNT_TYPE,\n  SET_ACTIVATED_ROUTE,\n  SET_NEW_CRUMB,\n  SET_URL_MATCH_FOUND,\n  SET_AGENT_CURRENT_STATUS,\n  SET_SEARCH_DISTRIBUTOR\n} from './constants';\n\nexport const setLoggedIn = isLoggedIn => {\n  return {\n    type: SET_LOGGED_IN,\n    payload: isLoggedIn\n  };\n};\nexport const setUserDetails = details => {\n  return {\n    type: SET_USER_DATA,\n    payload: details\n  };\n};\n\nexport const setAccountType = accType => {\n  return {\n    type: SET_ACCOUNT_TYPE,\n    payload: accType\n  };\n};\nexport const setActivatedRoute = route => {\n  return {\n    type: SET_ACTIVATED_ROUTE,\n    payload: route\n  };\n};\nexport const setNewCrumb = ({ key, value }) => {\n  return {\n    type: SET_NEW_CRUMB,\n    key,\n    value\n  };\n};\nexport const setUrlMatchFound = val => {\n  return {\n    type: SET_URL_MATCH_FOUND,\n    payload: val\n  };\n};\n\nexport const setAgentCurrentStatus = val => {\n  console.log(\"setAgentCurrentStatus action genrator\", val)\n  return {\n    type: SET_AGENT_CURRENT_STATUS,\n    payload: val\n  };\n};\nexport const setSearchDistributor = val => {\n  console.log(\"val\", val)\n  return {\n    type: SET_SEARCH_DISTRIBUTOR,\n    payload: val\n  };\n};\n","import { Box, Breadcrumbs, Grid } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport HomeIcon from '@material-ui/icons/Home';\n\nfunction CustomBreadcrumbs({ activatedRoute, crumbs, urlMatchFound }) {\n  const [breadCrumbLinks, setbreadCrumbLinks] = useState([]);\n  useEffect(() => {\n    if (urlMatchFound) {\n      setbreadCrumbLinks(crumbs.get(activatedRoute));\n    }\n  }, [urlMatchFound, activatedRoute]);\n  let newLink = '/';\n  return (\n    <Grid container>\n      {breadCrumbLinks?.length ? (\n        <Box style={{ margin: '1.5rem 2rem 0 1.5rem' }}>\n          <Breadcrumbs>\n            <Link to=\"/\">\n              <HomeIcon />\n            </Link>\n            {activatedRoute\n              .split('/')\n              .slice(1)\n              .map((route, index) => {\n                newLink += route + '/';\n                return breadCrumbLinks[index] ? (\n                  <Link\n                    to={\n                      index === breadCrumbLinks.length - 1\n                        ? '/' +\n                          window.location.href\n                            .split('/')\n                            .splice(3)\n                            .join('/')\n                        : newLink\n                    }\n                    key={newLink}\n                  >\n                    {breadCrumbLinks[index]}\n                  </Link>\n                ) : (\n                  ''\n                );\n              })}\n          </Breadcrumbs>\n        </Box>\n      ) : (\n        ''\n      )}\n    </Grid>\n  );\n}\n\nconst mapSTP = state => ({\n  activatedRoute: state.activatedRoute,\n  crumbs: state.crumbs,\n  urlMatchFound: state.urlMatchFound\n});\n\nexport default connect(mapSTP)(CustomBreadcrumbs);\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import { colors, createStyles, makeStyles } from '@material-ui/core';\nimport { useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { setActivatedRoute, setUrlMatchFound } from 'src/redux/action';\nimport { useLocation, withRouter, useRouteMatch } from 'react-router-dom';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    '@global': {\n      '*': {\n        boxSizing: 'border-box',\n        margin: 0,\n        padding: 0\n      },\n      html: {\n        '-webkit-font-smoothing': 'antialiased',\n        '-moz-osx-font-smoothing': 'grayscale',\n        height: '100%',\n        width: '100%'\n      },\n      body: {\n        backgroundColor: '#f4f6f8',\n        height: '100%',\n        width: '100%'\n      },\n      a: {\n        textDecoration: 'none'\n      },\n      '#root': {\n        height: '100%',\n        width: '100%'\n      },\n      '.text-underlined': {\n        textDecoration: 'underline'\n      },\n      '.link-primary': {\n        color: colors.indigo[500]\n      },\n      '.MuiTab-textColorPrimary': {\n        color: colors.indigo[500]\n      },\n      '.MuiChip-root': {\n        color: colors.common.white\n      },\n      '.MuiChip-colorPrimary': {\n        color: colors.common.white\n      },\n      '.MuiChip-colorSecondary': {\n        color: colors.common.white\n      },\n      '.MuiTypography-colorTextSecondary': {\n        color: 'rgba(0, 0, 0, 0.54)'\n      },\n      '.MuiTypography-h6': {\n        fontSize: '1.25rem',\n        fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n        fontWeight: '500',\n        lineHeight: '1.6',\n        letterSpacing: '0.0075em'\n      },\n      '.MuiFormLabel-root': {\n        color: '#3f51b5'\n      },\n      '.position-relative': {\n        position: 'relative'\n      },\n      '.position-absolute': {\n        position: 'absolute'\n      },\n      '.MuiToolbar-regular': {\n        minHeight: 64\n      },\n      '.color-white': {\n        color: 'white'\n      },\n      '.MuiAlert-standardSuccess': {\n        backgroundColor: 'rgb(180 237 168) !important'\n      }\n    }\n  })\n);\n\nconst GlobalStyles = ({\n  activateRoute,\n  location,\n  activatedRoute,\n  resetMatchFound,\n  ...props\n}) => {\n  const loc = useRef(null);\n  useStyles();\n  useEffect(() => {\n    if (loc.current !== location) {\n      resetMatchFound();\n      activateRoute(location.pathname);\n      loc.current = location;\n    }\n  }, [location]);\n  return null;\n};\nconst mapStateToProps = state => ({\n  activatedRoute: state.activatedRoute\n});\n\nconst mapDispatchToProps = dispatch => ({\n  activateRoute: route => dispatch(setActivatedRoute(route)),\n  resetMatchFound: () => dispatch(setUrlMatchFound(false))\n});\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(GlobalStyles)\n);\n","import { Chart } from 'react-chartjs-2';\n\n// ChartJS extension rounded bar chart\n// https://codepen.io/jedtrow/full/ygRYgo\nfunction draw() {\n  const { ctx } = this._chart;\n  const vm = this._view;\n  let { borderWidth } = vm;\n\n  let left;\n  let right;\n  let top;\n  let bottom;\n  let signX;\n  let signY;\n  let borderSkipped;\n  let radius;\n\n  // If radius is less than 0 or is large enough to cause drawing errors a max\n  //      radius is imposed. If cornerRadius is not defined set it to 0.\n  let { cornerRadius } = this._chart.config.options;\n  if (cornerRadius < 0) {\n    cornerRadius = 0;\n  }\n\n  if (typeof cornerRadius === 'undefined') {\n    cornerRadius = 0;\n  }\n\n  if (!vm.horizontal) {\n    // bar\n    left = vm.x - vm.width / 2;\n    right = vm.x + vm.width / 2;\n    top = vm.y;\n    bottom = vm.base;\n    signX = 1;\n    signY = bottom > top ? 1 : -1;\n    borderSkipped = vm.borderSkipped || 'bottom';\n  } else {\n    // horizontal bar\n    left = vm.base;\n    right = vm.x;\n    top = vm.y - vm.height / 2;\n    bottom = vm.y + vm.height / 2;\n    signX = right > left ? 1 : -1;\n    signY = 1;\n    borderSkipped = vm.borderSkipped || 'left';\n  }\n\n  // Canvas doesn't allow us to stroke inside the width so we can\n  // adjust the sizes to fit if we're setting a stroke on the line\n  if (borderWidth) {\n    // borderWidth shold be less than bar width and bar height.\n    const barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\n    const halfStroke = borderWidth / 2;\n    // Adjust borderWidth when bar top position is near vm.base(zero).\n    const borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n    const borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n    const borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n    const borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\n    // not become a vertical line?\n    if (borderLeft !== borderRight) {\n      top = borderTop;\n      bottom = borderBottom;\n    }\n    // not become a horizontal line?\n    if (borderTop !== borderBottom) {\n      left = borderLeft;\n      right = borderRight;\n    }\n  }\n\n  ctx.beginPath();\n  ctx.fillStyle = vm.backgroundColor;\n  ctx.strokeStyle = vm.borderColor;\n  ctx.lineWidth = borderWidth;\n\n  // Corner points, from bottom-left to bottom-right clockwise\n  // | 1 2 |\n  // | 0 3 |\n  const corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\n\n  // Find first (starting) corner with fallback to 'bottom'\n  const borders = ['bottom', 'left', 'top', 'right'];\n  let startCorner = borders.indexOf(borderSkipped, 0);\n  if (startCorner === -1) {\n    startCorner = 0;\n  }\n\n  function cornerAt(index) {\n    return corners[(startCorner + index) % 4];\n  }\n\n  // Draw rectangle from 'startCorner'\n  let corner = cornerAt(0);\n  ctx.moveTo(corner[0], corner[1]);\n\n  for (let i = 1; i < 4; i += 1) {\n    corner = cornerAt(i);\n    let nextCornerId = i + 1;\n    if (nextCornerId === 4) {\n      nextCornerId = 0;\n    }\n\n    const width = corners[2][0] - corners[1][0];\n    const height = corners[0][1] - corners[1][1];\n    const x = corners[1][0];\n    const y = corners[1][1];\n\n    radius = cornerRadius;\n    // Fix radius being too large\n    if (radius > Math.abs(height) / 2) {\n      radius = Math.floor(Math.abs(height) / 2);\n    }\n    if (radius > Math.abs(width) / 2) {\n      radius = Math.floor(Math.abs(width) / 2);\n    }\n\n    if (height < 0) {\n      // Negative values in a standard bar chart\n      const xTl = x;\n      const xTr = x + width;\n      const yTl = y + height;\n      const yTr = y + height;\n\n      const xBl = x;\n      const xBr = x + width;\n      const yBl = y;\n      const yBr = y;\n\n      // Draw\n      ctx.moveTo(xBl + radius, yBl);\n      ctx.lineTo(xBr - radius, yBr);\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\n      ctx.lineTo(xTr, yTr + radius);\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\n      ctx.lineTo(xTl + radius, yTl);\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\n      ctx.lineTo(xBl, yBl - radius);\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\n    } else if (width < 0) {\n      // Negative values in a horizontal bar chart\n      const xTl = x + width;\n      const xTr = x;\n      const yTl = y;\n      const yTr = y;\n\n      const xBl = x + width;\n      const xBr = x;\n      const yBl = y + height;\n      const yBr = y + height;\n\n      // Draw\n      ctx.moveTo(xBl + radius, yBl);\n      ctx.lineTo(xBr - radius, yBr);\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\n      ctx.lineTo(xTr, yTr + radius);\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\n      ctx.lineTo(xTl + radius, yTl);\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\n      ctx.lineTo(xBl, yBl - radius);\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\n    } else {\n      // Positive Value\n      ctx.moveTo(x + radius, y);\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(\n        x + width,\n        y + height,\n        x + width - radius,\n        y + height\n      );\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n    }\n  }\n\n  ctx.fill();\n  if (borderWidth) {\n    ctx.stroke();\n  }\n}\n\nChart.helpers.extend(Chart.elements.Rectangle.prototype, {\n  draw\n});\n","import { createMuiTheme, colors } from '@material-ui/core';\nimport shadows from './shadows';\nimport typography from './typography';\n\nconst theme = createMuiTheme({\n  palette: {\n    background: {\n      dark: '#F4F6F8',\n      default: colors.common.white,\n      paper: colors.common.white\n    },\n    primary: {\n      main: colors.indigo[500]\n    },\n    secondary: {\n      light: '#ff7961',\n      main: '#f44336',\n      dark: '#ba000d',\n      contrastText: '#000',\n    },\n    text: {\n      primary: colors.blueGrey[900],\n      secondary: colors.red[600]\n    }\n  },\n  shadows,\n  typography\n});\n\nexport default theme;\n","export default [\n  'none',\n  '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\n];\n","export default {\n  h1: {\n    fontWeight: 500,\n    fontSize: 35,\n    letterSpacing: '-0.24px'\n  },\n  h2: {\n    fontWeight: 500,\n    fontSize: 29,\n    letterSpacing: '-0.24px'\n  },\n  h3: {\n    fontWeight: 500,\n    fontSize: 24,\n    letterSpacing: '-0.06px'\n  },\n  h4: {\n    fontWeight: 500,\n    fontSize: 20,\n    letterSpacing: '-0.06px'\n  },\n  h5: {\n    fontWeight: 500,\n    fontSize: 16,\n    letterSpacing: '-0.05px'\n  },\n  h6: {\n    fontWeight: 500,\n    fontSize: 14,\n    letterSpacing: '-0.05px'\n  },\n  overline: {\n    fontWeight: 500\n  }\n};\n","import { createStore } from 'redux-dynamic-modules-core';\nimport getWeatherModule from './rootModule';\n\nexport default createStore(\n    {\n        id: 'root',\n    },\n    getWeatherModule()\n);\n","import {\n  logInState,\n  accountType,\n  activatedRoute,\n  crumbs,\n  urlMatchFound,\n  userData,\n  agentCurrentStatus,\n  searchDistributor\n} from './reducers';\n\nexport default function getWeatherModule() {\n  return {\n    // Unique id of the module\n    id: 'root',\n    // Maps the Store key to the reducer\n    reducerMap: {\n      logInState,\n      accountType,\n      activatedRoute,\n      crumbs,\n      urlMatchFound,\n      userData,\n      agentCurrentStatus,\n      searchDistributor\n    }\n    // This module uses redux-saga middleware\n    // This property will be be used by the SagaExtension\n    // to run sagas for the moduleD\n  };\n}\n","import { useLoading, Grid } from '@agney/react-loading';\nimport { Box } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport React from 'react';\n\nconst useStyle = makeStyles((dtheme) => ({\n    root: {\n      height: '100%',\n      width: '100%',\n      backgroundColor: dtheme.palette.primary.light,\n      color: 'white'\n    }\n}));\n\nexport default function MainLoader() {\n    const classes = useStyle();\n    const { containerProps, indicatorEl } = useLoading({\n      loading: true,\n      indicator: <Grid width=\"50\" height=\"50\" />,\n    });\n\n    return (\n      <Box\n        {...containerProps}\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        display=\"flex\"\n        className={classes.root}\n      >\n        {indicatorEl}\n      </Box>\n    );\n  }\n","import React from 'react';\n\nconst Logo = props => {\n  return (\n    <img\n      alt=\"Logo\"\n      src=\"/static/mt.png\"\n      {...props}\n      style={{ height: '50px', width: '100px' }}\n    />\n  );\n};\n\nexport default Logo;\n","export const AUTH = '/api'\nexport const AGENT_SERVICE = '/agentservice'\nexport const AMI = '/ami'\n\n\nexport const CAMPAIGN = '/fileupload'\nexport const CAMPAIGN_REPORT = '/fileupload'\nexport const UPLOAD_FILE = '/fileupload'\n\nexport const AGENT_PERFORMANCE = '/agentservice'\n\n\n\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n// import config from '../modules/ticketing/views/config.json';\nimport { Link, Link as RouterLink, useHistory } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  AppBar,\n  Badge,\n  Box,\n  Hidden,\n  IconButton,\n  Toolbar,\n  makeStyles,\n  Typography,\n  InputBase,\n  fade,\n  Tooltip,\n  Button\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\nimport Logo from 'src/modules/dashboard-360/components/Logo';\nimport { SearchIcon } from '@material-ui/data-grid';\nimport AccountBoxRoundedIcon from '@material-ui/icons/AccountBoxRounded';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport { setLoggedIn, setSearchDistributor } from 'src/redux/action';\nimport { connect } from 'react-redux';\nimport Axios from 'axios';\nimport { SET_SEARCH_DISTRIBUTOR } from 'src/redux/constants';\n\nimport {\n\n  AGENT_SERVICE,\n  AMI\n} from 'src/modules/dashboard-360/utils/endpoints';\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  avatar: {\n    width: 60,\n    height: 60\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(4),\n      width: 'auto'\n    }\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    fontWeight: 500,\n    marginRight: 15,\n    fontSize: '0.96rem',\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  inputRoot: {\n    color: 'white'\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '18ch',\n      '&:focus': {\n        width: '30ch'\n      }\n    }\n  }\n}));\n\nvar APIENDPOINT = 'http://192.168.4.44:53003';\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n/// addToQueue start //////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction addToQueue(agentId, queue) {\n  var axios = require('axios');\n  var data = JSON.stringify({\n    agentId: agentId,\n    queue: queue,\n    action: 'QueueAdd'\n  });\n\n  var config = {\n    method: 'get',\n    url:\n      APIENDPOINT +\n      '/ami/actions/addq?Interface=' + agentId + '&Queue=' +\n      queue +\n      '',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  axios(config)\n    .then(function (response) { })\n    .catch(function (error) {\n      console.log(error);\n    });\n}\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n/// addToQueue end //////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n/// removeFromQueue start //////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction removeFromQueue(agentId, queue) {\n  var axios = require('axios');\n  console.log('remove', agentId)\n  var data = JSON.stringify({\n    agentId: agentId,\n    queue: queue,\n    action: 'QueueRemove'\n  });\n\n  var config = {\n    method: 'get',\n    url:\n      APIENDPOINT +\n      '/ami/actions/rmq?Queue=' +\n      queue +\n      '&Interface=' + agentId + '',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  axios(config)\n    .then(function (response) {\n      console.log(response)\n      // window.location.reload()\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n/// removeFromQueue end //////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\n\n\nconst TopBar = ({\n  className,\n  onMobileNavOpen,\n  logout,\n  searchDist,\n  ...rest\n}) => {\n  const userData = useSelector(state => state.userData);\n  const [createAccess, setCreateAccess] = useState(-1);\n  const [viewAccess, setViewAccess] = useState(-1);\n  const [assignAccess, setAssignAccess] = useState(-1);\n  const [reportsAccess, setReportsAccess] = useState(-1);\n  const [editAccess, setEditAccess] = useState(-1);\n  const [role, setRole] = useState(-1);\n  const classes = useStyles();\n  const [notifications] = useState([]);\n  const [searchText, setSearchText] = useState('');\n  useEffect(() => {\n\n  }, []);\n  const updateSearchText = evt => {\n    setSearchText(evt.target.value);\n  };\n  const distributorID = evt => {\n    console.log('searchText', searchText);\n    searchDist(searchText);\n  };\n  async function logoutUser() {\n\n    if (localStorage.getItem('role') === 'admin') {\n      logout()\n      localStorage.clear()\n      window.location.reload()\n    }\n\n    if (localStorage.getItem('callStatus') === 'AgentDisposed' || localStorage.getItem('callStatus') === 'LoggedIn' || localStorage.getItem('callStatus') === 'BREAKOUT' || localStorage.getItem('callStatus') === 'BREAKIN') {\n      var axios = require('axios');\n      var data = JSON.stringify({ \"Event\": \"LoggedOut\" });\n\n      var config = {\n        method: 'put',\n        url: `${AGENT_SERVICE}/agents/${localStorage.getItem('Agent_Object_ID')}`,\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        data: data\n      };\n\n      axios(config)\n        .then(function (response) {\n          console.log(JSON.stringify(response.data), \"status changed\");\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n\n      var axios = require('axios');\n      var data = '';\n\n      var config = {\n        method: 'get',\n        url: `${AMI}/actions/rmq?Queue=${localStorage.getItem('Queue')}&Interface=SIP/${localStorage.getItem('AgentSIPID')}`,\n        headers: {},\n        data: data\n      };\n\n      axios(config)\n        .then(function (response) {\n          console.log(response.data, \"removed from queue\");\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n\n      const AgentSIPID = localStorage.getItem('AgentSIPID')\n      var axios = require('axios');\n      var config = {\n        method: 'get',\n        url: `${AMI}/actions/break?Queue=${localStorage.getItem('Queue')}&Interface=SIP%2F${AgentSIPID}&Reason=BREAK_IN&Break=true`,\n        headers: {}\n      };\n\n      axios(config)\n        .then(function (response) {\n          console.log((response.data));\n          logout()\n          localStorage.clear()\n          window.location.reload()\n\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n  }\n  var test = \"#0040ff\"\n  return (\n    <AppBar className={clsx(classes.root, className)} elevation={0} {...rest} style={{ background: `${test}` }}>\n      <Toolbar>\n        <RouterLink to=\"/\">\n          <Logo />\n        </RouterLink>\n\n\n        <Box flexGrow={1} />\n        <Hidden mdDown>\n          {localStorage.getItem(\"role\") === \"Agent\" ? <Typography className={classes.title} variant=\"h5\" noWrap>\n            <Link to=\"/dash360\" className=\"color-white\">\n              Agent {localStorage.getItem('Agenttype') + ' ' + localStorage.getItem('AgentSIPID')}\n            </Link>\n          </Typography> : <></>}\n\n          {viewAccess === -1 ? (\n            ''\n          ) : (\n            <></>\n          )}\n\n\n          {/* {\n            localStorage.getItem('role') === 'admin' ? (\n              <Tooltip title=\"Campaign\">\n                <IconButton color=\"inherit\">\n                  <Link to='/campaign' className=\"color-white\"><Typography>Campaign</Typography></Link>\n                </IconButton>\n              </Tooltip>\n            ) : (null)\n          }\n          {\n            localStorage.getItem('role') === 'admin' ? (\n              <Tooltip title=\"IVR Campaign\">\n                <IconButton color=\"inherit\">\n                  <Link to='/ivrcampaign' className=\"color-white\"><Typography>IVR Campaign</Typography></Link>\n                </IconButton>\n              </Tooltip>\n            ) : (null)\n          }\n          {\n            localStorage.getItem('role') === 'admin' ? (\n              <Tooltip title=\"Campaign\">\n                <IconButton color=\"inherit\">\n                  <Link to='/manageagents' className=\"color-white\"><Typography>manageAgents</Typography></Link>\n                </IconButton>\n              </Tooltip>\n            ) : (null)\n          }\n          {\n            localStorage.getItem('role') === 'admin' ? (\n              <Tooltip title=\"IVR Campaign\">\n                <IconButton color=\"inherit\">\n                  <Link to='/interactionreport' className=\"color-white\"><Typography>Interaction Report</Typography></Link>\n                </IconButton>\n              </Tooltip>\n            ) : (null)\n          }\n          {\n            localStorage.getItem('role') === 'admin' ? (\n              <Tooltip title=\"IVR Campaign\">\n                <IconButton color=\"inherit\">\n                  <Link to='/agentPerformance' className=\"color-white\"><Typography>Agent Performance</Typography></Link>\n                </IconButton>\n              </Tooltip>\n            ) : (null)\n          } */}\n\n\n          <Tooltip title=\"Logout\">\n            <IconButton color=\"inherit\" onClick={() => logoutUser()}>\n              <ExitToAppIcon />\n            </IconButton>\n          </Tooltip>\n        </Hidden>\n        <Hidden lgUp>\n          <IconButton color=\"inherit\" onClick={onMobileNavOpen}>\n            <MenuIcon />\n          </IconButton>\n        </Hidden>\n      </Toolbar>\n    </AppBar>\n  );\n};\nconst mapStateToProps = state => ({\n  searchtextdist: state.searchDistributor\n});\n\nconst mapDispatchToProps = dispatch => ({\n  logout: () => dispatch(setLoggedIn(false)),\n  searchDist: val => dispatch(setSearchDistributor(val))\n});\n\nTopBar.propTypes = {\n  className: PropTypes.string,\n  onMobileNavOpen: PropTypes.func,\n  logout: PropTypes.func,\n  searchDist: PropTypes.func\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TopBar);\n","import React from 'react';\nimport { NavLink as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  ListItem,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  item: {\n    display: 'flex',\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  button: {\n    color: theme.palette.text.secondary,\n    fontWeight: theme.typography.fontWeightMedium,\n    justifyContent: 'flex-start',\n    letterSpacing: 0,\n    padding: '10px 8px',\n    textTransform: 'none',\n    width: '100%'\n  },\n  icon: {\n    marginRight: theme.spacing(1)\n  },\n  title: {\n    marginRight: 'auto'\n  },\n  active: {\n    color: theme.palette.primary.main,\n    '& $title': {\n      fontWeight: theme.typography.fontWeightMedium\n    },\n    '& $icon': {\n      color: theme.palette.primary.main\n    }\n  }\n}));\n\nconst NavItem = ({\n  className,\n  href,\n  icon: Icon,\n  title,\n  ...rest\n}) => {\n  const classes = useStyles();\n\n  return (\n    <ListItem\n      className={clsx(classes.item, className)}\n      disableGutters\n      {...rest}\n    >\n      <Button\n        activeClassName={classes.active}\n        className={classes.button}\n        component={RouterLink}\n        to={href}\n      >\n        {Icon && (\n          <Icon\n            className={classes.icon}\n            size=\"20\"\n          />\n        )}\n        <span className={classes.title}>\n          {title}\n        </span>\n      </Button>\n    </ListItem>\n  );\n};\n\nNavItem.propTypes = {\n  className: PropTypes.string,\n  href: PropTypes.string,\n  icon: PropTypes.elementType,\n  title: PropTypes.string\n};\n\nexport default NavItem;\n","import React, { useEffect } from 'react';\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Divider,\n  Drawer,\n  Hidden,\n  List,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport {\n  AlertCircle as AlertCircleIcon,\n  BarChart as BarChartIcon,\n  Lock as LockIcon,\n  Settings as SettingsIcon,\n  ShoppingBag as ShoppingBagIcon,\n  User as UserIcon,\n  UserPlus as UserPlusIcon,\n  Users as UsersIcon\n} from 'react-feather';\nimport NavItem from './NavItem';\n\nconst user = {\n  avatar: '/static/images/avatars/avatar_6.png',\n  jobTitle: 'Senior Developer',\n  name: 'Katarina Smith'\n};\n\nconst items = [\n  {\n    href: '/app/dashboard',\n    icon: BarChartIcon,\n    title: 'Dashboard'\n  },\n  {\n    href: '/app/customers',\n    icon: UsersIcon,\n    title: 'Customers'\n  },\n  {\n    href: '/app/products',\n    icon: ShoppingBagIcon,\n    title: 'Products'\n  },\n  {\n    href: '/app/account',\n    icon: UserIcon,\n    title: 'Account'\n  },\n  {\n    href: '/app/settings',\n    icon: SettingsIcon,\n    title: 'Settings'\n  },\n  {\n    href: '/login',\n    icon: LockIcon,\n    title: 'Login'\n  },\n  {\n    href: '/register',\n    icon: UserPlusIcon,\n    title: 'Register'\n  },\n  {\n    href: '/404',\n    icon: AlertCircleIcon,\n    title: 'Error'\n  }\n];\n\nconst useStyles = makeStyles(() => ({\n  mobileDrawer: {\n    width: 256\n  },\n  desktopDrawer: {\n    width: 256,\n    top: 64,\n    height: 'calc(100% - 64px)'\n  },\n  avatar: {\n    cursor: 'pointer',\n    width: 64,\n    height: 64\n  }\n}));\n\nconst NavBar = ({ onMobileClose, openMobile }) => {\n  const classes = useStyles();\n  const location = useLocation();\n\n  useEffect(() => {\n    if (openMobile && onMobileClose) {\n      onMobileClose();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location.pathname]);\n\n  const content = (\n    <Box height=\"100%\" display=\"flex\" flexDirection=\"column\">\n      <Box alignItems=\"center\" display=\"flex\" flexDirection=\"column\" p={2}>\n        <Avatar\n          className={classes.avatar}\n          component={RouterLink}\n          src={user.avatar}\n          to=\"/app/account\"\n        />\n        <Typography className={classes.name} color=\"textPrimary\" variant=\"h5\">\n          {user.name}\n        </Typography>\n        <Typography color=\"textSecondary\" variant=\"body2\">\n          {user.jobTitle}\n        </Typography>\n      </Box>\n      <Divider />\n      <Box p={2}>\n        <List>\n          {items.map(item => (\n            <NavItem\n              href={item.href}\n              key={item.title}\n              title={item.title}\n              icon={item.icon}\n            />\n          ))}\n        </List>\n      </Box>\n      <Box flexGrow={1} />\n    </Box>\n  );\n\n  return (\n    <>\n      <Hidden lgUp>\n        <Drawer\n          anchor=\"left\"\n          classes={{ paper: classes.mobileDrawer }}\n          onClose={onMobileClose}\n          open={openMobile}\n          variant=\"temporary\"\n        >\n          {content}\n        </Drawer>\n      </Hidden>\n    </>\n  );\n};\n\nNavBar.propTypes = {\n  onMobileClose: PropTypes.func,\n  openMobile: PropTypes.bool\n};\n\nNavBar.defaultProps = {\n  onMobileClose: () => {},\n  openMobile: false\n};\n\nexport default NavBar;\n","import { SET_DISTRIBUTOR_ORDERS, SET_DISTRIBUTOR_INVOICES } from './constants';\n\n// export const setActionAfterLogIn = (actionType, courseId) => {\n//     return {\n//         type: SET_LOGIN_ACTION,\n//         actionType,\n//         payload: courseId\n//     };\n// };\n\nexport const setDistributorOrders = orders => {\n  return {\n    type: SET_DISTRIBUTOR_ORDERS,\n    payload: orders\n  };\n};\n\nexport const setDistributorInvoices = invoices => {\n  return {\n    type: SET_DISTRIBUTOR_INVOICES,\n    payload: invoices\n  };\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const orderColumns = [\n  {\n    field: 'OrderNumber',\n    headerName: 'Order ID',\n    renderCell: rowData => (\n      <Link to={`/dash360/admin/orders/${rowData.row.OrderNumber}`}>\n        {rowData.row.OrderNumber}\n      </Link>\n    )\n  },\n  {\n    field: 'CreatedType',\n    flex: 1,\n    headerName: 'Created Type'\n  },\n  {\n    field: 'StatusKey',\n    flex: 1,\n    headerName: 'Status'\n  },\n  {\n    flex: 1,\n    field: 'CreatedOn',\n    headerName: 'Created On'\n  }\n];\n\nexport const invoicesColumns = [\n  {\n    renderCell: rowData => (\n      <Link to={`/dash360/admin/invoices/${rowData.row.InvoiceNumber}`}>\n        {rowData.row.InvoiceNumber}\n      </Link>\n    ),\n    headerName: 'Invoice Number',\n    field: 'InvoiceNumber',\n    flex: 1\n  },\n  {\n    field: 'InvoiceAmount',\n    headerName: 'Amount',\n    flex: 1\n  },\n  {\n    field: 'Status',\n    headerName: 'Status',\n    flex: 1\n  },\n  {\n    field: 'BillingMobile',\n    headerName: 'Billing Mobile',\n    flex: 1\n  }\n];\n\n\nexport const lastFiveCallData = [\n  // {\n  //   // renderCell: rowData => (\n  //   //   <Link to={`/dash360/admin/agentlastfive/${rowData.row.InvoiceNumber}`}>\n  //   //     {rowData.row.InvoiceNumber}\n  //   //   </Link>\n  //   // ),\n  //   headerName: 'Unique ID',\n  //   field: 'asterixUniqueID',\n  //   flex: 1\n  // },\n//   CallerName: \"Vikram\"\n// agentExtension: \"9935413775\"\n// agentID: \"9935413775\"\n// asterixUniqueID: \"1612366994.18522\"\n// callerapplication: \"Ci5678976\"\n// callermobilenumber: \"9935413775\"\n// category: \"Tapstart\"\n// comments: \"TEST COMMENTS\"\n// contactedNumber: \"09845090402\"\n// created: \"2021-02-03T15:40:54.562Z\"\n// createdAt: \"2021-02-03T15:40:54.565Z\"\n// issuetype: \"Request\"\n// seccategory: \"Application Status\"\n// secsubcategory: \"AIP\"\n// subcategory: \"Reject\"\n// type: \"open\"\n\n  {\n    field: 'CallerName',\n    headerName: 'CallerName',\n    flex: 1\n  },\n  {\n    field: 'callerapplication',\n    headerName: 'Caller Application',\n    flex: 1\n  },\n  {\n    field: 'issuetype',\n    headerName: 'Issue Type',\n    flex: 1\n  },\n  {\n    field: 'category',\n    headerName: 'Patner Name',\n    flex: 1\n  },\n  {\n    field: 'seccategory',\n    headerName: 'Tag',\n    flex: 1\n  },\n  {\n    field: 'subcategory',\n    headerName: 'Sub Tag 1',\n    flex: 1\n  },\n  {\n    field: 'secsubcategory',\n    headerName: 'Sub Tag 2',\n    flex: 1\n  },\n  {\n    field: 'type',\n    headerName: 'Type',\n    flex: 1\n  },\n  \n  {\n    field: 'comments',\n    headerName: 'comments',\n    flex: 1\n  },\n  \n  {\n    field: 'created',\n    headerName: 'Date',\n    flex: 1\n  }\n];\n\nexport const AgentCallColumns = [\n  {\n    field: 'CallerName',\n    headerName: 'CallerName',\n    flex: 1\n  },\n  {\n    field: 'callerapplication',\n    headerName: 'Caller Application',\n    flex: 1\n  },\n  {\n    field: 'issuetype',\n    headerName: 'Issue Type',\n    flex: 1\n  },\n  {\n    field: 'category',\n    headerName: 'Patner Name',\n    flex: 1\n  },\n  {\n    field: 'seccategory',\n    headerName: 'Tag',\n    flex: 1\n  },\n  {\n    field: 'subcategory',\n    headerName: 'Sub Tag 1',\n    flex: 1\n  },\n  {\n    field: 'secsubcategory',\n    headerName: 'Sub Tag 2',\n    flex: 1\n  },\n  {\n    field: 'type',\n    headerName: 'Type',\n    flex: 1\n  },\n  \n  {\n    field: 'comments',\n    headerName: 'comments',\n    flex: 1\n  },\n  \n  {\n    field: 'created',\n    headerName: 'Date',\n    flex: 1\n  }\n];\nexport const DistributerCallColumns = [\n  {\n    // renderCell: rowData => (\n    //   <Link to={`/dash360/admin/agentlastfive/${rowData.row.InvoiceNumber}`}>\n    //     {rowData.row.InvoiceNumber}\n    //   </Link>\n    // ),\n    headerName: 'Unique ID',\n    field: 'asterixUniqueID',\n    flex: 1\n  },\n  // {\n  //   field: 'agentID',\n  //   headerName: 'Agent ID',\n  //   flex: 1\n  // },\n  {\n    field: 'type',\n    headerName: 'Type',\n    flex: 1\n  },\n  {\n    field: 'category',\n    headerName: 'Category',\n    flex: 1\n  },\n  {\n    field: 'subcategory',\n    headerName: 'Sub Category',\n    flex: 1\n  },\n  {\n    field: 'solution',\n    headerName: 'solution',\n    flex: 1\n  },\n  {\n    field: 'comments',\n    headerName: 'Comments',\n    flex: 1\n  },\n  {\n    field: 'created',\n    headerName: 'Date',\n    flex: 1\n  }\n];\n\nexport const CallerInteractioncolumns = [\n  {\n    field: 'CallerName',\n    headerName: 'CallerName',\n    flex: 1\n  },\n  {\n    field: 'callerapplication',\n    headerName: 'Caller Application',\n    flex: 1\n  },\n  {\n    field: 'issuetype',\n    headerName: 'Issue Type',\n    flex: 1\n  },\n  {\n    field: 'category',\n    headerName: 'Patner Name',\n    flex: 1\n  },\n  {\n    field: 'seccategory',\n    headerName: 'Tag',\n    flex: 1\n  },\n  {\n    field: 'subcategory',\n    headerName: 'Sub Tag 1',\n    flex: 1\n  },\n  {\n    field: 'secsubcategory',\n    headerName: 'Sub Tag 2',\n    flex: 1\n  },\n  {\n    field: 'type',\n    headerName: 'Type',\n    flex: 1\n  },\n  \n  {\n    field: 'comments',\n    headerName: 'comments',\n    flex: 1\n  },\n  \n  {\n    field: 'created',\n    headerName: 'Date',\n    flex: 1\n  },\n  {\n    field: 'callermobilenumber',\n    headerName: 'caller Number',\n    flex: 1\n  }\n];\n\n\n","import { Alert } from '@material-ui/lab';\nimport React from 'react';\n\nexport default function CommonAlert({ variant, text, ...rest }) {\n  return (\n    <Alert severity={variant || 'error'} {...rest}>\n      {text || 'Something went wrong! Please try again'}\n    </Alert>\n  );\n}\n","import React from 'react';\nimport {\n    JsonToCsv,\n\n} from 'react-json-csv';\n\nexport default function DownloadReport({ DownloadData }) {\n\n    var filename = 'Download'\n    var fields = {\n        \"no data\": \"no data\"\n    }\n    var style = {\n        padding: \"5px\"\n    }\n    var data = [{\n        \"no data\": \"\"\n    }]\n    var text = \"Download\";\n    if (DownloadData.length) {\n\n        var result = Object.keys(DownloadData[0])\n        var header = {};\n        for (var i = 0; i < result.length; i += 1) {\n            header[result[i]] = result[i];\n        }\n        filename = 'Download'\n        fields = header\n        style = {\n            padding: \"5px\"\n        }\n        data = DownloadData\n        text = \"Download Campaign Data\"\n\n\n    }\n    else {\n        filename = 'Download'\n        fields = {\n            \"no data\": \"\"\n        }\n        style = {\n            padding: \"5px\"\n        }\n        data = [{\n            \"no data\": \"no data\"\n        }]\n        text = \"Download\"\n    }\n    return (\n        <div>\n            {DownloadData.length ? <JsonToCsv\n                data={data}\n                filename={filename}\n                fields={fields}\n                style={style}\n                text={text}\n            /> : <></>}\n        </div>\n\n    );\n}\n","import { DataGrid } from '@material-ui/data-grid';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { setDistributorInvoices } from 'src/modules/dashboard-360/redux/action';\nimport { invoicesColumns } from 'src/modules/dashboard-360/utils/columns-config';\nimport PropTypes from 'prop-types';\nimport CommonAlert from 'src/components/CommonAlert';\nimport MainLoader from 'src/components/MainLoader';\nimport { Box, makeStyles, Typography } from '@material-ui/core';\nimport {\n  getDealerInvoiceDetails,\n  getSingleInvoiceDetails\n} from '../../DashboardView/apiCalls';\nimport CustomBreadcrumbs from 'src/components/CustomBreadcrumbs';\nimport DownloadReport from '../../DashboardView/DownloadReport';\n\nconst style = makeStyles(() => ({\n  dgContainer: {\n    maxHeight: 628,\n    paddingLeft: \"16px\",\npaddingRight: \"16px\",\n  }\n}));\nfunction Invoices({\n  distributorInvoices,\n  setDistributorInvoicesAction,\n  ...props\n}) {\n  const classes = style();\n  const [showLoader, setShowLoader] = useState(true);\n  const {\n    match: {\n      params: { orderId }\n    }\n  } = props;\n\n  const [invoiceDetails, setSingleInvoiceDetails] = useState(null);\n\n  const orderIdPrev = useRef(orderId);\n\n  useEffect(() => {\n    \n    if (!distributorInvoices || orderIdPrev !== orderId) {\n     \n      (async function getDetails() {\n        try {\n          const res = await (orderId\n            ? getSingleInvoiceDetails(orderId)\n            : getDealerInvoiceDetails(1001));\n          if (!orderId) {\n            setDistributorInvoicesAction(res.data.data);\n          } else {\n            setSingleInvoiceDetails(res.data.data);\n          }\n        } catch (error) {\n        } finally {\n          setShowLoader(false);\n        }\n      })();\n    }\n  }, [orderId]);\n  const [page, setPage] = useState(1);\n  return distributorInvoices ? (\n    // <Card>\n    <div className={classes.dgContainer}>\n      <Box>\n        <CustomBreadcrumbs />\n      </Box>\n      <Box padding=\"1rem 0.5rem\">\n        <Typography variant=\"h6\" component=\"h4\">\n          All Invoices\n        </Typography>\n      </Box>\n      {distributorInvoices.length?<DownloadReport\n      DownloadData={distributorInvoices}\n      \n      />:<></>}\n      <DataGrid\n        page={page}\n        onPageChange={params => {\n          setPage(params.page);\n        }}\n        pageSize={10}\n        rowsPerPageOptions={[5, 10, 20]}\n        pagination\n        autoHeight\n        columns={invoicesColumns}\n        rows={distributorInvoices.map(order => ({\n          ...order,\n          id: order.InvoiceNumber\n        }))}\n      />\n    </div>\n  ) : // </Card>\n  showLoader ? (\n    <MainLoader />\n  ) : (\n    <CommonAlert style={{ margin: 20 }} />\n  );\n}\n\nInvoices.propTypes = {\n  distributorInvoices: PropTypes.arrayOf(PropTypes.object),\n  setDistributorInvoicesAction: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  distributorInvoices: state.distributorInvoices\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setDistributorInvoicesAction: invoices =>\n    dispatch(setDistributorInvoices(invoices))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Invoices);\n","import { DataGrid } from '@material-ui/data-grid';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { setDistributorOrders } from 'src/modules/dashboard-360/redux/action';\nimport { orderColumns } from 'src/modules/dashboard-360/utils/columns-config';\nimport PropTypes from 'prop-types';\nimport CommonAlert from 'src/components/CommonAlert';\nimport MainLoader from 'src/components/MainLoader';\nimport { Box, makeStyles, Typography } from '@material-ui/core';\nimport {\n  getDealerOrderDetails,\n  getSingleOrderDetails\n} from '../../DashboardView/apiCalls';\nimport CustomBreadcrumbs from 'src/components/CustomBreadcrumbs';\nimport DownloadReport from '../../DashboardView/DownloadReport';\n\nconst style = makeStyles(() => ({\n  dgContainer: {\n    maxHeight: 628,\n    maxWidth: '100%',\n    paddingLeft: \"16px\",\n    paddingRight: \"16px\",\n  }\n}));\nfunction Orders({ distributorOrders, setDistributorOrdersAction, ...props }) {\n  const classes = style();\n  const [showLoader, setShowLoader] = useState(true);\n  const {\n    match: {\n      params: { orderId }\n    }\n  } = props;\n\n  const [orderDetails, setSingleOrderDetails] = useState(null);\n\n  const orderIdPrev = useRef(orderId);\n\n  useEffect(() => {\n    if (!distributorOrders || orderIdPrev !== orderId) {\n      (async function getDetails() {\n        try {\n          const res = await (orderId\n            ? getSingleOrderDetails(orderId)\n            : getDealerOrderDetails(1001));\n          if (!orderId) {\n            setDistributorOrdersAction(res.data.data);\n          } else {\n            setSingleOrderDetails(res.data.data);\n          }\n        } catch (error) {\n        } finally {\n          setShowLoader(false);\n        }\n      })();\n    }\n  }, [orderId]);\n  const [page, setPage] = useState(1);\n  return distributorOrders ? (\n    // <Card>\n    <div className={classes.dgContainer}>\n      <CustomBreadcrumbs />\n      <Box padding=\"1rem 0.5rem\">\n        <Typography variant=\"h6\" component=\"h4\">\n          All Orders\n        </Typography>\n      </Box>\n      <DownloadReport\n        DownloadData={distributorOrders}\n\n      />\n\n      <DataGrid\n        page={page}\n        onPageChange={params => {\n          setPage(params.page);\n        }}\n        pageSize={10}\n        rowsPerPageOptions={[5, 10, 20]}\n        pagination\n        autoHeight\n        columns={orderColumns}\n        rows={distributorOrders.map(order => ({\n          ...order,\n          id: order.OrderNumber\n        }))}\n      />\n\n    </div>\n  ) : // </Card>\n    showLoader ? (\n      <MainLoader />\n    ) : (\n        <CommonAlert style={{ margin: 20 }} />\n      );\n}\n\nOrders.propTypes = {\n  distributorOrders: PropTypes.arrayOf(PropTypes.object),\n  setDistributorOrdersAction: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  distributorOrders: state.distributorOrders\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setDistributorOrdersAction: orders => dispatch(setDistributorOrders(orders))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders);\n","import React, { forwardRef } from 'react';\nimport { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\n\nconst Page = forwardRef(({\n  children,\n  title = '',\n  ...rest\n}, ref) => {\n  return (\n    <div\n      ref={ref}\n      {...rest}\n    >\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      {children}\n    </div>\n  );\n});\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string\n};\n\nexport default Page;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Card,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  makeStyles\n} from '@material-ui/core';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport { Link } from 'react-router-dom';\n\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  actions: {\n    justifyContent: 'flex-end'\n  },\n  linkContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    fontWeight: 'bold'\n  }\n}));\n\nconst BasicTable = ({\n  columns,\n  className,\n  records,\n  redirectLink,\n  redirectLabel,\n  setRootData,\n  setdealerDetails,\n  selectedData,\n  ...rest\n}) => {\n  const classes = useStyles();\n  function showthedata(row){\n   \n    selectedData(row)\n    // setdealerDetails(row)\n\n    // localStorage.setItem('L1ID',row.asterixUniqueID)\n    // setRootData([[],[{\n    //    callNumber:row.callerNumber,\n    //      callerName:row.CallerName\n    //    }],[],[],[]])\n    // setCallerDetails({\n    //   callNumber:row.callerNumber,\n    //   callerName:row.CallerName\n    // })\n    // props.setdealerDetails({\n    //   callNumber:row.callerNumber,\n    //   callerName:row.CallerName\n    // })\n    \n    // alert('data')\n  }\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <Divider />\n      <PerfectScrollbar>\n        <Box width={'100%'}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                {columns.map((col, index) => (\n                  <TableCell key={col.field || index}>\n                    {col.headerName}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {records?.map((record, index) => (\n                <TableRow hover key={record.id || index}  onClick={( ) => showthedata(record)}>\n                  {columns.map((col, index2) => (\n                    <TableCell key={`cell-${index}-${index2}`}>\n                      {col.renderCell\n                        ? col.renderCell({ row: record })\n                        : record[col.field]}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      {redirectLink && (\n        <Box display=\"flex\" justifyContent=\"flex-end\" p={2} alignItems=\"center\">\n          <Link to={redirectLink} className={classes.linkContainer}>\n            {redirectLabel}\n            <ArrowRightIcon />\n          </Link>\n        </Box>\n      )}\n    </Card>\n  );\n};\n\nBasicTable.propTypes = {\n  className: PropTypes.string,\n  columns: PropTypes.arrayOf(\n    PropTypes.shape({\n      field: PropTypes.string,\n      headerName: PropTypes.string\n    })\n  ),\n  records: PropTypes.arrayOf(PropTypes.any),\n  redirectLink: PropTypes.string,\n  redirectLabel: PropTypes.string\n};\n\nexport default BasicTable;\n","import React, { useEffect } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { purple, grey } from '@material-ui/core/colors';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nconst PurpleSwitch = withStyles({\n    switchBase: {\n        color: purple[300],\n        '&$checked': {\n            color: purple[500],\n        },\n        '&$checked + $track': {\n            backgroundColor: purple[500],\n        },\n    },\n    checked: {},\n    track: {},\n})(Switch);\n\n\nconst GreySwitch = withStyles({\n    switchBase: {\n        color: grey[300],\n        '&$checked': {\n            color: grey[500],\n        },\n        '&$checked + $track': {\n            backgroundColor: grey[500],\n        },\n    },\n    checked: {},\n    track: {},\n})(Switch);\n\nconst IOSSwitch = withStyles((theme) => ({\n    root: {\n        width: 42,\n        height: 26,\n        padding: 0,\n        margin: theme.spacing(1),\n    },\n    switchBase: {\n        padding: 1,\n        '&$checked': {\n            transform: 'translateX(16px)',\n            color: theme.palette.common.white,\n            '& + $track': {\n                backgroundColor: '#52d869',\n                opacity: 1,\n                border: 'none',\n            },\n        },\n        '&$focusVisible $thumb': {\n            color: '#52d869',\n            border: '6px solid #fff',\n        },\n    },\n    thumb: {\n        width: 24,\n        height: 24,\n    },\n    track: {\n        borderRadius: 26 / 2,\n        border: `1px solid ${theme.palette.grey[400]}`,\n        backgroundColor: theme.palette.grey[50],\n        opacity: 1,\n        transition: theme.transitions.create(['background-color', 'border']),\n    },\n    checked: {},\n    focusVisible: {},\n}))(({ classes, ...props }) => {\n    return (\n        <Switch\n            focusVisibleClassName={classes.focusVisible}\n            disableRipple\n            classes={{\n                root: classes.root,\n                switchBase: classes.switchBase,\n                thumb: classes.thumb,\n                track: classes.track,\n                checked: classes.checked,\n            }}\n            {...props}\n        />\n    );\n});\n\nconst AntSwitch = withStyles((theme) => ({\n    root: {\n        width: 28,\n        height: 16,\n        padding: 0,\n        display: 'flex',\n    },\n    switchBase: {\n        padding: 2,\n        color: theme.palette.grey[500],\n        '&$checked': {\n            transform: 'translateX(12px)',\n            color: theme.palette.common.white,\n            '& + $track': {\n                opacity: 1,\n                backgroundColor: theme.palette.primary.main,\n                borderColor: theme.palette.primary.main,\n            },\n        },\n    },\n    thumb: {\n        width: 12,\n        height: 12,\n        boxShadow: 'none',\n    },\n    track: {\n        border: `1px solid ${theme.palette.grey[500]}`,\n        borderRadius: 16 / 2,\n        opacity: 1,\n        backgroundColor: theme.palette.common.white,\n    },\n    checked: {},\n}))(Switch);\n\nexport default function CustomizedSwitches(props) {\n    var breakStatus = true;\n    var agentStatus = false\n\n    const handle = () => {\n        if (localStorage.getItem('Break_Status') === 'OUT') {\n            breakStatus = true;\n        }\n        if (localStorage.getItem('Break_Status') === 'IN') {\n            breakStatus = false;\n        }\n        var agentStatus = true;\n        if (localStorage.getItem('AgentType') === 'Inbound') {\n            agentStatus = false;\n        }\n        if (localStorage.getItem('AgentType') === 'Outbound') {\n            agentStatus = true;\n        }\n\n    }\n\n\n    const [state, setState] = React.useState({\n        checkedA: agentStatus,\n        checkedB: breakStatus,\n        checkedC: false,\n    });\n\n    useEffect(() => {\n        handle()\n\n    }, [props])\n\n    // console.log(\"props\", props)\n\n    const handleChange = (event) => {\n        console.log('handleChange', event.target.name)\n        console.log('handleChange', event.target.checked)\n        setState({ ...state, [event.target.name]: event.target.checked });\n        if (event.target.name === 'checkedA') {\n            // props.breakService('test')\n            if (event.target.checked) {\n                localStorage.setItem('AgentType', 'Outbound')\n                props.removeFromQueue(`SIP/${localStorage.getItem('AgentSIPID')}`, 5003)\n                // setState({ ...state, ['checkedB']: true });\n            } else {\n                localStorage.setItem('AgentType', 'Inbound')\n                props.addToQueue(`SIP/${localStorage.getItem('AgentSIPID')}`, 5003);\n            }\n\n\n        }\n        if (event.target.name === 'checkedB') {\n            props.breakService()\n        }\n    };\n\n    return (\n        <FormGroup>\n            {/* <FormControlLabel\n                control={<GreySwitch checked={state.checkedA} onChange={handleChange} disabled={state.checkedB} name=\"checkedA\" />}\n                label=\"Inbound-Outbound\"\n            /> */}\n            <FormControlLabel\n                control={<GreySwitch checked={state.checkedB} onChange={handleChange} disabled={state.checkedA} name=\"checkedB\" />}\n                label=\"Away-Active\"\n            />\n            {/* <FormControlLabel\n        control={<IOSSwitch checked={state.checkedB} onChange={handleChange} name=\"checkedB\" />}\n        label=\"iOS style\"\n      />\n      <Typography component=\"div\">\n        <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\n          <Grid item>Off</Grid>\n          <Grid item>\n            <AntSwitch checked={state.checkedC} onChange={handleChange} name=\"checkedC\" />\n          </Grid>\n          <Grid item>On</Grid>\n        </Grid>\n      </Typography> */}\n        </FormGroup>\n    );\n}","import { Field, Form, Formik } from 'formik';\nimport React, { useRef, useState } from 'react';\nimport { TextField, RadioGroup } from 'formik-material-ui';\nimport { useEffect } from 'react';\nimport {\n  AMI\n} from 'src/modules/dashboard-360/utils/endpoints';\nimport {\n  Button,\n  FormControl,\n  FormControlLabel,\n  Grid,\n  makeStyles,\n  Radio, Checkbox, Typography\n} from '@material-ui/core';\nimport * as yup from 'yup';\nimport { Autocomplete } from '@material-ui/lab';\nimport { Category } from '@material-ui/icons';\nconst axios = require('axios');\nconst useStyle = makeStyles(() => ({\n  fieldContainer: {\n    width: '100%'\n  }\n}));\nexport default function DispositionForm(props) {\n  const [disable, setDisable] = useState(true)\n  const [takebreak, setTakebreak] = useState(false)\n  var APIENDPOINT = 'http://192.168.4.44:53003';\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  /// addToQueue start //////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  const onChangeTakebreak = (e) => setTakebreak(!takebreak)\n\n  useEffect(() => {\n    if (localStorage.getItem('callStatus') === 'AgentComplete') {\n      setDisable(false)\n    }\n  }, [props])\n\n  function addToQueue(agentId, queue) {\n    var axios = require('axios');\n    var data = JSON.stringify({\n      agentId: agentId,\n      queue: queue,\n      action: 'QueueAdd'\n    });\n\n    var config = {\n      method: 'get',\n      url:\n        APIENDPOINT +\n        '/ami/actions/addq?Interface=' + agentId + '&Queue=' +\n        queue +\n        '',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    axios(config)\n      .then(function (response) { })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  /// addToQueue end //////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  /// removeFromQueue start //////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  function removeFromQueue(agentId, queue) {\n    var axios = require('axios');\n    // console.log('remove', agentId)\n    var data = JSON.stringify({\n      agentId: agentId,\n      queue: queue,\n      action: 'QueueRemove'\n    });\n\n    var config = {\n      method: 'get',\n      url:\n        APIENDPOINT +\n        '/ami/actions/rmq?Queue=' +\n        queue +\n        '&Interface=' + agentId + '',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    axios(config)\n      .then(function (response) {\n\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  /// removeFromQueue end //////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\n  const [initialValue, setInitialValue] = useState({\n    CallerName: '',\n    callermobilenumber: '',\n    callerapplication: '',\n    subcategory: '',\n    category: '',\n    secsubcategory: '',\n    seccategory: '',\n    comments: '',\n    type: '',\n    issuetype: ''\n  });\n  const classes = useStyle();\n  const formRef = useRef({});\n  const agentServiceURL = 'http://164.52.205.10:42004/';\n\n  const [issuetypes, setissuetypes] = useState([\n    {\n      \"issuetype\": \"Tapstart\"\n    },\n    {\n      \"issuetype\": \"MUSKMELON\"\n    },\n    {\n      \"issuetype\": \"HDBFS\"\n    },\n    {\n      \"issuetype\": \"CREDIT SAISON\"\n    },\n    {\n      \"issuetype\": \"RBL\"\n    },\n    {\n      \"issuetype\": \"INCRED\"\n    },\n  ]);\n  const [categories, setCategories] = useState([\n    {\n      \"_id\": \"6019329a4d1d476d4ee4707c\",\n      \"category\": \"Positive\",\n      \"createdAt\": \"2021-02-02T11:08:10.879Z\",\n      \"updatedAt\": \"2021-02-02T11:08:10.879Z\",\n      \"__v\": 0\n    },\n    {\n      \"_id\": \"601947384d1d476d4ee4714c\",\n      \"category\": \"Negative\",\n      \"createdAt\": \"2021-02-02T12:36:08.951Z\",\n      \"updatedAt\": \"2021-02-02T12:36:08.951Z\",\n      \"__v\": 0\n    },\n    {\n      \"_id\": \"601947384d1d476d4ee4715c\",\n      \"category\": \"Hold\",\n      \"createdAt\": \"2021-02-02T12:36:08.951Z\",\n      \"updatedAt\": \"2021-02-02T12:36:08.951Z\",\n      \"__v\": 0\n    },\n    {\n      \"_id\": \"601947384d1d476d4ee4716c\",\n      \"category\": \"Already Positive\",\n      \"createdAt\": \"2021-02-02T12:36:08.951Z\",\n      \"updatedAt\": \"2021-02-02T12:36:08.951Z\",\n      \"__v\": 0\n    },\n    {\n      \"_id\": \"601947384d1d476d4ee4717c\",\n      \"category\": \"Details not Found\",\n      \"createdAt\": \"2021-02-02T12:36:08.951Z\",\n      \"updatedAt\": \"2021-02-02T12:36:08.951Z\",\n      \"__v\": 0\n    },\n  ]);\n  const [seccategories, setSecCategories] = useState([\n    {\n      \"_id\": \"601933d74d1d476d4ee47087\",\n      \"categoryid\": \"601947384d1d476d4ee4715c\",\n      \"secCategory\": \"Hold\",\n      \"createdAt\": \"2021-02-02T11:13:27.814Z\",\n      \"updatedAt\": \"2021-02-02T11:13:27.814Z\",\n      \"__v\": 0\n    },\n    {\n      \"_id\": \"601933e74d1d476d4ee47088\",\n      \"categoryid\": \"601947384d1d476d4ee4715c\",\n      \"secCategory\": \"Negative\",\n      \"createdAt\": \"2021-02-02T11:13:43.140Z\",\n      \"updatedAt\": \"2021-02-02T11:13:43.140Z\",\n      \"__v\": 0\n    },\n    {\n      \"_id\": \"601933f44d1d476d4ee47089\",\n      \"categoryid\": \"601947384d1d476d4ee4716c\",\n      \"secCategory\": \"Positive\",\n      \"createdAt\": \"2021-02-02T11:13:56.707Z\",\n      \"updatedAt\": \"2021-02-02T11:13:56.707Z\",\n      \"__v\": 0\n    },\n    {\n      \"_id\": \"601933f44d1d476d4ee47089\",\n      \"categoryid\": \"601947384d1d476d4ee4717c\",\n      \"secCategory\": \"Already Positive\",\n      \"createdAt\": \"2021-02-02T11:13:56.707Z\",\n      \"updatedAt\": \"2021-02-02T11:13:56.707Z\",\n      \"__v\": 0\n    },\n    {\n      \"_id\": \"601933f44d1d476d4ee47089\",\n      \"categoryid\": \"601947384d1d476d4ee4718c\",\n      \"secCategory\": \"Details not Found\",\n      \"createdAt\": \"2021-02-02T11:13:56.707Z\",\n      \"updatedAt\": \"2021-02-02T11:13:56.707Z\",\n      \"__v\": 0\n    },\n\n  ]);\n  const [finalsubCategories, setfinalsubCategories] = useState([])\n  const [subCategories, setSubCategories] = useState([\n\n    {\n      \"_id\": \"601936184d1d476d4ee4709f\",\n      \"secCategoryid\": \"601933d74d1d476d4ee47087\",\n      \"subCategory\": \"Call Disconnected\",\n      \"createdAt\": \"2021-02-02T11:23:04.642Z\",\n      \"updatedAt\": \"2021-02-02T11:23:04.642Z\",\n      \"__v\": 0\n    },\n    {\n      \"_id\": \"601936214d1d476d4ee470a0\",\n      \"secCategoryid\": \"601933d74d1d476d4ee47087\",\n      \"subCategory\": \"Busy\",\n      \"createdAt\": \"2021-02-02T11:23:13.853Z\",\n      \"updatedAt\": \"2021-02-02T11:23:13.853Z\",\n      \"__v\": 0\n    },\n    {\n      \"_id\": \"6019362c4d1d476d4ee470a1\",\n      \"secCategoryid\": \"601933d74d1d476d4ee47087\",\n      \"subCategory\": \"Call Back\",\n      \"createdAt\": \"2021-02-02T11:23:24.484Z\",\n      \"updatedAt\": \"2021-02-02T11:23:24.484Z\",\n      \"__v\": 0\n    },\n    {\n      \"_id\": \"6019362c4d1d476d4ee470a1\",\n      \"secCategoryid\": \"601933e74d1d476d4ee47088\",\n      \"subCategory\": \"Interest Rate\",\n      \"createdAt\": \"2021-02-02T11:23:24.484Z\",\n      \"updatedAt\": \"2021-02-02T11:23:24.484Z\",\n      \"__v\": 0\n    },\n    {\n      \"_id\": \"6019362c4d1d476d4ee470a1\",\n      \"secCategoryid\": \"601933e74d1d476d4ee47088\",\n      \"subCategory\": \"Need Low amount\",\n      \"createdAt\": \"2021-02-02T11:23:24.484Z\",\n      \"updatedAt\": \"2021-02-02T11:23:24.484Z\",\n      \"__v\": 0\n    },\n    {\n      \"_id\": \"6019362c4d1d476d4ee470a1\",\n      \"secCategoryid\": \"601933e74d1d476d4ee47088\",\n      \"subCategory\": \"Need High Tenure\",\n      \"createdAt\": \"2021-02-02T11:23:24.484Z\",\n      \"updatedAt\": \"2021-02-02T11:23:24.484Z\",\n      \"__v\": 0\n    },\n    {\n      \"_id\": \"6019362c4d1d476d4ee470a1\",\n      \"secCategoryid\": \"601933e74d1d476d4ee47088\",\n      \"subCategory\": \"Need Low Tenure\",\n      \"createdAt\": \"2021-02-02T11:23:24.484Z\",\n      \"updatedAt\": \"2021-02-02T11:23:24.484Z\",\n      \"__v\": 0\n    },\n    {\n      \"_id\": \"6019362c4d1d476d4ee470a1\",\n      \"secCategoryid\": \"601933e74d1d476d4ee47088\",\n      \"subCategory\": \"Docs Not available\",\n      \"createdAt\": \"2021-02-02T11:23:24.484Z\",\n      \"updatedAt\": \"2021-02-02T11:23:24.484Z\",\n      \"__v\": 0\n    },\n    {\n      \"_id\": \"6019362c4d1d476d4ee470a1\",\n      \"secCategoryid\": \"601933e74d1d476d4ee47088\",\n      \"subCategory\": \"Availed from other sources\",\n      \"createdAt\": \"2021-02-02T11:23:24.484Z\",\n      \"updatedAt\": \"2021-02-02T11:23:24.484Z\",\n      \"__v\": 0\n    },\n    {\n      \"_id\": \"6019362c4d1d476d4ee470a1\",\n      \"secCategoryid\": \"601933e74d1d476d4ee47088\",\n      \"subCategory\": \"Delay in Call\",\n      \"createdAt\": \"2021-02-02T11:23:24.484Z\",\n      \"updatedAt\": \"2021-02-02T11:23:24.484Z\",\n      \"__v\": 0\n    },\n    {\n      \"_id\": \"6019362c4d1d476d4ee470a1\",\n      \"secCategoryid\": \"601933e74d1d476d4ee47088\",\n      \"subCategory\": \"Money Not required Now\",\n      \"createdAt\": \"2021-02-02T11:23:24.484Z\",\n      \"updatedAt\": \"2021-02-02T11:23:24.484Z\",\n      \"__v\": 0\n    },\n    {\n      \"_id\": \"6019362c4d1d476d4ee470a1\",\n      \"secCategoryid\": \"601933e74d1d476d4ee47088\",\n      \"subCategory\": \"Just Checking App\",\n      \"createdAt\": \"2021-02-02T11:23:24.484Z\",\n      \"updatedAt\": \"2021-02-02T11:23:24.484Z\",\n      \"__v\": 0\n    },\n    {\n      \"_id\": \"6019362c4d1d476d4ee470a1\",\n      \"secCategoryid\": \"601933e74d1d476d4ee47088\",\n      \"subCategory\": \"Others\",\n      \"createdAt\": \"2021-02-02T11:23:24.484Z\",\n      \"updatedAt\": \"2021-02-02T11:23:24.484Z\",\n      \"__v\": 0\n    },\n    {\n      \"_id\": \"6019362c4d1d476d4ee470a1\",\n      \"secCategoryid\": \"601933e74d1d476d4ee47088\",\n      \"subCategory\": \"High Line setup fee\",\n      \"createdAt\": \"2021-02-02T11:23:24.484Z\",\n      \"updatedAt\": \"2021-02-02T11:23:24.484Z\",\n      \"__v\": 0\n    },\n    {\n      \"_id\": \"6019362c4d1d476d4ee470a1\",\n      \"secCategoryid\": \"601933e74d1d476d4ee47088\",\n      \"subCategory\": \"High Processing Fee\",\n      \"createdAt\": \"2021-02-02T11:23:24.484Z\",\n      \"updatedAt\": \"2021-02-02T11:23:24.484Z\",\n      \"__v\": 0\n    },\n    {\n      \"_id\": \"6019362c4d1d476d4ee470a1\",\n      \"secCategoryid\": \"601933e74d1d476d4ee47088\",\n      \"subCategory\": \"Unhappy with Service\",\n      \"createdAt\": \"2021-02-02T11:23:24.484Z\",\n      \"updatedAt\": \"2021-02-02T11:23:24.484Z\",\n      \"__v\": 0\n    },\n\n  ]);\n  const [finalsecSubCategories, sefinalsecSubCategories] = useState([])\n  const [secSubCategories, setSecSubCategories] = useState([]);\n\n  const handleChange = (e, s) => {\n\n  };\n  useEffect(() => {\n    let unmounted = false;\n\n    return () => {\n      unmounted = true;\n    };\n  }, []);\n\n  useEffect(() => {\n    if (localStorage.getItem('AgentType') === 'Outbound') {\n\n\n      console.log(props.selectedData1, \"props came\")\n\n\n      var finalsubCategories1 = []\n\n      var issuetype = issuetypes.filter((element) => element.issuetype === props.selectedData1.issuetype)\n      if (issuetype.length) {\n        issuetype = issuetype[0]\n      }\n\n\n\n\n      var category = categories.filter((element) => element.category === props.selectedData1.category)\n      if (category.length) {\n\n        category = category[0]\n      }\n\n\n\n      var seccategory = seccategories.filter((element) => element.secCategory === props.selectedData1.seccategory)\n      if (seccategory.length) {\n\n        seccategory = seccategory[0].secCategory\n        const result = subCategories.filter(data => data.secCategoryid === seccategory._id);\n        // setfinalsubCategories(result);\n        // finalsubCategories1 = result\n      }\n\n\n      // console.log('finalsubCategories', finalsubCategories1)\n      // console.log(props.selectedData1.subcategory, \"recheck\")\n      // var subcategory = secSubCategories.filter((element) => element.secSubCategory === props.selectedData1.secsubcategory)\n      // console.log('subcategory ', subcategory)\n\n      var secsubcategory1 = subCategories.filter((element) => {\n        // console.log(props.selectedData1.secsubcategory,\"props one data -\", element.subCategory)\n        return element.subCategory === props.selectedData1.secsubcategory\n      })\n\n\n\n      if (secsubcategory1.length) {\n\n        var secsubcategory = secsubcategory1[0].subCategory\n\n      }\n\n\n\n\n\n\n\n\n\n\n\n\n      // if (subcategory.length) {\n      //   subcategory = subcategory[0]\n      //   // console.log('subcategory !!!!', subcategory)\n\n      //   console.log(subcategory,\"props data subcategory\")\n\n      // }\n\n      var subcategory = subCategories.filter((element) => element.subCategory === props.selectedData1.subcategory)\n\n\n      if (subcategory.length) {\n        subcategory = subcategory[0]\n      }\n\n\n\n\n      var data = {\n        CallerName: props.selectedData1.CallerName,\n        callermobilenumber: props.selectedData1.callermobilenumber,\n        callerapplication: props.selectedData1.callerapplication,\n        subcategory: props.selectedData1.subcategory,  //\n        category: category,\n        secsubcategory: props.selectedData1.secsubcategory, //\n        seccategory: seccategory,\n        comments: props.selectedData1.comments,\n        type: props.selectedData1.type,\n        issuetype: issuetype,\n      }\n\n      console.log(data, \"data\")\n\n      setInitialValue(data)\n    }\n  }, [props])\n\n  function updateCallData(uniqueid, dispostionData) {\n\n  }\n\n  function updateAgentCallStatus(updateData) {\n\n  }\n\n\n  const handleBreak = (e) => {\n    var axios = require('axios');\n    const AgentSIPID = localStorage.getItem('AgentSIPID')\n\n    // const AgentSIPID = localStorage.getItem('AgentSIPID')\n\n    var axios = require('axios');\n    var config = {\n      method: 'get',\n      url: `${AMI}/actions/break?Queue=${localStorage.getItem('Queue')}&Interface=SIP%2F${AgentSIPID}&Reason=AgentDisposed&Break=false`,\n      headers: {}\n    };\n\n    axios(config)\n      .then(function (response) {\n        console.log((response.data));\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n  const handleSubmitDisposition = (data) => {\n    console.log(data, \"form data\")\n\n    handleBreak()\n\n    const id = localStorage.getItem('Interaction_id')\n    console.log(id, \"agentid\")\n    var axios = require('axios');\n    // data.CRMDISPOSITION =data\n    data = { \"CRMDISPOSITION\": data };\n    console.log(\"data\", data)\n    var config = {\n      method: 'put',\n      url: `http://192.168.4.44:53002/api/interactions/${id}`,\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data: { \"updateData\": data }\n    };\n\n    axios(config)\n      .then(function (response) {\n        console.log(response, \"response\")\n\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n\n  function handleSubmit(e) {\n    handleSubmitDisposition()\n    // handleBreak()\n    console.log('formRef', formRef.current.values);\n    console.log('initialValue', initialValue)\n    var categoryOBJ = formRef.current.values.category;\n    var seccategoryOBJ = formRef.current.values.seccategory;\n    var subcategoryOBJ = formRef.current.values.subcategory;\n    var secsubcategoryOBJ = formRef.current.values.secsubcategory;\n\n    var category = '';\n    var secCategory = '';\n    var subCategory = '';\n    var secSubCategory = '';\n\n\n    // var data = {\n    //         \"CallerName\": \"Vikram\",\n    //         \"callerapplication\": \"VI6736637\",\n    //         \"callermobilenumber\": \"9935413775\",\n    //         \"category\": {_id: \"6019329a4d1d476d4ee4707c\", category: \"Tapstart\", createdAt: \"2021-02-02T11:08:10.879Z\", updatedAt: \"2021-02-02T11:08:10.879Z\", __v: 0}\n    //         \"comments\": \"Comments\"\n    //         \"issuetype\": {issuetype: \"Request\"}\n    //         \"seccategory\": {_id: \"601933b74d1d476d4ee47085\", categoryid: \"6019329a4d1d476d4ee4707c\", secCategory: \"Application Status\", createdAt: \"2021-02-02T11:12:55.201Z\", updatedAt: \"2021-02-02T11:12:55.201Z\", …}\n    //         \"secsubcategory\": {_id: \"601938f04d1d476d4ee470bd\", subCategoryid: \"601934e94d1d476d4ee4708d\", secSubCategory: \"Reject\", createdAt: \"2021-02-02T11:35:12.997Z\", updatedAt: \"2021-02-02T11:35:12.997Z\", …}\n    //         \"subcategory\": {_id: \"601934e94d1d476d4ee4708d\", secCategoryid: \"601933b74d1d476d4ee47085\", subCategory: \"AIP\", createdAt: \"2021-02-02T11:18:01.592Z\", updatedAt: \"2021-02-02T11:18:01.592Z\", …}\n    //         \"type\": \"closed\"\n    // }\n    // console.log('category', typeof categoryOBJ)\n\n    if (typeof categoryOBJ === 'object') {\n      if ('category' in categoryOBJ) {\n        category = categoryOBJ.category\n      }\n\n    }\n    if (typeof seccategoryOBJ === 'object') {\n      if ('secCategory' in seccategoryOBJ) {\n        secCategory = seccategoryOBJ.secCategory\n      }\n    }\n    if (typeof subcategoryOBJ === 'object') {\n      if ('subCategory' in subcategoryOBJ) {\n        subCategory = subcategoryOBJ.subCategory\n      }\n    }\n    if (typeof secsubcategoryOBJ === 'object') {\n      if ('secSubCategory' in secsubcategoryOBJ) {\n        secSubCategory = secsubcategoryOBJ.secSubCategory\n      }\n    }\n\n    var data = {\n      \"Partner Name\": formRef.current.values.issuetype.issuetype,\n      \"Disposition\": secCategory,\n      \"Reason\": subCategory\n    }\n\n    console.log(data)\n\n    handleSubmitDisposition(data)\n\n    console.log(data, \"formdata\")\n\n    if (localStorage.getItem('AgentType') === 'Outbound') {\n      data = {\n        CallerName: initialValue.CallerName,\n        callermobilenumber: initialValue.callermobilenumber,\n        callerapplication: initialValue.callerapplication,\n        comments: formRef.current.values.comments,\n        type: formRef.current.values.type,\n      }\n\n      console.log('initialValue', initialValue);\n      var subcategory = initialValue.subcategory;\n      console.log('subcategory', subcategory);\n      if (typeof subcategory === 'object') {\n        data['subcategory'] = initialValue.subcategory.subCategory\n      } else {\n        data['subcategory'] = initialValue.subcategory;\n      }\n      var category = initialValue.category;\n      console.log('category', typeof category);\n      if (typeof category === 'object') {\n        data['category'] = initialValue.category.category\n      } else {\n        data['category'] = initialValue.category;\n      }\n      var secsubcategory = initialValue.secsubcategory;\n      console.log('secsubcategory', secsubcategory);\n      if (typeof secsubcategory === 'object') {\n        data['secsubcategory'] = initialValue.secsubcategory.secSubCategory\n      } else {\n        data['secsubcategory'] = initialValue.secsubcategory;\n      }\n      var seccategory = initialValue.seccategory;\n      console.log('seccategory', seccategory);\n      if (typeof seccategory === 'object') {\n        data['seccategory'] = initialValue.seccategory.secCategory\n      } else {\n        data['seccategory'] = initialValue.seccategory;\n      }\n\n      var issuetype = initialValue.issuetype;\n      console.log('issuetype', issuetype);\n\n      if (typeof issuetype === 'object') {\n        data['issuetype'] = initialValue.issuetype.issuetype\n      } else {\n        data['issuetype'] = '';\n      }\n    }\n    console.log('data after outbound', data)\n\n    localStorage.setItem('callDispositionStatus', 'Disposed');\n    localStorage.setItem('callDispositionStatus', 'Disposed');\n    if (localStorage.getItem('Agenttype') === 'L1') {\n      removeFromQueue(`SIP/${localStorage.getItem('AgentSIPID')}`, 5003)\n      addToQueue(`SIP/${localStorage.getItem('AgentSIPID')}`, 5003)\n    }\n    if (localStorage.getItem('Agenttype') === 'L2') {\n      removeFromQueue('Local/3' + localStorage.getItem('AgentSIPID') + '@from-queue', 5001)\n      addToQueue('Local/3' + localStorage.getItem('AgentSIPID') + '@from-queue', 5001)\n    }\n    props.setCurrentCallDetails(\n      localStorage.getItem('callStatusId'),\n      localStorage.getItem('callUniqueId'),\n      localStorage.getItem('callType'),\n      localStorage.getItem('callStatus'),\n      localStorage.getItem('callEvent'),\n      localStorage.getItem('callDispositionStatus'),\n      localStorage.getItem('callerNumber'),\n      localStorage.getItem('breakStatus')\n    );\n    updateCallData(localStorage.getItem('callUniqueId'), data);\n    if (localStorage.getItem('AgentType') === 'Outbound') {\n\n      var finalType = data.type;\n      if (data.type === 'open' || data.type === 'close') {\n        finalType = 'close';\n      }\n      if (data.type === 'disconnected') {\n        finalType = 'open';\n      }\n      updateCallData(localStorage.getItem('L1ID'), {\n        \"type\": finalType\n      });\n    }\n    updateAgentCallStatus({\n      callStatusId: localStorage.getItem('callStatusId'),\n      callUniqueId: localStorage.getItem('callUniqueId'),\n      callType: localStorage.getItem('callType'),\n      callStatus: localStorage.getItem('callStatus'),\n      callEvent: localStorage.getItem('callEvent'),\n      callDispositionStatus: localStorage.getItem('callDispositionStatus'),\n      callerNumber: localStorage.getItem('callerNumber'),\n    })\n\n\n\n  }\n  const [autoCompleteKey, setAutoCompleteKey] = useState(0);\n  return (\n    <Formik\n      validateOnBlur={false}\n      initialValues={initialValue}\n      disform={initialValue}\n      onSubmit={(e, { validate }) => {\n        handleSubmit(e);\n        validate(e);\n      }}\n      innerRef={formRef}\n      validationSchema={yup.object({\n        issuetype: yup\n          .object()\n          .required('Please select a  Partner')\n          .typeError('Please select a  Partner'),\n\n        seccategory: yup\n          .object()\n          .required('Please select a  Disposition')\n          .typeError('Please select a valid  Disposition'),\n        subcategory: yup\n          .object()\n          .required('Please select a  Reason')\n          .typeError('Please select a valid  Reason'),\n\n\n\n      })}\n    >\n      {({ setFieldValue }) => (\n        <Form>\n          <Grid container spacing={2} direction=\"row\">\n            {/* {localStorage.getItem('AgentType') === 'Inbound' ? <Grid item xs={4} sm={4}>\n              <Field\n                className={classes.fieldContainer}\n                disabled={false}\n                name=\"CallerName\"\n                component={TextField}\n                variant=\"outlined\"\n                multiline\n                label=\"Caller Name\"\n              />\n            </Grid> : <Grid item xs={4} sm={4}>\n              <Field\n                className={classes.fieldContainer}\n                value={initialValue.CallerName}\n                disabled={true}\n                name=\"CallerName\"\n                component={TextField}\n                variant=\"outlined\"\n                multiline\n                label=\"Caller Name\"\n              />\n            </Grid>} */}\n            {/* {localStorage.getItem('AgentType') === 'Inbound' ?\n              <Grid item xs={4} sm={4}>\n                <Field\n                  className={classes.fieldContainer}\n                  name=\"callerapplication\"\n                  disabled={false}\n                  component={TextField}\n                  variant=\"outlined\"\n                  multiline\n                  label=\"Caller Application Number\"\n                />\n              </Grid> : <Grid item xs={4} sm={4}>\n                <Field\n                  className={classes.fieldContainer}\n                  name=\"callerapplication\"\n                  value={initialValue.callerapplication}\n                  disabled={true}\n                  component={TextField}\n                  variant=\"outlined\"\n                  multiline\n                  label=\"Caller Application Number\"\n                />\n              </Grid>} */}\n\n            {/* {localStorage.getItem('AgentType') === 'Inbound' ?\n              <Grid item xs={4} sm={4}>\n                <Field\n                  className={classes.fieldContainer}\n                  name=\"callermobilenumber\"\n                  disabled={false}\n                  component={TextField}\n                  variant=\"outlined\"\n                  multiline\n                  label=\"Caller Mobile Number\"\n                />\n              </Grid> : <Grid item xs={4} sm={4}>\n                <Field\n                  className={classes.fieldContainer}\n                  name=\"callermobilenumber\"\n                  value={initialValue.callermobilenumber}\n                  disabled={true}\n                  component={TextField}\n                  variant=\"outlined\"\n                  multiline\n                  label=\"Caller Mobile Number\"\n                />\n              </Grid>} */}\n\n            {localStorage.getItem('AgentType') === 'Inbound' ?\n              <Grid item xs={4} sm={4}>\n                <FormControl\n                  variant=\"outlined\"\n                  className={classes.fieldContainer}\n                >\n                  <Autocomplete\n                    options={issuetypes}\n                    getOptionLabel={option => typeof option === 'string' ? option : option.issuetype}\n                    disabled={false}\n                    value={initialValue.issuetype}\n                    getOptionSelected={(option, value) => {\n                      return value.issuetype === option.issuetype\n                    }}\n                    key={autoCompleteKey}\n                    onChange={(event, value) => {\n                      // console.log('value', value)\n                      setFieldValue('issuetype', value);\n                      var i = initialValue;\n                      i.issuetype = value;\n                      setInitialValue(i)\n                    }}\n                    renderInput={params => (\n                      <Field\n                        component={TextField}\n                        {...params}\n                        label=\"Select Partner Name\"\n                        variant=\"outlined\"\n                        name=\"issuetype\"\n                      />\n                    )}\n                    name=\"issuetype\"\n                  />\n                </FormControl>\n              </Grid> : <Grid item xs={4} sm={4}>\n                <FormControl\n                  variant=\"outlined\"\n                  className={classes.fieldContainer}\n                >\n                  <Autocomplete\n                    options={issuetypes}\n                    getOptionLabel={option => typeof option === 'string' ? option : option.issuetype}\n                    disabled={true}\n                    value={initialValue.issuetype}\n                    getOptionSelected={(option, value) => {\n                      return value.issuetype === option.issuetype\n                    }}\n                    key={autoCompleteKey}\n                    onChange={(event, value) => {\n                      // console.log('value', value)\n                      setFieldValue('issuetype', value);\n                      var i = initialValue;\n                      i.issuetype = value;\n                      setInitialValue(i)\n                    }}\n                    renderInput={params => (\n                      <Field\n                        component={TextField}\n                        {...params}\n                        label=\"Select a issue Type\"\n                        variant=\"outlined\"\n                        name=\"issuetype\"\n                      />\n                    )}\n                    name=\"issuetype\"\n                  />\n                </FormControl>\n              </Grid>}\n\n            {/* {localStorage.getItem('AgentType') === 'Inbound' ?\n              <Grid item xs={4} sm={4}>\n                <FormControl\n                  variant=\"outlined\"\n                  className={classes.fieldContainer}\n                >\n                  <Autocomplete\n                    options={categories}\n                    getOptionLabel={option => typeof option === 'string' ? option : option.category}\n                    value={initialValue.category}\n                    disabled={false}\n                    getOptionSelected={(option, value) => {\n                      return value.label === option.label\n                    }}\n                    key={autoCompleteKey}\n                    onChange={(event, value) => {\n                      setFieldValue('category', value);\n                      var i = initialValue;\n                      i.category = value;\n                      setInitialValue(i)\n                    }}\n                    renderInput={params => (\n                      <Field\n                        component={TextField}\n                        {...params}\n                        label=\"Disposition\"\n                        variant=\"outlined\"\n                        name=\"partnername\"\n                      />\n                    )}\n                    name=\"partnername\"\n                  />\n                </FormControl>\n              </Grid> : <Grid item xs={4} sm={4}>\n                <FormControl\n                  variant=\"outlined\"\n                  className={classes.fieldContainer}\n                >\n                  <Autocomplete\n                    options={categories}\n                    getOptionLabel={option => typeof option === 'string' ? option : option.category}\n                    value={initialValue.category}\n                    disabled={true}\n                    getOptionSelected={(option, value) => {\n                      return value.label === option.label\n                    }}\n                    key={autoCompleteKey}\n                    onChange={(event, value) => {\n                      setFieldValue('category', value);\n                      var i = initialValue;\n                      i.category = value;\n                      setInitialValue(i)\n                    }}\n                    renderInput={params => (\n                      <Field\n                        component={TextField}\n                        {...params}\n                        label=\"Select a Partner name\"\n                        variant=\"outlined\"\n                        name=\"partnername\"\n                      />\n                    )}\n                    name=\"partnername\"\n                  />\n                </FormControl>\n              </Grid>} */}\n\n            {localStorage.getItem('AgentType') === 'Inbound' ?\n              <Grid item xs={4} sm={4}>\n                <FormControl\n                  variant=\"outlined\"\n                  className={classes.fieldContainer}\n                >\n                  <Autocomplete\n                    options={seccategories}\n                    getOptionLabel={option => typeof option === 'string' ? option : option.secCategory}\n                    value={initialValue.seccategory}\n                    disabled={false}\n                    getOptionSelected={(option, value) => {\n                      return value.label === option.label\n                    }}\n                    key={autoCompleteKey}\n                    onChange={(event, value) => {\n                      if (value !== null) {\n                        setFieldValue('seccategory', value);\n                        var i = initialValue;\n                        i.seccategory = value;\n                        setInitialValue(i)\n                        setfinalsubCategories([])\n                        const result = subCategories.filter(data => data.secCategoryid === value._id);\n                        console.log(result);\n                        setfinalsubCategories(result);\n                      }\n                    }}\n                    renderInput={params => (\n                      <Field\n                        component={TextField}\n                        {...params}\n                        label=\"Disposition\"\n                        variant=\"outlined\"\n                        name=\"tag\"\n                      />\n                    )}\n                    name=\"tag\"\n                  />\n                </FormControl>\n              </Grid> : <Grid item xs={4} sm={4}>\n                <FormControl\n                  variant=\"outlined\"\n                  className={classes.fieldContainer}\n                >\n                  <Autocomplete\n                    options={seccategories}\n                    getOptionLabel={option => typeof option === 'string' ? option : option.secCategory}\n                    value={initialValue.seccategory}\n                    disabled={true}\n                    getOptionSelected={(option, value) => {\n                      return value.label === option.label\n                    }}\n                    key={autoCompleteKey}\n                    onChange={(event, value) => {\n                      if (value !== null) {\n                        setFieldValue('seccategory', value);\n                        var i = initialValue;\n                        i.seccategory = value;\n                        setInitialValue(i)\n                        setfinalsubCategories([])\n                        const result = subCategories.filter(data => data.secCategoryid === value._id);\n                        console.log(result);\n                        setfinalsubCategories(result);\n                      }\n                    }}\n                    renderInput={params => (\n                      <Field\n                        component={TextField}\n                        {...params}\n                        label=\"Select Tag\"\n                        variant=\"outlined\"\n                        name=\"tag\"\n                      />\n                    )}\n                    name=\"tag\"\n                  />\n                </FormControl>\n              </Grid>}\n\n            {localStorage.getItem('AgentType') === 'Inbound' ?\n              <Grid item xs={4} sm={4}>\n                <FormControl\n                  variant=\"outlined\"\n                  className={classes.fieldContainer}\n                >\n                  <Autocomplete\n                    options={finalsubCategories}\n                    getOptionLabel={option => typeof option === 'string' ? option : option.subCategory}\n                    value={initialValue.subcategory}\n                    disabled={false}\n                    getOptionSelected={(option, value) => {\n                      return value.label === option.label\n                    }}\n                    key={autoCompleteKey}\n                    onChange={(event, value) => {\n                      console.log('event', value)\n                      if (value !== null) {\n                        setFieldValue('subcategory', value);\n                        var i = initialValue;\n                        i.subcategory = value;\n                        setInitialValue(i)\n                        sefinalsecSubCategories([]);\n                        const result = secSubCategories.filter(data => data.subCategoryid === value._id);\n                        console.log('result', result)\n                        sefinalsecSubCategories(result);\n                      }\n                    }}\n                    renderInput={params => (\n                      <Field\n                        component={TextField}\n                        {...params}\n                        label=\"Reason\"\n                        variant=\"outlined\"\n                        name=\"subtag1\"\n                      />\n                    )}\n                    name=\"subtag1\"\n                  />\n                </FormControl>\n              </Grid> : <Grid item xs={4} sm={4}>\n                <FormControl\n                  variant=\"outlined\"\n                  className={classes.fieldContainer}\n                >\n                  <Autocomplete\n                    options={finalsubCategories}\n                    getOptionLabel={option => typeof option === 'string' ? option : option.subCategory}\n                    value={initialValue.subcategory}\n                    disabled={true}\n                    getOptionSelected={(option, value) => {\n                      return value.label === option.label\n                    }}\n                    key={autoCompleteKey}\n                    onChange={(event, value) => {\n                      console.log('event', value)\n                      if (value !== null) {\n                        setFieldValue('subcategory', value);\n                        var i = initialValue;\n                        i.subcategory = value;\n                        setInitialValue(i)\n                        sefinalsecSubCategories([]);\n                        const result = secSubCategories.filter(data => data.subCategoryid === value._id);\n                        console.log('result', result)\n                        sefinalsecSubCategories(result);\n                      }\n                    }}\n                    renderInput={params => (\n                      <Field\n                        component={TextField}\n                        {...params}\n                        label=\"Select a Sub-Tag 1\"\n                        variant=\"outlined\"\n                        name=\"subtag1\"\n                      />\n                    )}\n                    name=\"subtag1\"\n                  />\n                </FormControl>\n              </Grid>\n            }\n\n            {/* {localStorage.getItem('AgentType') === 'Inbound' ?\n              <Grid item xs={4} sm={4}>\n                <FormControl\n                  variant=\"outlined\"\n                  className={classes.fieldContainer}\n                >\n                  <Autocomplete\n                    options={finalsecSubCategories}\n                    getOptionLabel={option => typeof option === 'string' ? option : option.secSubCategory}\n                    value={initialValue.secsubcategory}\n                    disabled={false}\n                    getOptionSelected={(option, value) => {\n                      return value.label === option.label\n                    }}\n                    key={autoCompleteKey}\n                    onChange={(event, value) => {\n                      setFieldValue('secsubcategory', value);\n                      var i = initialValue;\n                      i.secsubcategory = value;\n                      setInitialValue(i)\n                    }}\n                    renderInput={params => (\n                      <Field\n                        component={TextField}\n                        {...params}\n                        label=\"Select a Sub-Tag 2\"\n                        variant=\"outlined\"\n                        name=\"subtag2\"\n                      />\n                    )}\n                    name=\"subtag2\"\n                  />\n                </FormControl>\n              </Grid> : <Grid item xs={4} sm={4}>\n                <FormControl\n                  variant=\"outlined\"\n                  className={classes.fieldContainer}\n                >\n                  <Autocomplete\n                    options={finalsecSubCategories}\n                    getOptionLabel={option => typeof option === 'string' ? option : option.secSubCategory}\n                    value={initialValue.secsubcategory}\n                    disabled={true}\n                    getOptionSelected={(option, value) => {\n                      return value.label === option.label\n                    }}\n                    key={autoCompleteKey}\n                    onChange={(event, value) => {\n                      setFieldValue('secsubcategory', value);\n                      var i = initialValue;\n                      i.secsubcategory = value;\n                      setInitialValue(i)\n                    }}\n                    renderInput={params => (\n                      <Field\n                        component={TextField}\n                        {...params}\n                        label=\"Select a Sub-Tag 2\"\n                        variant=\"outlined\"\n                        name=\"subtag2\"\n                      />\n                    )}\n                    name=\"subtag2\"\n                  />\n                </FormControl>\n              </Grid>}\n            {localStorage.getItem('AgentType') === 'Inbound' ?\n              <Grid item xs={4} sm={4}>\n                <Field\n                  className={classes.fieldContainer}\n                  name=\"comments\"\n                  component={TextField}\n                  variant=\"outlined\"\n                  multiline\n                  rows={2}\n                  label=\"Comments\"\n                />\n              </Grid> : <Grid item xs={4} sm={4}>\n                <Field\n                  className={classes.fieldContainer}\n                  name=\"comments\"\n                  component={TextField}\n                  variant=\"outlined\"\n                  multiline\n                  rows={2}\n                  label=\"Comments\"\n                />\n              </Grid>} */}\n            {/* {localStorage.getItem('AgentType') === 'Inbound' ?\n              <Grid item>\n\n                <Field component={RadioGroup} name=\"type\" row>\n                  <FormControlLabel\n                    value=\"open\"\n                    control={<Radio />}\n                    label=\"Open\"\n                    onChange={handleChange}\n                  />\n                  <FormControlLabel\n                    value=\"closed\"\n                    control={<Radio />}\n                    label=\"Closed\"\n                    onChange={handleChange}\n\n                  />\n                  <FormControlLabel\n                    value=\"disconnected\"\n                    control={<Radio />}\n                    label=\"disconnected\"\n                    onChange={handleChange}\n\n                  />\n                </Field>\n              </Grid> : <Grid item>\n\n                <Field component={RadioGroup} name=\"type\" row>\n                  <FormControlLabel\n                    value=\"open\"\n                    control={<Radio />}\n                    label=\"Open\"\n                    onChange={handleChange}\n                  />\n                  <FormControlLabel\n                    value=\"closed\"\n                    control={<Radio />}\n                    label=\"Closed\"\n                    onChange={handleChange}\n\n                  />\n                  <FormControlLabel\n                    value=\"disconnected\"\n                    control={<Radio />}\n                    label=\"disconnected\"\n                    onChange={handleChange}\n\n                  />\n                </Field>\n              </Grid>} */}\n          </Grid>\n          <br />\n\n          <span>  </span>\n          <span> </span>\n          <span> </span>\n          <span> </span>\n          <Grid container spacing={3} direction=\"row\">\n            <Grid item xs={6} sm={6}>\n              <Button color=\"primary\" variant=\"contained\" onClick={handleSubmit} disabled={disable}>\n                Submit\n          </Button>&nbsp;\n          </Grid>\n            {/* <Grid item xs={6} sm={6}>\n              <Checkbox\n                checked={takebreak}\n                onChange={onChangeTakebreak}\n                color=\"primary\"\n                inputProps={{ 'aria-label': 'secondary checkbox' }}\n              /> Would like to take break after this call\n            </Grid> */}\n          </Grid>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n  Box,\n  Card,\n  CardContent,\n  CardHeader,\n  Container,\n  Divider,\n  Grid,\n  makeStyles,\n  Typography,\n  TextField\n\n} from '@material-ui/core';\nimport {\n\n  AGENT_SERVICE, AMI\n} from 'src/modules/dashboard-360/utils/endpoints';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\n\n\nimport PropTypes from 'prop-types';\nimport Page from 'src/components/Page';\nimport BasicTable from 'src/modules/dashboard-360/components/BasicTable';\nimport MainLoader from 'src/components/MainLoader';\nimport {\n  CallerInteractioncolumns, lastFiveCallData,\n} from 'src/modules/dashboard-360/utils/columns-config';\nimport CommonAlert from 'src/components/CommonAlert';\nimport { connect, useSelector } from 'react-redux';\nimport CustomBreadcrumbs from 'src/components/CustomBreadcrumbs';\nimport CallIcon from '@material-ui/icons/Call';\nimport socketIOClient from 'socket.io-client';\nimport { setAgentCurrentStatus } from 'src/redux/action';\nimport Switch from './switch';\nimport { setDistributorOrders } from '../../redux/action';\nimport DispositionForm from './DispositionForm';\n\n\nconst SOCKETENDPOINT = 'http://192.168.4.44:53003';\nconst APIENDPOINT = 'http://192.168.4.44:53003';\nconst axios = require('axios');\n\nconst socket = socketIOClient(SOCKETENDPOINT, { transports: ['websocket'] });\nconst useStyles = makeStyles(theme => {\n  return {\n    root: {\n      backgroundColor: theme.palette.background.dark,\n      minHeight: '100%',\n      paddingBottom: theme.spacing(3),\n      paddingTop: theme.spacing(3)\n    },\n    panelBody: {\n      padding: 0\n    },\n    dialogActions: {\n      padding: '0 1.5rem 1rem'\n    },\n    modal: {\n      alignItems: 'center',\n      width: '100%',\n      height: '100%'\n    },\n    timerComp: {\n      position: 'absolute',\n      top: 0,\n      left: '55%',\n      color: 'white',\n      fontWeight: 'bold',\n      fontSize: '1.2rem',\n      backgroundColor: theme.palette.secondary.light,\n      padding: '8px 10px',\n      borderBottomLeftRadius: 8,\n      borderBottomRightRadius: 8\n    },\n    callWrapper: {\n      left: 'calc(55% + 90px)'\n    },\n    callInbound: {\n      backgroundColor: theme.palette.success.light\n    },\n    callOutbound: {\n      backgroundColor: theme.palette.secondary.light\n    },\n    drawerHeader: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%',\n      padding: theme.spacing(1, 1)\n    }\n  };\n});\n\n\nconst Dashboard = ({\n  setAgentCurrentStatusAction,\n}) => {\n  const classes = useStyles();\n  const user1 = useSelector(state => state.userData)\n  const reduxState = useSelector(state => state);\n  const [loadingDetails, setLoadingDetails] = useState(true);\n  const [remarks, setRemarks] = useState('');\n  const [ticketType, setTicketType] = useState({});\n  const [category, setCategory] = useState({});\n  const [selectedData1, setSelectedData1] = useState({})\n  const [selectedItem, setSelectedItem] = useState({\n    CallerName: \"\",\n    agentExtension: \"\",\n    agentID: \"\",\n    asterixUniqueID: \"\",\n    callerapplication: \"\",\n    callermobilenumber: \"\",\n    category: \"\",\n    comments: \"\",\n    contactedNumber: \"\",\n    created: \"\",\n    createdAt: \"\",\n    issuetype: \"\",\n    seccategory: \"\",\n    secsubcategory: \"\",\n    subcategory: \"\",\n    type: \"\",\n    updatedAt: \"\",\n    _id: \"\",\n  })\n  const [open, setOpen] = React.useState(false);\n  const [searchItem, setSearchItem] = useState(\"\")\n  const [customerTable, setCustomertable] = useState([])\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [subCategory, setSubCategory] = useState({\n    value: '',\n    label: ''\n  });\n  const [subCategoryItem, setSubCategoryItem] = useState({\n    value: '',\n    label: ''\n  });\n  const [currentCall, setCurrentCall] = useState({\n    callStatus: '',\n    callUniqueId: '',\n    // callType: '',\n\n    // callDetails: '',\n    // callDispositionStatus: '',\n    // callerNumber: '',\n    // breakStatus: ''\n  });\n  const [user, setUserDetails] = useState({\n    userType: 'agent'\n  });\n  const [agent, setAgent] = useState({\n    AgentId: '1234',\n    AgentType: localStorage.getItem('AgentType'),\n    AgentSipId: localStorage.getItem('AgentSIPID')\n  });\n  const [ALF, setALF] = useState([]);\n  const [DLF, setDLF] = useState([]);\n  const [disForm, setdisForm] = useState({});\n\n  // console.log(user1)\n\n  function getDLF() {\n\n  }\n\n  function getALF() {\n\n\n  }\n\n  function getOpenTickets(agentType, status) {\n\n  }\n  function selectedDataForObutbound(data) {\n\n\n  }\n\n  function setCurrentCallDetails(\n    // callStatusId,\n    // callUniqueId,\n    // callType,\n    callStatus,\n    // callEvent,\n    // callDispositionStatus,\n    // callerNumber,\n    // breakStatus\n  ) {\n    setCurrentCall({\n      // callStatusId,\n      // callUniqueId,\n      // callType,\n      callStatus,\n      // callEvent,\n      // callDispositionStatus,\n      // callerNumber,\n      // breakStatus\n    });\n    // localStorage.setItem('callStatusId', callStatusId);\n    // localStorage.setItem('callUniqueId', callUniqueId);\n    // localStorage.setItem('callType', callType);\n    localStorage.setItem('callStatus', callStatus);\n    // localStorage.setItem('Interaction_ID', callUniqueId)\n    // localStorage.setItem('callEvent', callEvent);\n    // localStorage.setItem('callDispositionStatus', callDispositionStatus);\n    // localStorage.setItem('callerNumber', callerNumber);\n    // localStorage.setItem('breakStatus', breakStatus);\n  }\n\n  function addToQueue(agentId, queue) {\n\n  }\n  function removeFromQueue(agentId, queue) {\n\n  }\n  function makeCall() {\n\n  }\n\n  function updateAgentCallStatus(updateData) {\n\n  }\n\n  function getAgentCallStatus(agentSipID) {\n    // console.log('calling the', agentSipID);\n\n    var axios = require('axios');\n\n    var config = {\n      method: 'get',\n      url: `${AGENT_SERVICE}/agents/${agentSipID}`,\n      headers: {}\n    };\n\n    axios(config)\n      .then(function (response) {\n        console.log((response.data));\n        setCurrentCallDetails(\n          response.data.Event,\n          localStorage.setItem('Interaction_id', response.data.InteractionID),\n          localStorage.setItem('CallerNumber', response.data.CallerIDNum)\n        )\n        if (response.data.Paused === '1') {\n          localStorage.setItem('Break_Status', 'IN')\n        } else {\n          localStorage.setItem('Break_Status', 'OUT')\n        }\n        localStorage.setItem('Queue', response.data.Queue)\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n  function breakService() {\n    console.log(\"called from dispos\")\n    const AgentSIPID = localStorage.getItem('AgentSIPID')\n    if (localStorage.getItem('Break_Status') === 'OUT') {\n      var axios = require('axios');\n      var config = {\n        method: 'get',\n        url: `${AMI}/actions/break?Queue=${localStorage.getItem('Queue')}&Interface=SIP%2F${AgentSIPID}&Reason=BREAKIN&Break=true`,\n        headers: {}\n      };\n\n      axios(config)\n        .then(function (response) {\n          console.log((response.data));\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    } else {\n      var axios = require('axios');\n      var config = {\n        method: 'get',\n        url: `${AMI}/actions/break?Queue=${localStorage.getItem('Queue')}&Interface=SIP%2F${AgentSIPID}&Reason=BREAKOUT&Break=false`,\n        headers: {}\n      };\n\n      axios(config)\n        .then(function (response) {\n          console.log((response.data));\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n\n  }\n\n  useEffect(() => {\n\n    async function getInitialData() {\n      try {\n        await getAgentCallStatus(localStorage.getItem('Agent_Object_ID'));\n      } catch (err) {\n        console.log('err', err);\n      }\n    }\n    getInitialData();\n    setLoadingDetails(false);\n\n\n\n  }, []);\n\n\n\n  useEffect(() => {\n    const agentSipID = localStorage.getItem('Agent_Object_ID')\n    const interval = setInterval(async () => {\n      const GET_CURRENT_STATUS_BY_AGENT_SIP_ID = `${AGENT_SERVICE}/agents/${localStorage.getItem('Agent_Object_ID')}`;\n      const getCurrentStatus = await axios.get(GET_CURRENT_STATUS_BY_AGENT_SIP_ID);\n      //console.log('getCurrentStatus', getCurrentStatus)\n      getAgentCallStatus(agentSipID)\n\n\n    }, 3000);\n\n\n\n\n\n  }, [])\n\n\n\n  useEffect(() => {\n    getALF();\n\n\n    if (\n      currentCall.callerNumber !== '' &&\n      currentCall.callDispositionStatus === 'NotDisposed'\n    ) {\n      getDLF();\n\n    }\n    // getALF();\n    if (localStorage.getItem('Agenttype') === 'L1') {\n      // getOpenTickets('L1', 'open');\n    }\n    if (localStorage.getItem('Agenttype') === 'L2') {\n      // getOpenTickets('L1', 'open');\n    }\n    if (localStorage.getItem('Agenttype') === 'L3') {\n      // getOpenTickets('L2', 'open');\n    }\n\n  }, [\n    currentCall.callDispositionStatus,\n    currentCall.callStatus,\n    currentCall.breakStatus\n  ]);\n\n  const handleSearch = (e) => {\n    setSearchItem(e.target.value)\n  }\n\n  const searchaction = (e) => {\n    let config = {\n      method: 'get',\n\n      url: `http://164.52.205.10:42004/crm/callermobilenumber?callermobilenumber=${searchItem}`,\n      headers: {\n        'Content-Type': 'application/json'\n      },\n\n    };\n    axios(config)\n      .then(response => {\n        console.log('Response data', JSON.stringify(response.data));\n        setCustomertable(response.data)\n        // props.getALF();\n      })\n      .catch(error => {\n        console.log('dispostionFrom', error);\n      });\n  }\n\n\n\n  return !loadingDetails ? (\n    <div style={{ position: 'relative' }}>\n      {\n        localStorage.getItem('role') === 'agent' ? (\n          <div>\n            <Box\n              alignItems=\"center\"\n              display=\"flex\"\n              className={`${classes.timerComp} ${classes.callWrapper} ${classes.callInbound}`}\n            >\n              {\n                currentCall.callStatus === 'AgentCalled' ? (<div>\n                  <CallIcon />\n            &nbsp;\n                  <Typography display=\"inline\">\n                    {/* {localStorage.getItem('callerNumber')} */}\n          Call Ringing\n        </Typography>\n                </div>) : null\n              }\n              {\n                currentCall.callStatus === 'AgentConnect' ? (<div>\n                  <CallIcon />\n            &nbsp;\n                  <Typography display=\"inline\">\n                    {/* {localStorage.getItem('callerNumber')} */}\n                    {localStorage.getItem('CallerNumber')}-Call in Progress\n        </Typography>\n                </div>) : null\n              }\n              {\n                currentCall.callStatus === 'AgentComplete' ? (<div>\n                  <CallIcon />\n            &nbsp;\n                  <Typography display=\"inline\">\n                    {/* {localStorage.getItem('callerNumber')} */}\n                    {localStorage.getItem('CallerNumber')}- Call Disconnected\n        </Typography>\n                </div>) : null\n              }\n              {\n                currentCall.callStatus === 'AgentDisposed' || currentCall.callStatus === 'LoggedIn' || currentCall.callStatus === 'BREAKOUT' ? (<div>\n                  <CallIcon />\n            &nbsp;\n                  <Typography display=\"inline\">\n                    {/* {localStorage.getItem('callerNumber')} */}\n         Free for next call\n        </Typography>\n                </div>) : null\n              }\n              {\n                currentCall.callStatus === 'BREAKIN' ? (<div>\n                  <CallIcon />\n            &nbsp;\n                  <Typography display=\"inline\">\n                    {/* {localStorage.getItem('callerNumber')} */}\n                  You are in Break\n        </Typography>\n                </div>) : null\n              }\n              {\n                currentCall.callStatus === 'AgentRingNoAnswer' ? (<div>\n                  <CallIcon />\n            &nbsp;\n                  <Typography display=\"inline\">\n                    {/* {localStorage.getItem('callerNumber')} */}\n         Call Not Answered\n        </Typography>\n                </div>) : null\n              }\n\n            </Box>\n            <CustomBreadcrumbs />\n            <Page className={classes.root} title=\"Dashboard\">\n              <Container maxWidth={false}>\n                <Grid container spacing={3}>\n                  <Grid item lg={4} md={6} xs={12}>\n\n                    <Grid item>\n                      {currentCall.callStatus === 'AgentDisposed' || currentCall.callStatus === 'LoggedIn' || currentCall.callStatus === 'BREAKOUT' || currentCall.callStatus === 'BREAKIN' ? (<Button variant=\"contained\" color=\"primary\" onClick={breakService}>{localStorage.getItem('Break_Status') === 'OUT' ? ('Take a Break') : ('You are in break')}</Button>) : (null)\n\n                      }\n\n                    </Grid>\n                  </Grid>\n                </Grid>\n                <Grid container spacing={3}>\n\n                  <Grid item lg={12} md={12} xs={12}>\n\n                    <Card>\n                      <CardHeader title=\"Disposition Details\" />\n                      <Divider />\n                      {currentCall.callStatus !== 'AgentDisposed' &&\n                        user.userType === 'agent' && currentCall.callStatus !== 'LoggedIn' && currentCall.callStatus !== 'AgentRingNoAnswer' && currentCall.callStatus !== 'BREAKOUT' && currentCall.callStatus !== 'BREAKIN' && currentCall.callStatus !== 'LoggedOut' && currentCall.callStatus !== '0' ? (<CardContent>\n                          <DispositionForm\n                            breakService={breakService}\n                            agentSipID={agent.AgentSipId}\n                            DLF={DLF}\n                            setCurrentCallDetails={setCurrentCallDetails}\n                            addToQueue={addToQueue}\n                            removeFromQueue={removeFromQueue}\n                            selectedData1={selectedData1}\n                            // getALF={getALF}\n                            disForm={disForm}\n                            setdisForm={form => {\n                              setdisForm(form);\n                            }}\n                            category={category}\n                            setCategory={cat => {\n                              setCategory(cat);\n                            }}\n                            ticketType={ticketType}\n                            setTicketType={tkstyp => {\n                              setTicketType(tkstyp);\n                            }}\n                            subCategory={subCategory}\n                            setSubCategory={subcat => {\n                              setSubCategory(subcat);\n                            }}\n                            subCategoryItem={subCategoryItem}\n                            setSubCategoryItem={subcatitem => {\n                              setSubCategoryItem(subcatitem);\n                            }}\n                            remarks={remarks}\n                            setRemarks={rks => {\n                              setRemarks(rks);\n                            }}\n                            currentCall={currentCall.callStatus}\n                          />\n                        </CardContent>\n                      ) : (<></>)}\n                    </Card>\n                  </Grid>\n\n                </Grid>\n\n              </Container>\n            </Page>\n\n            <Dialog\n              fullScreen={fullScreen}\n              open={open}\n              onClose={handleClose}\n              aria-labelledby=\"responsive-dialog-title\"\n            >\n              <DialogTitle id=\"responsive-dialog-title\">{\"Outbound Call\"}</DialogTitle>\n              <DialogContent>\n                <DialogContentText>\n                  Are You sure, You Want to make a Outbound Call ?\n          </DialogContentText>\n              </DialogContent>\n              <DialogActions>\n                <Button autoFocus onClick={handleClose} color=\"primary\">\n                  Close\n          </Button>\n                <Button onClick={makeCall} color=\"primary\" autoFocus>\n                  Make A Call\n          </Button>\n              </DialogActions>\n            </Dialog>\n          </div>\n        ) : (<div>\n\n        </div>)\n      }\n\n\n    </div>\n  ) : (\n    <MainLoader />\n  );\n};\nDashboard.propTypes = {\n  distributorOrders: PropTypes.arrayOf(PropTypes.object),\n  agentCurrentStatus: PropTypes.arrayOf(PropTypes.object),\n  setDistributorOrdersAction: PropTypes.func,\n  setAgentCurrentStatusAction: PropTypes.func,\n  searchDistributor: PropTypes.string\n};\n\nconst mapStateToProps = state => {\n  return {\n    distributorOrders: state.distributorOrders,\n    agentCurrentStatus: state.currentCall,\n    searchDistributor: state.searchDistributor\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDistributorOrdersAction: orders =>\n      dispatch(setDistributorOrders(orders)),\n    setAgentCurrentStatusAction: currentCall =>\n      dispatch(setAgentCurrentStatus(currentCall)),\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\n\n\n","import { DataGrid } from '@material-ui/data-grid';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { setDistributorInvoices } from 'src/modules/dashboard-360/redux/action';\nimport { AgentCallColumns } from 'src/modules/dashboard-360/utils/columns-config';\nimport PropTypes from 'prop-types';\nimport CommonAlert from 'src/components/CommonAlert';\nimport MainLoader from 'src/components/MainLoader';\nimport { Box, makeStyles, Typography } from '@material-ui/core';\nimport {\n  getDealerInvoiceDetails,\n  getSingleInvoiceDetails\n} from '../../DashboardView/apiCalls';\nimport CustomBreadcrumbs from 'src/components/CustomBreadcrumbs';\nimport DownloadReport from '../../DashboardView/DownloadReport';\n\nconst style = makeStyles(() => ({\n  dgContainer: {\n    maxHeight: 628,\n    paddingLeft: '16px',\n    paddingRight: '16px'\n  }\n}));\nfunction Invoices({\n  distributorInvoices,\n  setDistributorInvoicesAction,\n  ...props\n}) {\n  const classes = style();\n  const [showLoader, setShowLoader] = useState(true);\n  console.log(\"props\", props)\n  const {\n    match: {\n      params: { orderId }\n    }\n  } = props;\n\n  const [invoiceDetails, setSingleInvoiceDetails] = useState(null);\n  const [agentdisposedCalls, setagentdisposedCalls] = useState(props.ALF);\n\n  const orderIdPrev = useRef(orderId);\n\n  const agentServiceURL = 'http://164.52.205.10:42004/';\n  function getALF() {\n    const axios = require('axios');\n    let data = '';\n\n    let config = {\n      method: 'get',\n      url:\n        agentServiceURL +\n        'crm/interactions/getByAgentSIPID?SipID=' +\n        localStorage.getItem('AgentSIPID') +\n        '',\n      headers: {},\n      data: data\n    };\n\n    axios(config)\n      .then(async response => {\n        var ALFDATA = response.data;\n        console.log('ALFDATA', ALFDATA);\n        ALFDATA = ALFDATA.reverse();\n        setagentdisposedCalls(ALFDATA);\n      })\n\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  useEffect(() => {\n    getALF();\n    if (!distributorInvoices || orderIdPrev !== orderId) {\n      (async function getDetails() {\n        try {\n          const res = await (orderId\n            ? getSingleInvoiceDetails(orderId)\n            : getDealerInvoiceDetails(1001));\n          if (!orderId) {\n            setDistributorInvoicesAction(res.data.data);\n          } else {\n            setSingleInvoiceDetails(res.data.data);\n          }\n        } catch (error) {\n        } finally {\n          setShowLoader(false);\n        }\n      })();\n    }\n  }, [orderId]);\n  const [page, setPage] = useState(1);\n  return agentdisposedCalls ? (\n    // <Card>\n    <div className={classes.dgContainer}>\n      <Box>\n        <CustomBreadcrumbs />\n      </Box>\n      <Box padding=\"1rem 0.5rem\">\n        <Typography variant=\"h6\" component=\"h4\">\n          All Disposed Calls\n        </Typography>\n      </Box>\n      {agentdisposedCalls.length ? (\n        <DownloadReport DownloadData={agentdisposedCalls} />\n      ) : (\n          <></>\n        )}\n      <DataGrid\n        page={page}\n        onPageChange={params => {\n          setPage(params.page);\n        }}\n        pageSize={5}\n        rowsPerPageOptions={[5, 10, 20]}\n        pagination\n        autoHeight\n        columns={AgentCallColumns}\n        exportButton={true}\n        rows={agentdisposedCalls.map(calls => ({\n          ...calls,\n          id: calls._id\n        }))}\n      />\n    </div>\n  ) : // </Card>\n    showLoader ? (\n      <MainLoader />\n    ) : (\n        <CommonAlert style={{ margin: 20 }} />\n      );\n}\n\nInvoices.propTypes = {\n  distributorInvoices: PropTypes.arrayOf(PropTypes.object),\n  setDistributorInvoicesAction: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  distributorInvoices: state.distributorInvoices\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setDistributorInvoicesAction: invoices =>\n    dispatch(setDistributorInvoices(invoices))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Invoices);\n","import { DataGrid } from '@material-ui/data-grid';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { setDistributorInvoices } from 'src/modules/dashboard-360/redux/action';\nimport { AgentCallColumns } from 'src/modules/dashboard-360/utils/columns-config';\nimport PropTypes from 'prop-types';\nimport CommonAlert from 'src/components/CommonAlert';\nimport MainLoader from 'src/components/MainLoader';\nimport { Box, makeStyles, Typography } from '@material-ui/core';\nimport {\n  getDealerInvoiceDetails,\n  getSingleInvoiceDetails\n} from '../../DashboardView/apiCalls';\nimport CustomBreadcrumbs from 'src/components/CustomBreadcrumbs';\nimport DownloadReport from '../../DashboardView/DownloadReport';\n\nconst style = makeStyles(() => ({\n  dgContainer: {\n    maxHeight: 628,\n    paddingLeft: '16px',\n    paddingRight: '16px'\n  }\n}));\nfunction Invoices({\n  distributorInvoices,\n  setDistributorInvoicesAction,\n  ...props\n}) {\n  const classes = style();\n  const [showLoader, setShowLoader] = useState(true);\n  console.log(\"props\", props)\n  const {\n    match: {\n      params: { orderId }\n    }\n  } = props;\n\n  const [invoiceDetails, setSingleInvoiceDetails] = useState(null);\n  const [agentdisposedCalls, setagentdisposedCalls] = useState(props.ALF);\n\n  const orderIdPrev = useRef(orderId);\n\n  const agentServiceURL = 'http://164.52.205.10:42004/';\n  function getALF() {\n    const axios = require('axios');\n    let data = '';\n\n    let config = {\n      method: 'get',\n      url:\n        agentServiceURL +\n        'crm/interactions/getByAgentSIPID?SipID=' +\n        localStorage.getItem('AgentSIPID') +\n        '',\n      headers: {},\n      data: data\n    };\n\n    axios(config)\n      .then(async response => {\n        var ALFDATA = response.data;\n        console.log('ALFDATA', ALFDATA);\n        ALFDATA = ALFDATA.filter((e) => e.type === 'open').reverse();\n        setagentdisposedCalls(ALFDATA.filter((e) => e.type === 'open'));\n      })\n\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  useEffect(() => {\n    getALF();\n    if (!distributorInvoices || orderIdPrev !== orderId) {\n      (async function getDetails() {\n        try {\n          const res = await (orderId\n            ? getSingleInvoiceDetails(orderId)\n            : getDealerInvoiceDetails(1001));\n          if (!orderId) {\n            setDistributorInvoicesAction(res.data.data);\n          } else {\n            setSingleInvoiceDetails(res.data.data);\n          }\n        } catch (error) {\n        } finally {\n          setShowLoader(false);\n        }\n      })();\n    }\n  }, [orderId]);\n  const [page, setPage] = useState(1);\n  return agentdisposedCalls ? (\n    // <Card>\n    <div className={classes.dgContainer}>\n      <Box>\n        <CustomBreadcrumbs />\n      </Box>\n      <Box padding=\"1rem 0.5rem\">\n        <Typography variant=\"h6\" component=\"h4\">\n          All Disposed Calls\n        </Typography>\n      </Box>\n      {agentdisposedCalls.length ? (\n        <DownloadReport DownloadData={agentdisposedCalls} />\n      ) : (\n          <></>\n        )}\n      <DataGrid\n        page={page}\n        onPageChange={params => {\n          setPage(params.page);\n        }}\n        pageSize={5}\n        rowsPerPageOptions={[5, 10, 20]}\n        pagination\n        autoHeight\n        columns={AgentCallColumns}\n        exportButton={true}\n        rows={agentdisposedCalls.map(calls => ({\n          ...calls,\n          id: calls._id\n        }))}\n      />\n    </div>\n  ) : // </Card>\n    showLoader ? (\n      <MainLoader />\n    ) : (\n        <CommonAlert style={{ margin: 20 }} />\n      );\n}\n\nInvoices.propTypes = {\n  distributorInvoices: PropTypes.arrayOf(PropTypes.object),\n  setDistributorInvoicesAction: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  distributorInvoices: state.distributorInvoices\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setDistributorInvoicesAction: invoices =>\n    dispatch(setDistributorInvoices(invoices))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Invoices);\n","import { DataGrid } from '@material-ui/data-grid';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { setDistributorInvoices } from 'src/modules/dashboard-360/redux/action';\nimport { DistributerCallColumns } from 'src/modules/dashboard-360/utils/columns-config';\nimport PropTypes from 'prop-types';\nimport CommonAlert from 'src/components/CommonAlert';\nimport MainLoader from 'src/components/MainLoader';\nimport { Box, makeStyles, Typography } from '@material-ui/core';\nimport {\n  getDealerInvoiceDetails,\n  getSingleInvoiceDetails\n} from '../../DashboardView/apiCalls';\nimport CustomBreadcrumbs from 'src/components/CustomBreadcrumbs';\nimport DownloadReport from '../../DashboardView/DownloadReport';\n\nconst style = makeStyles(() => ({\n  dgContainer: {\n    maxHeight: 628,\n    paddingLeft: '16px',\n    paddingRight: '16px'\n  }\n}));\nfunction Invoices({\n  distributorInvoices,\n  setDistributorInvoicesAction,\n  ...props\n}) {\n  const classes = style();\n  const [showLoader, setShowLoader] = useState(true);\n  const {\n    match: {\n      params: { orderId }\n    }\n  } = props;\n\n  const [invoiceDetails, setSingleInvoiceDetails] = useState(null);\n  const [agentdisposedCalls, setagentdisposedCalls] = useState([]);\n\n  const orderIdPrev = useRef(orderId);\n\n  const agentServiceURL = 'http://164.52.205.10:42004/';\n  function getALF() {\n    const axios = require('axios');\n    let data = '';\n    let config = {\n      method: 'get',\n      url:\n        agentServiceURL +\n        'crm/interactions/getByDistributerID?distributerID=' +\n        localStorage.getItem('distributer_id') +\n        '',\n      headers: {},\n      data: data\n    };\n\n    axios(config)\n      .then(async response => {\n        var ALFDATA = response.data;\n        ALFDATA = ALFDATA.reverse();\n        setagentdisposedCalls(ALFDATA);\n      })\n\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  useEffect(() => {\n    getALF();\n    if (!distributorInvoices || orderIdPrev !== orderId) {\n      (async function getDetails() {\n        try {\n          const res = await (orderId\n            ? getSingleInvoiceDetails(orderId)\n            : getDealerInvoiceDetails(1001));\n          if (!orderId) {\n            setDistributorInvoicesAction(res.data.data);\n          } else {\n            setSingleInvoiceDetails(res.data.data);\n          }\n        } catch (error) {\n        } finally {\n          setShowLoader(false);\n        }\n      })();\n    }\n  }, [orderId]);\n  const [page, setPage] = useState(1);\n  return agentdisposedCalls ? (\n    // <Card>\n    <div className={classes.dgContainer}>\n      <Box>\n        <CustomBreadcrumbs />\n      </Box>\n      <Box padding=\"1rem 0.5rem\">\n        <Typography variant=\"h6\" component=\"h4\">\n          All Disposed Calls\n        </Typography>\n      </Box>\n      {agentdisposedCalls.length > 0 ? (\n        <DownloadReport DownloadData={agentdisposedCalls} />\n      ) : (\n        <></>\n      )}\n      <DataGrid\n        page={page}\n        onPageChange={params => {\n          setPage(params.page);\n        }}\n        pageSize={10}\n        rowsPerPageOptions={[5, 10, 20]}\n        pagination\n        autoHeight\n        columns={DistributerCallColumns}\n        rows={agentdisposedCalls.map(calls => ({\n          ...calls,\n          id: calls._id\n        }))}\n      />\n    </div>\n  ) : // </Card>\n  showLoader ? (\n    <MainLoader />\n  ) : (\n    <CommonAlert style={{ margin: 20 }} />\n  );\n}\n\nInvoices.propTypes = {\n  distributorInvoices: PropTypes.arrayOf(PropTypes.object),\n  setDistributorInvoicesAction: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  distributorInvoices: state.distributorInvoices\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setDistributorInvoicesAction: invoices =>\n    dispatch(setDistributorInvoices(invoices))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Invoices);\n","import { DataGrid } from '@material-ui/data-grid';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { setDistributorInvoices } from 'src/modules/dashboard-360/redux/action';\nimport { CallerInteractioncolumns } from 'src/modules/dashboard-360/utils/columns-config';\nimport PropTypes from 'prop-types';\nimport CommonAlert from 'src/components/CommonAlert';\nimport MainLoader from 'src/components/MainLoader';\nimport { Box, makeStyles, Typography } from '@material-ui/core';\nimport {\n  getDealerInvoiceDetails,\n  getSingleInvoiceDetails\n} from '../../DashboardView/apiCalls';\nimport CustomBreadcrumbs from 'src/components/CustomBreadcrumbs';\nimport DownloadReport from '../../DashboardView/DownloadReport';\n\nconst style = makeStyles(() => ({\n  dgContainer: {\n    maxHeight: 628,\n    paddingLeft: '16px',\n    paddingRight: '16px'\n  }\n}));\nfunction Invoices({\n  distributorInvoices,\n  setDistributorInvoicesAction,\n  ...props\n}) {\n  const classes = style();\n  const [showLoader, setShowLoader] = useState(false);\n  console.log(\"props\", props)\n  const {\n    match: {\n      params: { callerNumber }  // searchItem\n    },\n  } = props;\n  console.log(\"props1\", callerNumber)\n  const [invoiceDetails, setSingleInvoiceDetails] = useState(null);\n  const [agentdisposedCalls, setagentdisposedCalls] = useState(props.ALF);\n\n  // const orderIdPrev = useRef(orderId);\n\n  const agentServiceURL = 'http://164.52.205.10:42004/';\n  function getALF() {\n    const axios = require('axios');\n    let data = '';\n\n    let config = {\n      method: 'get',\n      url: `http://164.52.205.10:42004/crm/callermobilenumber?callermobilenumber=${callerNumber}`,\n      headers: {},\n      data: data\n    };\n\n    axios(config)\n      .then(async response => {\n        var ALFDATA = response.data;\n        console.log('ALFDATA', ALFDATA);\n        ALFDATA = ALFDATA.reverse();\n        setagentdisposedCalls(ALFDATA);\n        setShowLoader(false);\n      })\n\n      .catch(error => {\n        console.log(error);\n        setShowLoader(false);\n      });\n  }\n\n    useEffect(() => {\n    getALF();\n     }, [callerNumber]);\n  \n  // useEffect(() => {\n  //   getALF();\n  //   if (!distributorInvoices || orderIdPrev !== orderId) {\n  //     (async function getDetails() {\n  //       try {\n  //         const res = await (orderId\n  //           ? getSingleInvoiceDetails(orderId)\n  //           : getDealerInvoiceDetails(1001));\n  //         if (!orderId) {\n  //           setDistributorInvoicesAction(res.data.data);\n  //         } else {\n  //           setSingleInvoiceDetails(res.data.data);\n  //         }\n  //       } catch (error) {\n  //       } finally {\n  //         setShowLoader(false);\n  //       }\n  //     })();\n  //   }\n  // }, [orderId]);\n  \n  const [page, setPage] = useState(1);\n  return agentdisposedCalls ? (\n    // <Card>\n    <div className={classes.dgContainer}>\n      <Box>\n        <CustomBreadcrumbs />\n      </Box>\n      <Box padding=\"1rem 0.5rem\">\n        <Typography variant=\"h6\" component=\"h4\">\n          All Disposed Calls\n        </Typography>\n      </Box>\n      {agentdisposedCalls.length ? (\n        <DownloadReport DownloadData={agentdisposedCalls} />\n      ) : (\n          <></>\n        )}\n      <DataGrid\n        page={page}\n        onPageChange={params => {\n          setPage(params.page);\n        }}\n        pageSize={5}\n        rowsPerPageOptions={[5, 10, 20]}\n        pagination\n        autoHeight\n        columns={CallerInteractioncolumns}\n        exportButton={true}\n        rows={agentdisposedCalls.map(calls => ({\n          ...calls,\n          id: calls._id\n        }))}\n      />\n    </div>\n  ) : // </Card>\n    showLoader ? (\n      <MainLoader />\n    ) : (\n        <CommonAlert style={{ margin: 20 }} />\n      );\n}\n\nInvoices.propTypes = {\n  distributorInvoices: PropTypes.arrayOf(PropTypes.object),\n  setDistributorInvoicesAction: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  distributorInvoices: state.distributorInvoices\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setDistributorInvoicesAction: invoices =>\n    dispatch(setDistributorInvoices(invoices))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Invoices);\n","import invoices from '../views/admin/invoices';\nimport Orders from '../views/admin/orders';\nimport Dashboard from '../views/DashboardView/index';\nimport agentDispostionList from '../views/admin/agentlastfive';\nimport agentOpentTickets from '../views/admin/agentopenTickets';\nimport distribuerCallDisposedList from '../views/admin/distributerlastfive';\nimport Customers from '../views/admin/callerInteractions'\n\nexport default [\n  {\n    path: '/dashboard',\n    exact: false,\n    key: 'dashboard',\n    component: Dashboard\n  },\n  {\n    path: '/orders',\n    exact: true,\n    key: 'order',\n    component: Orders,\n    crumb: 'Orders'\n  },\n  {\n    path: '/orders/:orderId',\n    exact: true,\n    key: 'orderWithId',\n    component: Orders\n  },\n  {\n    path: '/invoices',\n    exact: true,\n    key: 'invoices',\n    component: invoices,\n    crumb: 'Invoices'\n  },\n  {\n    path: '/invoices/:orderId',\n    exact: true,\n    key: 'invoicesWithId',\n    component: invoices\n  },\n  {\n    path: '/agentlastfive',\n    exact: true,\n    key: 'agentlastfive',\n    component: agentDispostionList,\n    crumb: 'Agent Dispositon List'\n  },\n  {\n    path: '/agentopentickets',\n    exact: true,\n    key: 'Open Ticckets',\n    component: agentOpentTickets,\n    crumb: 'Agent Open Ticket Lists'\n  },\n  {\n    path: '/agentlastfive/:uniqueId',\n    exact: true,\n    key: 'uniqueId',\n    component: agentDispostionList\n  },\n  {\n    path: '/distributerDisposedCallList',\n    exact: true,\n    key: 'distributerDisposedCallList',\n    component: distribuerCallDisposedList,\n    crumb: 'Distributer Call Dispositon List'\n  },\n  {\n    path: '/distributercall/:uniqueId',\n    exact: true,\n    key: 'distributerCallById',\n    component: distribuerCallDisposedList\n  },\n  {\n    path: '/callerInteraction/:callerNumber',\n    exact: true,\n    // key: 'distributerCallById',\n    component: Customers\n  }\n];\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Divider,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\n\nconst user = {\n  avatar: '/static/images/avatars/avatar_6.png',\n  city: 'Los Angeles',\n  country: 'USA',\n  jobTitle: 'Senior Developer',\n  name: 'Katarina Smith',\n  timezone: 'GTM-7'\n};\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  avatar: {\n    height: 100,\n    width: 100\n  }\n}));\n\nconst Profile = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Box\n          alignItems=\"center\"\n          display=\"flex\"\n          flexDirection=\"column\"\n        >\n          <Avatar\n            className={classes.avatar}\n            src={user.avatar}\n          />\n          <Typography\n            color=\"textPrimary\"\n            gutterBottom\n            variant=\"h3\"\n          >\n            {user.name}\n          </Typography>\n          <Typography\n            color=\"textSecondary\"\n            variant=\"body1\"\n          >\n            {`${user.city} ${user.country}`}\n          </Typography>\n          <Typography\n            className={classes.dateText}\n            color=\"textSecondary\"\n            variant=\"body1\"\n          >\n            {`${moment().format('hh:mm A')} ${user.timezone}`}\n          </Typography>\n        </Box>\n      </CardContent>\n      <Divider />\n      <CardActions>\n        <Button\n          color=\"primary\"\n          fullWidth\n          variant=\"text\"\n        >\n          Upload picture\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nProfile.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Profile;\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Grid,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\n\nconst states = [\n  {\n    value: 'alabama',\n    label: 'Alabama'\n  },\n  {\n    value: 'new-york',\n    label: 'New York'\n  },\n  {\n    value: 'san-francisco',\n    label: 'San Francisco'\n  }\n];\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst ProfileDetails = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const [values, setValues] = useState({\n    firstName: 'Katarina',\n    lastName: 'Smith',\n    email: 'demo@devias.io',\n    phone: '',\n    state: 'Alabama',\n    country: 'USA'\n  });\n\n  const handleChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return (\n    <form\n      autoComplete=\"off\"\n      noValidate\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Card>\n        <CardHeader\n          subheader=\"The information can be edited\"\n          title=\"Profile\"\n        />\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={3}\n          >\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                helperText=\"Please specify the first name\"\n                label=\"First name\"\n                name=\"firstName\"\n                onChange={handleChange}\n                required\n                value={values.firstName}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Last name\"\n                name=\"lastName\"\n                onChange={handleChange}\n                required\n                value={values.lastName}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Email Address\"\n                name=\"email\"\n                onChange={handleChange}\n                required\n                value={values.email}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Phone Number\"\n                name=\"phone\"\n                onChange={handleChange}\n                type=\"number\"\n                value={values.phone}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Country\"\n                name=\"country\"\n                onChange={handleChange}\n                required\n                value={values.country}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Select State\"\n                name=\"state\"\n                onChange={handleChange}\n                required\n                select\n                SelectProps={{ native: true }}\n                value={values.state}\n                variant=\"outlined\"\n              >\n                {states.map((option) => (\n                  <option\n                    key={option.value}\n                    value={option.value}\n                  >\n                    {option.label}\n                  </option>\n                ))}\n              </TextField>\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <Box\n          display=\"flex\"\n          justifyContent=\"flex-end\"\n          p={2}\n        >\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Save details\n          </Button>\n        </Box>\n      </Card>\n    </form>\n  );\n};\n\nProfileDetails.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ProfileDetails;\n","import React from 'react';\nimport { Container, Grid, makeStyles } from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Profile from './Profile';\nimport ProfileDetails from './ProfileDetails';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst Account = () => {\n  const classes = useStyles();\n\n  return (\n    <Page className={classes.root} title=\"Account\">\n      <Container maxWidth=\"lg\">\n        <Grid container spacing={3}>\n          <Grid item lg={4} md={6} xs={12}>\n            <Profile />\n          </Grid>\n          <Grid item lg={8} md={6} xs={12}>\n            <ProfileDetails />\n          </Grid>\n        </Grid>\n      </Container>\n    </Page>\n  );\n};\n\nexport default Account;\n","import Account from '../views/account/AccountView';\n\nexport default [\n    {\n        path: '/profile',\n        exact: false,\n        key: 'profile',\n        component: Account\n    }\n];\n","import React from 'react';\nimport { useLocation } from 'react-router';\nimport RouteSwitch from 'src/components/RouteSwitch';\n\n\nconst MainLayout = ({ routes }) => {\n\n  const location = useLocation();\n\n  const isAdmin = location.pathname.startsWith('/admin');\n\n  return (\n    <>\n      {/* Moved to App.js */}\n      {/* <TopBar onMobileNavOpen={() => setMobileNavOpen(true)} />\n      <NavBar\n        onMobileClose={() => setMobileNavOpen(false)}\n        openMobile={isMobileNavOpen}\n      /> */}\n      <RouteSwitch\n        routes={routes}\n        redirectPath={isAdmin ? '/admin/dashboard' : ''}\n      />\n    </>\n  );\n};\n\nexport default MainLayout;\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport TopBar from 'src/components/TopBar';\nimport NavBar from './NavBar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    display: 'flex',\n    height: '100%',\n    overflow: 'hidden',\n    width: '100%'\n  },\n  wrapper: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden',\n    paddingTop: 64,\n    [theme.breakpoints.up('lg')]: {\n      paddingLeft: 256\n    }\n  },\n  contentContainer: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden'\n  },\n  content: {\n    flex: '1 1 auto',\n    height: '100%',\n    overflow: 'auto'\n  }\n}));\n\nconst DashboardLayout = () => {\n  const classes = useStyles();\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false);\n\n  return (\n    <div className={classes.root}>\n      <TopBar onMobileNavOpen={() => setMobileNavOpen(true)} />\n      <NavBar\n        onMobileClose={() => setMobileNavOpen(false)}\n        openMobile={isMobileNavOpen}\n      />\n      <div className={classes.wrapper}>\n        <div className={classes.contentContainer}>\n          <div className={classes.content}>\n            <span>XYZ</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DashboardLayout;\n","import { ADMIN, USER } from '../../../redux/constants';\nimport adminRoutes from './adminRoutes';\nimport userRoutes from './userRoutes';\nimport MainLayout from '../layouts/MainLayout/index';\nimport DashboardLayout from '../layouts/DashboardLayout/index';\n\nexport default [\n    {\n        path: '/admin',\n        accountType: ADMIN,\n        routes: adminRoutes,\n        key: 'admin',\n        component: MainLayout\n    },\n    {\n        path: '/user',\n        accountType: USER,\n        routes: userRoutes,\n        key: 'user',\n        component: DashboardLayout\n    }\n];\n","import 'date-fns';\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardTimePicker,\n} from '@material-ui/pickers';\n\nexport default function MaterialUIPickers(props) {\n    const { label, handleTime } = props\n    // The first commit of Material-UI\n    const [selectedDate, setSelectedDate] = React.useState();\n\n    const handleDateChange = (date) => {\n        // console.log(date, label)\n        setSelectedDate(date)\n        handleTime(date, label)\n    };\n\n    return (\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <Grid container justify=\"space-around\">\n                <KeyboardTimePicker\n                    margin=\"normal\"\n                    id=\"time-picker\"\n                    label={label}\n                    value={selectedDate}\n                    onChange={handleDateChange}\n                    KeyboardButtonProps={{\n                        'aria-label': 'change time',\n                    }}\n                />\n            </Grid>\n        </MuiPickersUtilsProvider>\n    );\n}","import 'date-fns';\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport { Button } from '@material-ui/core';\nimport moment from 'moment'\n\nexport default function MaterialUIPickers(props) {\n  const [startDate, setStartDate] = React.useState(new Date());\n  const handleSubmit = (e) => {\n    props.getALF(startDate)\n  };\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Grid item lg={12} sm={6}>\n        <KeyboardDatePicker\n          disableToolbar\n          variant=\"inline\"\n          format=\"dd/MM/yyyy\"\n          margin=\"normal\"\n          id=\"date-picker-inline\"\n          label=\"Date\"\n          value={startDate}\n          onChange={date => {\n            setStartDate(date)\n            let date1 = moment(date).format()\n            date1 = date1.slice(0, 10)\n            props.setdate(date1)\n          }}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n        />\n      </Grid>\n    </MuiPickersUtilsProvider>\n  );\n}\n","import React, { useState } from 'react'\nimport XLSX from \"xlsx\";\nimport { v4 as uuidv4 } from 'uuid';\nimport axios from 'axios';\nimport { UPLOAD_FILE } from 'src/modules/dashboard-360/utils/endpoints'\n\nconst FileUpload = (props) => {\n    const { id, handleUpload, retries, campaignID } = props\n    const [data1, setData1] = useState([])\n\n\n\n\n    const handleFileChosen = (file) => {\n        const formData = new FormData();\n\n        // Update the formData object\n        console.log(\"file\", file)\n        formData.append('file', file, file.name);\n\n        formData.append('retries', retries);\n        formData.append('ivrCampaignName', campaignID);\n\n\n        axios.post(`${UPLOAD_FILE}/channel/uploadivrfile`, formData)\n            .then((response) => {\n                console.log(response.data)\n                alert(`file uploaded succesfully`)\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n\n\n    };\n\n    return (\n        <div>\n            <div className=\"form-group col-md-6\">\n                {/* <label>Bank Statement File {idx + 1}</label> */}\n                <input type=\"file\" className=\"form-control\"\n                    name=\"bankfile\"\n                    // data-id={idx}\n                    // onChange={this.onChange}\n                    // onChange={this.onChangeHandler}\n                    onChange={e => handleFileChosen(e.target.files[0])}\n                    // value={this.state.bankfile}\n                    // defaultValue={this.state.upload[idx].bankfile}\n                    // id={bankfile}\n                    accept='.csv, .xls,.xlsx'\n                    placeholder=\"true\" multiple required />\n            </div>\n\n\n        </div>\n    );\n}\n\nexport default FileUpload","import React from 'react';\nimport {\n    JsonToCsv,\n\n} from 'react-json-csv';\n\nexport default function DownloadReport({ DownloadData }) {\n\n    console.log(DownloadData,\"download\")\n\n    var filename = 'Download'\n    var fields = {\n        \"no data\": \"no data\"\n    }\n    var style = {\n        padding: \"5px\"\n    }\n    var data = [{\n        \"no data\": \"\"\n    }]\n    var text = \"Download\";\n    if (DownloadData.length) {\n\n        var result = Object.keys(DownloadData[0])\n        var header = {};\n        for (var i = 0; i < result.length; i += 1) {\n            header[result[i]] = result[i];\n            // if(result[i]===\"_id\"){\n            //     header[result[i]]=\"\"\n            // }\n        }\n        filename = 'Download'\n        fields = header\n        style = {\n            padding: \"5px\",\n            //color: 'blue',\n            //backgroundColor: 'blue',\n            border: '5px'\n\n        }\n        data = DownloadData\n        text = \"Generate report\"\n\n\n    }\n    else {\n        filename = 'Download'\n        fields = {\n            \"no data\": \"\"\n        }\n        style = {\n            padding: \"5px\"\n        }\n        data = [{\n            \"no data\": \"no data\"\n        }]\n        text = \"Download\"\n    }\n    return (\n        <div>\n            {DownloadData.length ? <JsonToCsv\n                data={data}\n                filename={filename}\n                fields={fields}\n                style={style}\n                text={text}\n            /> : <></>}\n        </div>\n\n    );\n}\n","import React, { useEffect, useState } from 'react'\nimport TimePicker from './timepicker'\nimport {\n  Box,\n  Card,\n  CardContent,\n  CardHeader,\n  Container,\n  Divider,\n  Grid,\n  makeStyles,\n  Typography,\n  TextField,\n  Paper,\n  Button,\n  Tooltip,\n  IconButton\n\n} from '@material-ui/core';\nimport moment from 'moment';\nimport Date from './DaterangeReport'\nimport { DataGrid } from '@material-ui/data-grid';\nimport axios from 'axios'\nimport FileUpload from './Ivrfileupload'\nimport Showmodal from './Showmodal'\nimport Download from 'src/modules/dashboard-360/views/DashboardView/DownloadReport'\nimport Download1 from './DownloadReport'\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { setDayWithOptions } from 'date-fns/fp';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\nimport QueuePlayNextOutlinedIcon from '@material-ui/icons/QueuePlayNextOutlined';\nimport BackupOutlinedIcon from '@material-ui/icons/BackupOutlined';\nimport DialerSipOutlinedIcon from '@material-ui/icons/DialerSipOutlined';\nimport CallMissedOutgoingOutlinedIcon from '@material-ui/icons/CallMissedOutgoingOutlined';\nimport AddIcCallOutlinedIcon from '@material-ui/icons/AddIcCallOutlined';\nimport PhoneMissedOutlinedIcon from '@material-ui/icons/PhoneMissedOutlined';\nimport MicOffOutlinedIcon from '@material-ui/icons/MicOffOutlined';\nimport PhoneDisabledOutlinedIcon from '@material-ui/icons/PhoneDisabledOutlined';\nimport SettingsPhoneOutlinedIcon from '@material-ui/icons/SettingsPhoneOutlined';\nimport StorageOutlinedIcon from '@material-ui/icons/StorageOutlined';\nimport ReplayOutlinedIcon from '@material-ui/icons/ReplayOutlined';\nimport { CAMPAIGN_REPORT, UPLOAD_FILE } from 'src/modules/dashboard-360/utils/endpoints'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ExcelReport from 'src/components/ExcelReport';\n\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    flexGrow: 1,\n    margin: '1rem 2rem'\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 260,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\n\nconst Campaign = (props) => {\n  const classes = useStyles();\n\n  const [campaigns, setCampaigns] = useState(\"\")\n  const [selectedCamapign, setSelectedCampaign] = useState(\"\")\n  const [campaigndata, setCampaignData] = useState([])\n  const [records1, setRecords] = useState([])\n  const [loader, setLoader] = useState(false)\n  const [englishRecords, setEnglishRecords] = useState(\"\")\n  const [hindiRecords, setHindiRecords] = useState(\"\")\n  const [kannadaRecords, setKannadaRecords] = useState(\"\")\n  const [attemptRecords, setAttemptRecords] = useState(\"\")\n\n  useEffect(() => {\n    getCampaigns()\n\n  }, [])\n\n  useEffect(() => {\n    if (localStorage.getItem('campaign')) {\n      setLoader(true)\n      getExcelData()\n      getInteractionDeatils()\n      const interval = setInterval(async () => {\n        getCampaignDetails()\n        getExcelData()\n        //getExcelData()\n      }, 3000);\n    }\n  }, [selectedCamapign])\n\n\n\n\n  const getCampaigns = () => {\n    axios.get(`${UPLOAD_FILE}/campaign/getAllCampaign`)\n      .then((res) => {\n        setCampaigns(res.data.Record.reverse())\n\n      })\n      .catch((err) => {\n        console.log(\"Failed to get campaigns values\")\n      })\n  }\n\n  const getCampaignDetails = () => {\n\n    const data = {\n      \"ivrCampaignName\": localStorage.getItem('campaign')\n    }\n\n    axios.post(`${UPLOAD_FILE}/channel/getBycampaign`, data)\n      .then((response) => {\n        console.log(response.data, \"particular campaign\")\n\n        response.data.counts[0].Campaignstartdate = response.data.counts[0].Campaignstartdate.replace(\"T\", \" \")\n        response.data.counts[0].Campaignstartdate = response.data.counts[0].Campaignstartdate.slice(0, 19)\n\n        response.data.counts[0].Campaignenddate = response.data.counts[0].Campaignenddate.replace(\"T\", \" \")\n        response.data.counts[0].Campaignenddate = response.data.counts[0].Campaignenddate.slice(0, 19)\n\n\n        // response.data.counts[0].Campaignstartdate = moment(response.data.counts[0].Campaignstartdate).format();\n        // response.data.counts[0].Campaignenddate = moment(response.data.counts[0].Campaignenddate).format();\n        console.log(response.data)\n        setCampaignData(response.data.counts)\n      })\n      .catch((err) => {\n        console.log(err.message, \"failed to fetch campaign details\")\n      })\n  }\n\n  const getInteractionDeatils = () => {\n    var axios = require('axios');\n    var data = JSON.stringify({ \"ivrCampaignName\": localStorage.getItem('campaign') });\n\n    var config = {\n      method: 'post',\n      url: `${UPLOAD_FILE}/channel/getJobreportExcel`,\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data: data\n    };\n\n    axios(config)\n      .then(function (response) {\n        console.log(JSON.stringify(response.data), \"ressssssssssssssssssssssssssss\");\n        setRecords(response.data.Record)\n        response.data.Record.map((ele) => {\n          var formatted = moment.utc(ele.Call_Duration * 1000).format('HH:mm:ss');\n          ele.CDR_Duration = formatted;\n          delete ele._id;\n        })\n\n        setLoader(false)\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n\n\n  const getExcelData = () => {\n    const data = {\n      \"ivrCampaignName\": localStorage.getItem('campaign')\n    }\n\n    var en = []\n    var hi = []\n    var kn = []\n\n    axios.post(`${UPLOAD_FILE}/channel/getinteractionExcel`, data)\n      .then(function (res) {\n        console.log(res.data, \"excel data\");\n        if (res.data.final.length > 0) {\n          // res.data.date = date\n          // res.data.final.map((ele) => {\n          //   return ele.date = date\n          // })\n          console.log(res.data, \"data attempt\")\n          res.data.final.forEach(element => {\n            en.push({\n              ivrsuccess: element.optionE1,\n              option1: element.optionEC1,\n              option2: element.optionEC2,\n              option3: element.optionEC3,\n              Callbackoption1: element.optionECT1,\n              Callbackoption2: element.optionECT2,\n              Callbackoption3: element.optionECT3,\n              InvalidOption: element.optionEInvalid1,\n            })\n            hi.push({\n              ivrsuccess: element.optionH2,\n              option1: element.optionHC1,\n              option2: element.optionHC2,\n              option3: element.optionHC3,\n              Callbackoption1: element.optionHCT1,\n              Callbackoption2: element.optionHCT2,\n              Callbackoption3: element.optionHCT3,\n              InvalidOption: element.optionHInvalid2,\n            })\n            kn.push({\n              ivrsuccess: element.optionK3,\n              option1: element.optionKC1,\n              option2: element.optionKC2,\n              option3: element.optionKC3,\n              Callbackoption1: element.optionKCT1,\n              Callbackoption2: element.optionKCT2,\n              Callbackoption3: element.optionKCT3,\n              InvalidOption: element.optionKInvalid3,\n            })\n          });\n\n          setEnglishRecords(en)\n          setHindiRecords(hi)\n          setKannadaRecords(kn)\n          setAttemptRecords(res.data.final)\n        }\n      })\n      .catch(function (error) {\n        console.log(error.message, \"failed to fetch excel data\");\n      });\n  }\n\n\n  const handleChange = (e) => {\n    localStorage.setItem(\"campaign\", e.target.value)\n    setSelectedCampaign(e.target.value)\n  }\n\n\n  const englishColumns = [\n    {\n      headerName: 'Attempt',\n      field: 'attempt',\n      flex: 0.5\n\n    },\n    {\n      headerName: 'IVR Success',\n      field: 'optionE1',\n      flex: 0.5\n\n    },\n    {\n      headerName: 'Call now',\n      field: 'optionEC1',\n      flex: 0.5,\n\n    },\n    {\n      headerName: 'Call back',\n      field: 'optionEC2',\n      flex: 0.5\n    },\n    {\n      headerName: 'Call back on tommorow',\n      field: 'optionEC3',\n      flex: 0.6\n    },\n    {\n      headerName: 'Call back 1 ',\n      field: 'optionECT1',\n      flex: 0.4,\n\n    },\n    {\n      headerName: 'Call back 2 ',\n      field: 'optionECT2',\n      flex: 0.4\n    },\n    {\n      headerName: 'Call back 3 ',\n      field: 'optionECT3',\n      flex: 0.4\n    },\n    {\n      headerName: 'Invalid Option',\n      field: 'optionEInvalid1',\n      flex: 0.4\n    },\n\n\n  ];\n\n  const kannadaColumns = [\n    {\n      headerName: 'Attempt',\n      field: 'attempt',\n      flex: 0.5\n\n    },\n    {\n      headerName: 'IVR Success',\n      field: 'optionK3',\n      flex: 0.5\n\n    },\n    {\n      headerName: 'Call now',\n      field: 'optionKC1',\n      flex: 0.5,\n\n    },\n    {\n      headerName: 'Call back',\n      field: 'optionKC2',\n      flex: 0.5\n    },\n    {\n      headerName: 'Call back on tommorow',\n      field: 'optionKC3',\n      flex: 0.6\n    },\n    {\n      headerName: 'Call back 1 ',\n      field: 'optionKCT1',\n      flex: 0.4,\n\n    },\n    {\n      headerName: 'Call back 2 ',\n      field: 'optionKCT2',\n      flex: 0.4\n    },\n    {\n      headerName: 'Call back 3 ',\n      field: 'optionKCT3',\n      flex: 0.4\n    },\n    {\n      headerName: 'Invalid Option',\n      field: 'optionKInvalid3',\n      flex: 0.4\n    },\n\n  ];\n\n  const hindiColumns = [\n    {\n      headerName: 'Attempt',\n      field: 'attempt',\n      flex: 0.5\n\n    },\n    {\n      headerName: 'IVR Success',\n      field: 'optionH2',\n      flex: 0.5\n\n    },\n    {\n      headerName: 'Call now',\n      field: 'optionHC1',\n      flex: 0.5,\n\n    },\n    {\n      headerName: 'Call back',\n      field: 'optionHC2',\n      flex: 0.5\n    },\n    {\n      headerName: 'Call back on tommorow',\n      field: 'optionHC3',\n      flex: 0.6\n    },\n    {\n      headerName: 'Call back 1 ',\n      field: 'optionHCT1',\n      flex: 0.4,\n\n    },\n    {\n      headerName: 'Call back 2 ',\n      field: 'optionHCT2',\n      flex: 0.4\n    },\n    {\n      headerName: 'Call back 3 ',\n      field: 'optionHCT3',\n      flex: 0.4\n    },\n    {\n      headerName: 'Invalid Option',\n      field: 'optionHInvalid2',\n      flex: 0.4\n    },\n\n  ];\n\n\n  return (<div>\n    {/* <h3 style={{ textAlign: 'center' }}>Campaign Monitoring</h3> */}\n\n    <Grid container spacing={3}>\n      {/* <Grid item lg={12} md={12} xs={12}></Grid> */}\n      <Grid item lg={5} md={12} xs={12}></Grid>\n      <Grid item lg={2} md={12} xs={12}>\n        <FormControl variant=\"outlined\" className={classes.formControl} >\n          <InputLabel id=\"demo-simple-select-outlined-label\">Campaign</InputLabel>\n          <Select\n            labelId=\"demo-simple-select-outlined-label\"\n            id=\"demo-simple-select-outlined\"\n            value={selectedCamapign}\n            onChange={handleChange}\n            label=\"Campaign\"\n            autoWidth=\"true\"\n          >\n            {\n              campaigns.length > 0 ? (\n                campaigns.map((ele) => {\n                  return (<MenuItem value={ele.campaign_name}>{ele.campaign_name}</MenuItem>)\n                })\n              ) : (null)\n            }\n\n          </Select>\n        </FormControl>\n      </Grid>\n\n      <Grid item lg={5} md={12} xs={12}></Grid>\n      <Grid item lg={12} md={12} xs={12}>\n        {\n          loader ? (<h1 style={{ textAlign: 'center' }}><CircularProgress /></h1>) : (null)\n        }\n\n      </Grid>\n      {campaigndata.length > 0 ? <>\n        <Grid item lg={3} md={12} xs={12}>\n          <Card style={{ backgroundColor: '#A52A2A', borderRadius: '12px', fontSize: '13px' }}>\n            <CardContent><h3 style={{ color: 'white', textAlign: 'center' }}><b><ScheduleIcon /> Start date : </b>{campaigndata[0].Campaignstartdate}</h3></CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item lg={3} md={12} xs={12}>\n          <Card style={{ backgroundColor: '#696969', borderRadius: '12px', fontSize: '13px' }}>\n            <CardContent><h3 style={{ color: 'white', textAlign: 'center' }}><b><ScheduleIcon /> End date : </b>{campaigndata[0].Campaignenddate}</h3></CardContent>\n          </Card>\n\n        </Grid>\n\n        <Grid item lg={3} md={12} xs={12}>\n          <Card style={{ backgroundColor: '#800080', borderRadius: '12px', fontSize: '13px' }}>\n            <CardContent><h3 style={{ color: 'white', textAlign: 'center' }}><b><QueuePlayNextOutlinedIcon /> Queue: </b>{campaigndata[0].queue}</h3></CardContent>\n          </Card>\n\n        </Grid>\n\n\n        <Grid item lg={3} md={12} xs={12}>\n          <Card style={{ backgroundColor: '#66CDAA', borderRadius: '12px', justifyContent: 'center', fontSize: '13px' }}>\n            <CardContent><h3 style={{ color: 'white', textAlign: 'center' }}><b><BackupOutlinedIcon /> Total Records Uploaded : </b>{campaigndata[0].totalRecords}</h3></CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item lg={3} md={12} xs={12}>\n          <Card style={{ backgroundColor: '#191970', borderRadius: '12px', fontSize: '13px' }}>\n            <CardContent><h3 style={{ color: 'white', textAlign: 'center' }}><b><DialerSipOutlinedIcon /> Dailed records Count: </b>{campaigndata[0].DailedCountrecordsCount}</h3></CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item lg={3} md={12} xs={12}>\n          <Card style={{ backgroundColor: '#6B8E23', borderRadius: '12px', fontSize: '13px' }}>\n            <CardContent><h3 style={{ color: 'white', textAlign: 'center' }}><b><CallMissedOutgoingOutlinedIcon /> NotDailed records Count: </b>{campaigndata[0].NotDailedrecordsCount}</h3></CardContent>\n          </Card>\n        </Grid>\n\n\n        <Grid item lg={3} md={12} xs={12}>\n          <Card style={{ backgroundColor: '#006400', borderRadius: '12px', fontSize: '13px' }}>\n            <CardContent><h3 style={{ color: 'white', textAlign: 'center' }}><b><AddIcCallOutlinedIcon /> Answered records Count: </b>{campaigndata[0].AnsweredrecordCount}</h3></CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item lg={3} md={12} xs={12}>\n          <Card style={{ backgroundColor: '#BC8F8F', borderRadius: '12px', fontSize: '13px' }}>\n            <CardContent><h3 style={{ color: 'white', textAlign: 'center' }}><b><PhoneMissedOutlinedIcon /> Not Answered records Count: </b>{campaigndata[0].NoAnsweredrecordCount}</h3></CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item lg={3} md={12} xs={12}>\n          <Card style={{ backgroundColor: '#FA8072', borderRadius: '12px', fontSize: '13px' }}>\n            <CardContent><h3 style={{ color: 'white', textAlign: 'center' }}><b><PhoneDisabledOutlinedIcon /> Failed calls records Count: </b>{campaigndata[0].FailerrecordCount}</h3></CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item lg={3} md={12} xs={12}>\n          <Card style={{ backgroundColor: '#708090', borderRadius: '12px', fontSize: '13px' }}>\n            <CardContent><h3 style={{ color: 'white', textAlign: 'center' }}><b><MicOffOutlinedIcon /> Busy calls records Count: </b>{campaigndata[0].BusyrecordCount}</h3></CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item lg={3} md={12} xs={12}>\n          <Card style={{ backgroundColor: '#2F4F4F', borderRadius: '12px', fontSize: '13px' }}>\n            <CardContent><h3 style={{ color: 'white', textAlign: 'center' }}><b><SettingsPhoneOutlinedIcon /> Congestion calls records Count: </b>{campaigndata[0].CongestionrecordCount}</h3></CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item lg={3} md={12} xs={12}>\n          <Card style={{ backgroundColor: '#DAA520', borderRadius: '12px', fontSize: '13px' }}>\n            <CardContent ><h3 style={{ color: 'white', textAlign: 'center' }}><b> <StorageOutlinedIcon /> Job complete records Count: </b>{campaigndata[0].jobcompleterecordcount}</h3></CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={3} md={12} xs={12}>\n          <Card style={{ backgroundColor: '#808000', borderRadius: '12px', fontSize: '13px' }}>\n            <CardContent><h3 style={{ color: 'white', textAlign: 'center' }}><b> <StorageOutlinedIcon /> Job not complete records Count: </b>{campaigndata[0].jobnotcompleterecordcount}</h3></CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={3} md={12} xs={12}>\n          <Card style={{ backgroundColor: '#0000CD', borderRadius: '12px', fontSize: '13px' }}>\n            <CardContent><h3 style={{ color: 'white', textAlign: 'center' }}><b><ReplayOutlinedIcon /> Retries : </b>{campaigndata[0].retries}</h3></CardContent>\n          </Card>\n        </Grid>\n        {\n          records1.length > 0 && <Grid item lg={3} md={12} xs={12}>\n            <Button>\n              <Download DownloadData={records1} />\n            </Button>\n          </Grid>\n        }\n\n\n\n      </> : <></>}\n      <Grid item lg={12} md={12} xs={12}></Grid>\n      <Grid item lg={2} md={12} xs={12}>\n        <br></br>\n        <br></br>\n        <Button>\n          <Download1 DownloadData={englishRecords} />\n        </Button>\n      </Grid>\n      {attemptRecords.length > 0 && <Grid item lg={12} md={12} xs={12}>\n        <Card >\n          <CardContent style={{ 'height': '300px' }}>\n            <h4>English Calls</h4>\n            <DataGrid rows={attemptRecords} columns={englishColumns} pageSize={5}\n              pagination />\n\n          </CardContent>\n        </Card>\n      </Grid>\n      }\n    </Grid>\n    <Grid item lg={2} md={12} xs={12}>\n      <br></br>\n      <br></br>\n      <Button>\n        <Download1 DownloadData={hindiRecords} />\n      </Button>\n    </Grid>\n    {attemptRecords.length > 0 && <Grid item lg={12} md={12} xs={12}>\n      <Card >\n        <CardContent style={{ 'height': '300px' }}>\n          <h4>Hindi Calls</h4>\n          <DataGrid rows={attemptRecords} columns={hindiColumns} pageSize={5}\n            pagination />\n        </CardContent>\n      </Card>\n    </Grid>\n    }\n    <Grid item lg={2} md={12} xs={12}>\n      <br></br>\n      <br></br>\n      <Button>\n        <Download1 DownloadData={kannadaRecords} />\n      </Button>\n    </Grid>\n    {attemptRecords.length > 0 && <Grid item lg={12} md={12} xs={12}>\n      <Card >\n        <CardContent style={{ 'height': '300px' }}>\n          <h4>kannada Calls</h4>\n          <DataGrid rows={attemptRecords} columns={kannadaColumns} pageSize={5}\n            pagination />\n        </CardContent>\n      </Card>\n    </Grid>\n    }\n\n  </div >)\n}\n\nexport default Campaign","import { Button } from '@material-ui/core';\nimport React from 'react';\nimport ReactExport from 'react-export-excel';\n\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n\nconst ExcelReport = ({ data, fileName }) => {\n    return (\n        <ExcelFile\n            filename={fileName}\n            element={\n                <Button variant=\"contained\" color=\"primary\" size=\"small\">\n                    Download\n        </Button>\n            }\n        >\n            <ExcelSheet data={data} name=\"Table\">\n                {Object.entries(data[0]).map(([key, value]) => {\n                    return <ExcelColumn label={key} key={key} value={key} />;\n                })}\n            </ExcelSheet>\n        </ExcelFile>\n    );\n};\n\nexport default ExcelReport;","import dashboard from '../views/dashboard';\n\nexport default [\n  {\n    path: '/dashboard',\n    key: 'dashboard',\n    component: dashboard\n  }\n];\n","import dashboard from '../views/dashboard';\n\nexport default [\n  {\n    path: '/dashboard',\n    key: 'dashboard',\n    component: dashboard\n  }\n];\n","import React, { useRef } from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nexport default function App() {\n  const { register, handleSubmit } = useForm();\n  const firstNameRef = useRef();\n  const onSubmit = data => console.log(data);\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <input name=\"firstName\" ref={(e) => {\n        register(e)\n        firstNameRef.current = e // you can still assign to ref\n      }} />\n      <input name=\"lastName\" ref={(e) => {\n        // register's first argument is ref, and second is validation rules\n        register(e, { required: true })\n      }} />\n\n      <button>Submit</button>\n    </form>\n  );\n}","import { v4 as uuid } from 'uuid';\n\nexport default [\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'West Virginia',\n      city: 'Parkersburg',\n      street: '2849 Fulton Street'\n    },\n    avatarUrl: '/static/images/avatars/avatar_3.png',\n    createdAt: 1555016400000,\n    email: 'ekaterina.tankova@devias.io',\n    name: 'Ekaterina Tankova',\n    phone: '304-428-3097'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Bristow',\n      city: 'Iowa',\n      street: '1865  Pleasant Hill Road'\n    },\n    avatarUrl: '/static/images/avatars/avatar_4.png',\n    createdAt: 1555016400000,\n    email: 'cao.yu@devias.io',\n    name: 'Cao Yu',\n    phone: '712-351-5711'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Georgia',\n      city: 'Atlanta',\n      street: '4894  Lakeland Park Drive'\n    },\n    avatarUrl: '/static/images/avatars/avatar_2.png',\n    createdAt: 1555016400000,\n    email: 'alexa.richardson@devias.io',\n    name: 'Alexa Richardson',\n    phone: '770-635-2682'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Ohio',\n      city: 'Dover',\n      street: '4158  Hedge Street'\n    },\n    avatarUrl: '/static/images/avatars/avatar_5.png',\n    createdAt: 1554930000000,\n    email: 'anje.keizer@devias.io',\n    name: 'Anje Keizer',\n    phone: '908-691-3242'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Texas',\n      city: 'Dallas',\n      street: '75247'\n    },\n    avatarUrl: '/static/images/avatars/avatar_6.png',\n    createdAt: 1554757200000,\n    email: 'clarke.gillebert@devias.io',\n    name: 'Clarke Gillebert',\n    phone: '972-333-4106'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'California',\n      city: 'Bakerfield',\n      street: '317 Angus Road'\n    },\n    avatarUrl: '/static/images/avatars/avatar_1.png',\n    createdAt: 1554670800000,\n    email: 'adam.denisov@devias.io',\n    name: 'Adam Denisov',\n    phone: '858-602-3409'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'California',\n      city: 'Redondo Beach',\n      street: '2188  Armbrester Drive'\n    },\n    avatarUrl: '/static/images/avatars/avatar_7.png',\n    createdAt: 1554325200000,\n    email: 'ava.gregoraci@devias.io',\n    name: 'Ava Gregoraci',\n    phone: '415-907-2647'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Nevada',\n      city: 'Las Vegas',\n      street: '1798  Hickory Ridge Drive'\n    },\n    avatarUrl: '/static/images/avatars/avatar_8.png',\n    createdAt: 1523048400000,\n    email: 'emilee.simchenko@devias.io',\n    name: 'Emilee Simchenko',\n    phone: '702-661-1654'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Michigan',\n      city: 'Detroit',\n      street: '3934  Wildrose Lane'\n    },\n    avatarUrl: '/static/images/avatars/avatar_9.png',\n    createdAt: 1554702800000,\n    email: 'kwak.seong.min@devias.io',\n    name: 'Kwak Seong-Min',\n    phone: '313-812-8947'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Utah',\n      city: 'Salt Lake City',\n      street: '368 Lamberts Branch Road'\n    },\n    avatarUrl: '/static/images/avatars/avatar_10.png',\n    createdAt: 1522702800000,\n    email: 'merrile.burgett@devias.io',\n    name: 'Merrile Burgett',\n    phone: '801-301-7894'\n  }\n];\n","import React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux'\nimport {\n  setLoggedIn,\n  setUserDetails,\n  setAccountType\n} from '../../../redux/action';\nimport Axios from 'axios';\nimport { ADMIN, USER } from 'src/redux/constants';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n// import Typography from '@material-ui/core/Typography';\nimport Logo from '../../dashboard-360/components/loginlogo'\nimport axios from 'axios';\nimport data from 'src/modules/dashboard-360/views/customer/CustomerListView/data';\nimport { date } from 'date-fns/locale/af';\nimport { AUTH, AGENT_SERVICE, AMI } from 'src/modules/dashboard-360/utils/endpoints'\n\n\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://www.grssl.com/\">\n        Grassroots\n      </Link>{' '}\n      {2021}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst theme = createMuiTheme();\n\ntheme.typography.h6 = {\n  fontSize: '1rem',\n  '@media (min-width:600px)': {\n    fontSize: '1rem',\n  },\n  [theme.breakpoints.up('md')]: {\n    fontSize: '1rem',\n  },\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100vh'\n  },\n  image: {\n    backgroundImage: 'url(/static/images/merittrack.jpg)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light'\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center'\n  },\n  paper: {\n    margin: theme.spacing(4),\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1)\n  },\n  imageWrapper: {\n    background:\n      'linear-gradient(45eg, rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.15))',\n    height: '100%',\n    width: '100%'\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  avatarWrapper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  }\n}));\n\n\nvar APIENDPOINT = 'http://192.168.4.44:53003';\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n/// addToQueue start //////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction addToQueue(agentId, queue) {\n  console.log(agentId, \"agentid\")\n  var axios = require('axios');\n  var data = JSON.stringify({\n    agentId: agentId,\n    queue: queue,\n    action: 'QueueAdd'\n  });\n\n  var config = {\n    method: 'get',\n    url:\n      APIENDPOINT +\n      '/ami/actions/addq?Interface=' + agentId + '&Queue=' +\n      queue +\n      '',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  axios(config)\n    .then(function (response) { console.log(response) })\n    .catch(function (error) {\n      console.log(error);\n    });\n}\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n/// addToQueue end //////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n/// removeFromQueue start //////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction removeFromQueue(agentId, queue) {\n  var axios = require('axios');\n  var data = JSON.stringify({\n    agentId: agentId,\n    queue: queue,\n    action: 'QueueRemove'\n  });\n\n  var config = {\n    method: 'get',\n    url:\n      APIENDPOINT +\n      '/ami/actions/rmq?Queue=' +\n      queue +\n      '&Interface=' + agentId + '',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  axios(config)\n    .then(function (response) {\n\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n/// removeFromQueue end //////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\n\nfunction Login({ setLoggedInMain, setAccountTypeMain, setUserDetailsMain }) {\n  const classes = useStyles();\n\n  const dispatch = useDispatch()\n  const [error, setError] = useState('');\n  const [visibility, setVisibility] = useState(false)\n  const [data1, setData1] = useState({})\n  const [otp, setOtp] = useState(\"\")\n\n\n  const setotphandle = (e) => setOtp(e.target.value)\n  async function authenticate(values) {\n    setError('');\n    try {\n      console.log(values)\n      console.log(AUTH)\n      const url = `${AUTH}/sendOtp`\n      // // const url='http://192.168.3.45:42009/user/login'\n      // console.log(\"values\", values)\n      const data = {}\n      data.username = values.email\n      data.password = values.password\n\n      setData1(data)\n\n      const res = await Axios.post(url, data);\n      var myObj = res.data;\n      console.log(myObj)\n\n      if ('statusCode' in myObj) {\n        setLoggedInMain(false);\n        setError(true);\n      } if ('status' in myObj) {\n        setVisibility(true)\n\n\n\n      } else {\n        setLoggedInMain(false);\n        console.log(\"i am in catch 1\")\n        setError(true);\n      }\n\n    } catch (err) {\n      setLoggedInMain(false);\n      console.log(\"here i am catch2\")\n      setError(true);\n    }\n  }\n  const handlelogin = (e) => {\n\n    const data2 = data1\n    data2.OTP = otp\n    // console.log(data2)\n\n    axios.post(`${AUTH}/login`, data2)\n      .then((res) => {\n        console.log(res)\n        var myObj = res.data;\n        console.log(myObj)\n        if ('statusCode' in myObj) {\n          setLoggedInMain(false);\n          setError(true);\n        } if ('status' in myObj) {\n\n          setVisibility(true)\n\n          console.log(\"login api\", res.data)\n          if (res.data.status === \"ok\") {\n            const obj = res.data;\n            dispatch(setUserDetails(res.data))\n            console.log(obj, \"login\")\n            const accessToken = res.data.data;\n\n            // console.log('data', res.data)\n            localStorage.setItem(\"jwtToken\", accessToken);\n            // localStorage.setItem('AgentSIPID', res.data.userData.id);\n            localStorage.setItem('role', myObj.user.role);\n            localStorage.setItem('startDate', new Date())\n            localStorage.setItem('EndDate', new Date())\n            localStorage.setItem('option', 'ALL')\n            // localStorage.setItem('Agenttype', res.data.userDetails.AgentType);\n            if (myObj.user.role === 'agent') {\n              localStorage.setItem('AgentSIPID', res.data.userData.id);\n              localStorage.setItem('Agent_Object_ID', res.data.userData._id)\n              // localStorage.setItem('role', 'Admin')\n              // localStorage.setItem('Queue', res.data.userData.Queue)\n            } else {\n              setLoggedInMain(true);\n              setError(false);\n            }\n\n            localStorage.setItem('AgentType', 'Inbound');\n\n            setUserDetailsMain(obj);\n            setAccountTypeMain(obj.user.role === 'agent' ? ADMIN : USER);\n\n\n            // console.log(\" i am inside\")\n            console.log(\"login api\", res.data)\n            if (myObj.user.role === 'agent') {\n              var axios = require('axios');\n              var data1 = '';\n\n              var config = {\n                method: 'get',\n                url: `${AMI}/actions/addq?Queue=${res.data.userData.Queue}&Interface=${res.data.userData.Location}`,\n                headers: {},\n                data: data1\n              };\n\n\n              axios(config)\n                .then(function (response) {\n                  console.log(response.data, \"queue addedd\");\n                })\n                .catch(function (error) {\n                  console.log(error, \"error in adding queue\");\n                });\n\n              var axios = require('axios');\n              var data = JSON.stringify({ \"Event\": \"LoggedIn\" });\n\n              var config = {\n                method: 'put',\n                url: `${AGENT_SERVICE}/agents/${res.data.userData._id}`,\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                data: data\n              };\n\n              axios(config)\n                .then(function (response) {\n                  console.log(JSON.stringify(response.data), \"status changed\");\n                })\n                .catch(function (error) {\n                  console.log(error);\n                });\n\n              const AgentSIPID = res.data.userData.id\n              var axios = require('axios');\n              var config = {\n                method: 'get',\n                url: `${AMI}/actions/break?Queue=${res.data.userData.Queue}&Interface=SIP%2F${AgentSIPID}&Reason=BREAK_OUT&Break=false`,\n                headers: {}\n              };\n\n              axios(config)\n                .then(function (response) {\n                  console.log((response.data));\n\n                })\n                .catch(function (error) {\n                  console.log(error);\n                });\n\n              setLoggedInMain(true);\n              setError(false);\n            }\n\n          } else {\n            setLoggedInMain(false);\n            setError(true);\n          }\n        }\n      })\n      .catch((err) => {\n        console.log(err)\n        setLoggedInMain(false);\n        setError(true);\n      })\n  }\n\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={8} className={classes.image}>\n        <div className={classes.imageWrapper} />\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        sm={8}\n        md={4}\n        component={Paper}\n        elevation={6}\n        square\n        style={{ display: 'flex' }}\n      >\n        <div className={`${classes.paper}`}>\n          <div>\n            <div className={classes.avatarWrapper}>\n              <Avatar className={classes.avatar}>\n                <LockOutlinedIcon />\n              </Avatar>\n              <Typography component=\"h1\" variant=\"h5\">\n                Sign in\n              </Typography>\n            </div>\n            <Formik\n              initialValues={{\n                email: '',\n                password: '',\n              }}\n              validationSchema={Yup.object().shape({\n                email: Yup.string()\n                  .email('Must be a valid email')\n                  .max(256)\n                  .required('Email is required'),\n                password: Yup.string()\n                  .max(10)\n                  .required('Password is required')\n              })}\n              onSubmit={values => {\n                console.log('values', values);\n                localStorage.setItem('AgentType', values.AgentType);\n                localStorage.setItem('role', values.role);\n                localStorage.setItem('AgentSIPID', values.AgentSIPID);\n\n                // navigate('/app/dashboard', { replace: true });\n                authenticate(values);\n              }}\n            >\n              {({\n                errors,\n                handleBlur,\n                handleChange,\n                handleSubmit,\n                touched,\n                values\n              }) => (\n                <form onSubmit={handleSubmit}>\n                  <TextField\n                    fullWidth\n                    label=\"Email\"\n                    margin=\"normal\"\n                    name=\"email\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    type=\"email\"\n                    value={values.email}\n                    variant=\"outlined\"\n                  />\n                  <TextField\n                    error={Boolean(touched.password && errors.password)}\n                    fullWidth\n                    helperText={touched.password && errors.password}\n                    label=\"Password\"\n                    margin=\"normal\"\n                    name=\"password\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    type=\"password\"\n                    value={values.password}\n                    variant=\"outlined\"\n                  />\n                  { visibility ? (<div><TextField\n                    fullWidth\n                    label=\"otp\"\n                    margin=\"normal\"\n                    name=\"password\"\n                    value={otp}\n                    onChange={setotphandle}\n                    // onBlur={handleBlur}\n                    // onChange={handleChange}\n                    type=\"text\"\n                    variant=\"outlined\"\n                  />\n\n                  </div>) : (null)\n                  }\n\n                  {!!error && (\n                    <Box my={1}>\n                      <Typography color=\"secondary\">\n                        Invalid Username/Password\n                      </Typography>\n                    </Box>\n                  )}\n\n                  {\n                    visibility === false ? (<Box my={2} mt={5}>\n                      <Button\n                        color=\"primary\"\n                        fullWidth\n                        size=\"large\"\n                        type=\"submit\"\n                        variant=\"contained\"\n                      >Request OTP\n                      </Button>\n                    </Box>) : (null)\n                  }\n\n                </form>\n              )}\n            </Formik>\n            <Box mt={5}>\n              {\n                visibility ? (<Button\n                  color=\"primary\"\n                  fullWidth\n                  size=\"large\"\n                  variant=\"contained\"\n                  onClick={handlelogin}\n                >Sign In Now\n                </Button>) : (null)\n              }\n\n              <Typography align=\"center\">\n                Tap Start Outbound\n              </Typography>\n\n            </Box>\n\n            <Box mt={5}>\n              <Copyright />\n            </Box>\n          </div>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}\nconst mapDispatchToProps = dispatch => ({\n  setUserDetailsMain: details => dispatch(setUserDetails(details)),\n  setAccountTypeMain: type => dispatch(setAccountType(type)),\n  setLoggedInMain: val => dispatch(setLoggedIn(val))\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n","import Login from '../views/Login';\n\nexport default [\n  {\n    path: '/login',\n    component: Login,\n    key: 'login'\n  }\n];\n\n","import { Field, Form, Formik } from 'formik';\nimport React, { useRef, useState } from 'react';\nimport { TextField, RadioGroup } from 'formik-material-ui';\nimport { useEffect } from 'react';\nimport {\n  UPDATE_CALL_STATUS,\n  UPDATE_CURRENT_STATUS,\n} from 'src/modules/dashboard-360/utils/endpoints';\nimport {\n  Button,\n  FormControl,\n  FormControlLabel,\n  Grid,\n  makeStyles,\n  Radio\n} from '@material-ui/core';\nimport * as yup from 'yup';\nimport Axios from 'axios';\n// import config from '../../../ticketing/views/config.json';g\nimport { Autocomplete } from '@material-ui/lab';\nimport { set } from 'lodash';\n// import { AlternateEmailTwoTone } from '@material-ui/icons';\nconst useStyle = makeStyles(() => ({\n  fieldContainer: {\n    width: '100%'\n  }\n}));\nexport default function DispositionForm({...props}) {\n  const config = \"http://192.168.3.45:8083/\"\n \n  const [initialValue, setInitialValue] = useState({\n\n    AgentName: '',\n    AgentEmail: '',\n    Agentcontact: '',\n    enable: false,\n    AgentType: {\n      value: \"\",\n      label: \"\"\n    },\n    Group:{\n      value: \"\",\n      label: \"\"\n    }\n  });\n  const [Groups, setGroups] = useState([]);\n  const classes = useStyle();\n  const formRef = useRef({});\n  const agentServiceURL = 'http://164.52.205.10:42004/';\n  const AgentType = [\n    {\n      id: '1', value: 'L1',\n    },\n    {\n      id: '2', value: 'L2',\n    },\n\n  ]\n  // const Groups = [\n  //   {\n  //     id: '1', value: 'Grassroots DD',\n  //   },\n  //   {\n  //     id: '2', value: 'Grassroots OMR',\n  //   },\n  //   {\n  //     id: '3', value: 'Grassroots Site1',\n  //   },\n\n  // ]\n\n\n  function updateAgentCallStatus(contactNumber) {\n    console.log(\"contactNumber\",contactNumber)\n    var axios = require('axios');\n    \n    var data = {\n      agentCallDispositionStatus: \"NotDisposed\",\n      agentCallType: \"Inbound\",\n      agentCallUniqueId: \"1610712538.46886\",\n      agentCallEvent: \"Bridge\",\n      agentCallStatus: \"disconnected\",\n      agentID: \"9998\",\n      agentSipID: \"9998\",\n      contactNumber:contactNumber,\n      breakStatus: \"OUT\",\n     \n    };\n    var config = {\n\n      method: 'post',\n      url: 'http://164.52.205.10:42004/crm/currentstatuses',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data: data\n    };\n\n    axios(config)\n      .then(function (response) {\n        console.log(\"update\", JSON.stringify(response.data));\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n  async function pushAgentCurrentStatusData(data){\n    const url = agentServiceURL + 'crm/currentstatuses';\n    const result = await fetch(url, { method: 'post', body: JSON.stringify(data), headers: { 'Content-Type': 'application/json' } });\n   console.log(\"result\", result)\n    return await result.json();\n  }\n  function handleSubmit(e) {\n\n    console.log('formRef', formRef.current.values);\n    const data = {\n      \"AgentName\": formRef.current.values.AgentName,\n      \"AgentEmail\": formRef.current.values.AgentEmail,\n\n      \"Agentcontact\": formRef.current.values.Agentcontact,\n      \"AgentType\": formRef.current.values.AgentType.value,\n      \"group\": formRef.current.values.Group.group_name,\n    }\n    const url = 'http://164.52.205.10:4000/admin/agent/addAgent'\n\n    Axios.post(url, {data},{ headers: { Authorization:`Bearer ${localStorage.getItem('jwtToken')}` } })\n      .then(function (response) {\n        console.log(response);\n        if (response.data.status === 200) {\n          alert(\"Created Agent Successfully\")\n          // updateAgentCallStatus(formRef.current.values.Agentcontact)\n          const result={\n            \"agentCallDispositionStatus\": \"NA\",\n            \"agentCallType\": \"Inbound\",\n            \"agentCallUniqueId\": \"NA\",\n            \"agentCallEvent\": \"NewState\",\n            \"agentCallStatus\": \"ringing\",\n            \"agentID\": data.Agentcontact,\n            \"agentSipID\": data.Agentcontact,\n            \"breakStatus\": \"NA\",\n            \"newstateinbound\": \"\",\n            \"newstateoutbound\": \"NA\",\n            \"bridgeUniqueid1\": \"NA\",\n            \"bridgeUniqueid2\": \"NA\",\n            \"channel\": \"NA\",\n            \"contactNumber\":data.Agentcontact,\n            \"agenttype\":data.AgentType\n          }\n       \n          pushAgentCurrentStatusData(result)\n          props.TableData()\n        }\n        else{\n          alert(response.data.message)\n        console.log( \"formRef.current\",formRef.current)\n       \n        }\n      })\n\n      setInitialValue({\n\n        AgentName: '',\n        AgentEmail: '',\n        Agentcontact: '',\n        location: '',\n       \n        AgentType: {\n          value: \"\",\n          label: \"\",\n          id:\"\"\n        }\n      });\n     \n      formRef.current.values.AgentName = \"\"\n      formRef.current.values.AgentEmail = \"\"\n      formRef.current.values.Agentcontact = \"\"\n      formRef.current.values.location = \"\"\n      formRef.current.values.AgentType.label = \"\"\n      formRef.current.values.AgentType.value = \"\"\n      formRef.current.values.AgentType.id = \"\"\n      formRef.current.values.Group={ value: \"\",\n      label: \"\"}\n      console.log(\"initialValue\", initialValue)\n     \n    e.preventDefault()\n  \n\n  }\n\n\n\n\n  useEffect(() => {\n    console.log('formRef', formRef.current.values);\n    console.log(\"initialValue\", initialValue)\n    const url = 'http://164.52.205.10:4000/admin/group/getGroup'\n\n    Axios.post(url,{},{ headers: { Authorization:`Bearer ${localStorage.getItem('jwtToken')}` } })\n      .then(function (response) {\n        console.log(response);\n        if (response.data.status === 200) {\n          // roup=response.data.data\n          setGroups(response.data.data)\n        }\n        else{\n          alert(response.data.message)\n    \n       \n        }\n      })\n\n\n  }, [])\n  const [autoCompleteKey, setAutoCompleteKey] = useState(0);\n  return (\n    <Formik\n      validateOnBlur={false}\n      initialValues={initialValue}\n      disform={initialValue}\n      onSubmit={(e, { validate }, { resetForm }) => {\n        console.log(\"e\", e)\n        handleSubmit(e);\n        validate(e);\n        resetForm({ e: '' })\n      }}\n      innerRef={formRef}\n      validationSchema={yup.object({\n        AgentType: yup\n          .object()\n          .required('Please select a Agent Type')\n          .typeError('Please select a valid Agent Type'),\n          Group: yup\n          .object()\n          .required('Please select a Group')\n          .typeError('Please select a Group'),\n        AgentName: yup.string().required('Please Enter Agent Name'),\n        AgentEmail: yup.string().required('Please Enter Agent Email'),\n        Agentcontact: yup.string().required('Please Enter Agent Contact Number'),\n        location: yup.string().required('Please Enter Location'),\n      })}\n    >\n      {({ setFieldValue }) => (\n        <Form>\n          <Grid container spacing={2} direction=\"column\">\n            <Grid item>\n              <Field\n                className={classes.fieldContainer}\n                name=\"AgentName\"\n                component={TextField}\n                variant=\"outlined\"\n                multiline\n                // value=\"AgentName\"\n                label=\"Agent Name\"\n\n              />\n            </Grid>\n            <Grid item>\n              <Field\n                className={classes.fieldContainer}\n                name=\"AgentEmail\"\n                component={TextField}\n                variant=\"outlined\"\n                multiline\n                label=\"Agent Email\"\n              />\n            </Grid>\n            <Grid item>\n              <Field\n                className={classes.fieldContainer}\n                name=\"Agentcontact\"\n                component={TextField}\n                variant=\"outlined\"\n                multiline\n                label=\"Agent Contact Number\"\n              />\n            </Grid>\n            \n            {localStorage.getItem('role')=== \"Admin\"? <Grid item >\n              <FormControl\n                variant=\"outlined\"\n                className={classes.fieldContainer}\n              >\n\n\n                <Autocomplete\n                  options={Groups}\n                  getOptionLabel={option => option.group_name}\n                  // style={{ width: 400, overflow: \"hidden\" }}\n                  getOptionSelected={(option, value) =>\n                    value.id === option.id\n                  }\n                  key={autoCompleteKey}\n                  onChange={(event, value) => {\n\n                    setFieldValue('Group', value);\n\n                  }}\n                  renderInput={params => (\n                    <Field\n                      component={TextField}\n                      {...params}\n                      label=\"Select Groups\"\n                      variant=\"outlined\"\n                      name=\"Group\"\n                    />\n                  )}\n                  name=\"Group\"\n                />\n              </FormControl>\n\n            </Grid>:<></>}\n\n           <Grid item >\n              <FormControl\n                variant=\"outlined\"\n                className={classes.fieldContainer}\n              >\n\n\n                <Autocomplete\n                  options={AgentType}\n                  getOptionLabel={option => option.value}\n                  // style={{ width: 400, overflow: \"hidden\" }}\n                  getOptionSelected={(option, value) =>\n                    value.id === option.id\n                  }\n                  key={autoCompleteKey}\n                  onChange={(event, value) => {\n\n                    setFieldValue('AgentType', value);\n\n                  }}\n                  renderInput={params => (\n                    <Field\n                      component={TextField}\n                      {...params}\n                      label=\"Select Agent Type\"\n                      variant=\"outlined\"\n                      name=\"AgentType\"\n                    />\n                  )}\n                  name=\"AgentType\"\n                />\n              </FormControl>\n\n            </Grid>\n          </Grid>\n          <br />\n\n          <Button color=\"primary\" variant=\"contained\" disabled={localStorage.getItem('callStatus') === 'connected' ? true : false} onClick={handleSubmit}>\n            Submit\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n","import {\n    Box,\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Divider,\n    Typography,\n    TextField\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport React, { useEffect, useState } from 'react';\nimport Axios from 'axios';\nconst useStyles = makeStyles(theme => ({\n    dialog: {\n        minWidth: 400\n    }\n}));\n\nexport default function DistSelect({InputLabelProps = {}, ...props }) {\n    const classes = useStyles();\n    const [Groups, setGroups] = useState([]);\n    //   console.log(\"EditData\",props.EditData)\n    // const [formData, setFormData] = useState({\n    //         AgentType: \"\",\n    //         EmployeeName: \"\",\n    //         External_num: \"\",\n    //         Location: \"\",\n    //         UserID: \"\",\n    //         UserName: \"\",\n    //         EmailID:\"\"\n    //     });\n    const [showModal, setShowModal] = useState(true);\n\n    const Data = props.EditData[0]\n\n    const [formData, setFormData] = useState(Data);\n    const agentServiceURL = 'http://164.52.205.10:42004/';\n\n    const handleChange = (e) => {\n        console.log(\"target\", e.target )\n        setFormData({\n            ...formData,\n            [e.target.name]: e.target.value\n        });\n    }\n    function updateAgentCallStatus(contactNumber) {\n        console.log(\"contactNumber\",contactNumber)\n        var axios = require('axios');\n        \n        var data = {\n          agentCallDispositionStatus: \"NotDisposed\",\n          agentCallType: \"Inbound\",\n          agentCallUniqueId: \"1610712538.46886\",\n          agentCallEvent: \"Bridge\",\n          agentCallStatus: \"disconnected\",\n          agentID: \"9998\",\n          agentSipID: \"9998\",\n          contactNumber:contactNumber,\n          breakStatus: \"OUT\",\n         \n        };\n        var config = {\n    \n          method: 'post',\n          url: 'http://164.52.205.10:42004/crm/currentstatuses',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          data: data\n        };\n    \n        axios(config)\n          .then(function (response) {\n            console.log(\"update\", JSON.stringify(response.data));\n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n      }\n      async function pushAgentCurrentStatusData(data){\n        const url = agentServiceURL + 'crm/currentstatuses';\n        const result = await fetch(url, { method: 'post', body: JSON.stringify(data), headers: { 'Content-Type': 'application/json' } });\n       console.log(\"result\", result)\n        return await result.json();\n      }\n    const handleSubmit = (e) => {\n\n        console.log(\"formData\", formData)\n        const url = 'http://164.52.205.10:4000/admin/agent/updateAgent'\n\n        Axios.post(url, {formData},{ headers: { Authorization:`Bearer ${localStorage.getItem('jwtToken')}` } })\n            .then(function (response) {\n                console.log(response);\n                if (response.data.status === 200) {\n                    alert(\"Updated Agent Successfully\")\n                    const result={\n                        \"agentCallDispositionStatus\": \"NA\",\n                        \"agentCallType\": \"Inbound\",\n                        \"agentCallUniqueId\": \"NA\",\n                        \"agentCallEvent\": \"NewState\",\n                        \"agentCallStatus\": \"ringing\",\n                        \"agentID\": formData.Agentcontact,\n                        \"agentSipID\": formData.Agentcontact,\n                        \"breakStatus\": \"NA\",\n                        \"newstateinbound\": \"\",\n                        \"newstateoutbound\": \"NA\",\n                        \"bridgeUniqueid1\": \"NA\",\n                        \"bridgeUniqueid2\": \"NA\",\n                        \"channel\": \"NA\",\n                        \"contactNumber\":formData.Agentcontact,\n                        \"agenttype\":formData.AgentType\n                      }\n                   \n                      pushAgentCurrentStatusData(result)\n                    setShowModal(false)\n                    props.TableData()\n                    updateAgentCallStatus(formData.External_num)\n                }\n            })\n\n    }\n    useEffect(() => {\n        const url = 'http://164.52.205.10:4000/admin/group/getGroup'\n    \n        Axios.post(url,{},{ headers: { Authorization:`Bearer ${localStorage.getItem('jwtToken')}` } })\n          .then(function (response) {\n            console.log(response);\n            if (response.data.status === 200) {\n              // roup=response.data.data\n              setGroups(response.data.data)\n            }\n            else{\n              alert(response.data.message)\n        \n           \n            }\n          })\n    \n    \n      }, [])\n    return (\n        <div>\n            {showModal && (\n                <Dialog\n                    open\n                    onClose={() => setShowModal(false)}\n                    classes={{ paper: classes.dialog }}\n                >\n                    <DialogTitle>Edit Agent Details</DialogTitle>\n                    <Divider light />\n                    <DialogContent>\n                        <Typography variant=\"h6\">\n                            <TextField\n                                fullWidth\n                                label=\"Agent Name\"\n                                name=\"EmployeeName\"\n                                onChange={handleChange}\n                                required\n\n                                SelectProps={{ native: true }}\n                                value={formData.EmployeeName}\n                                variant=\"outlined\"\n                            />\n                            <br />\n                            <br />\n                            <TextField\n                                fullWidth\n                                label=\"Agent Email\"\n                                name=\"EmailID\"\n                                onChange={handleChange}\n                                required\n\n                                SelectProps={{ native: true }}\n                                value={formData.EmailID}\n                                variant=\"outlined\"\n                            />\n                            <br />\n                            <br />\n                            <TextField\n                                fullWidth\n                                label=\"Agent Contact Number\"\n                                name=\"External_num\"\n                                onChange={handleChange}\n                                required\n\n                                SelectProps={{ native: true }}\n                                value={formData.External_num}\n                                variant=\"outlined\"\n                            />\n                            <br />\n                            <br />\n                           \n                          {localStorage.getItem('role')===\"Admin\" ? <TextField\n                                fullWidth\n                                label=\"Select Group\"\n                                name=\"GroupName\"\n                                onChange={handleChange}\n                                required\n                                select\n                                SelectProps={{ native: true }}\n                                value={formData.GroupName}\n                                variant=\"outlined\"\n                                InputLabelProps={{ ...InputLabelProps, shrink: true }}\n                                {...props}\n                            >\n                                 {Groups.map((option) => (\n                  <option\n                    key={option.group_id}\n                    value={option.group_name}\n                  >\n                    {option.group_name}\n                  </option>\n                ))}\n                               \n\n                            </TextField>:<></>}\n                            {/* <br/>\n                            <br/> */}\n                            <TextField\n                                fullWidth\n                                label=\"Select Agent Type\"\n                                name=\"AgentType\"\n                                onChange={handleChange}\n                                required\n                                select\n                                SelectProps={{ native: true }}\n                                value={formData.AgentType}\n                                variant=\"outlined\"\n                            >\n                                <option\n                                    key=\"L1\"\n                                    value=\"L1\"\n                                >\n                                    L1\n                                    </option>\n                                <option\n                                    key=\"L2\"\n                                    value=\"L2\"\n                                >\n                                    L2\n                                    </option>\n                                   \n                            </TextField>\n                           \n                            <br/>\n                            <br/>\n                            <TextField\n                                fullWidth\n                                label=\"Select Agent Type\"\n                                name=\"Enabled\"\n                                onChange={handleChange}\n                                required\n                                select\n                                SelectProps={{ native: true }}\n                                value={formData.Enabled}\n                                variant=\"outlined\"\n                            >\n                                <option\n                                    key=\"1\"\n                                    value=\"True\"\n                                >\n                                    Enable\n                                    </option>\n                                <option\n                                    key=\"0\"\n                                    value=\"False\"\n                                >\n                                    Disable\n                                    </option>\n\n                            </TextField>\n                            <br />\n                            <br />\n                            <Box style={{ flexBasis: '100%' }}>\n                                <br />\n                            </Box>\n                        </Typography>\n                    </DialogContent>\n\n                    <DialogActions>\n                        <Button\n                            color=\"primary\"\n                            variant=\"contained\"\n                            onClick={\n                                (e) => {\n                                    setShowModal(false)\n                                }}\n                        >\n                            close\n                </Button>\n                        <Button\n                            color=\"primary\"\n                            variant=\"contained\"\n                            onClick={\n                                handleSubmit}\n                        >\n                            Update\n                </Button>\n\n                    </DialogActions>\n                </Dialog>\n            )}\n        </div>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport Axios from 'axios';\nimport Editagent from './EditAgent'\nconst columns = [\n\n  // { field: 'id', headerName: 'ID', width: 70 },\n  { field: 'EmployeeName', headerName: 'Agent name', width: 130 },\n  { field: 'External_num', headerName: 'Contact Number', width: 200 },\n  {\n    field: 'EmailID',\n    headerName: 'Email',\n    width: 200,\n  },\n  {\n    field: 'AgentType',\n    headerName: 'Agent Type',\n    width: 160,\n\n  },\n  {\n    field: 'GroupName',\n    headerName: 'Groups',\n    width: 160,\n\n  },\n];\n\n\n\nexport default function DataGridDemo() {\n  const [agents, setAgents] = useState([]);\n  const [editform, setEditform] = useState(false);\n  const [editData, setEditData] = useState([]);\n\n  function TableData() {\n    const url = 'http://164.52.205.10:4000/admin/agent/viewAgent'\n\n    Axios.post(url,{},{ headers: { Authorization:`Bearer ${localStorage.getItem('jwtToken')}` }})\n      .then(function (response) {\n        // console.log(JSON.stringify(response.data.data));\n        setAgents(response.data.data)\n\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n  }\n  useEffect(() => {\n    TableData()\n\n\n  }, [])\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n      {agents.length > 0 ? <DataGrid rows={agents.map(calls => ({\n        ...calls,\n        id: calls.UserID\n      }))} columns={columns} pageSize={5} checkboxSelection\n        onSelectionChange={(newSelection) => {\n\n\n          const url = 'http://164.52.205.10:4000/admin/agent/getAgent'\n\n\n          Axios.post(url, newSelection)\n            .then(function (response) {\n              // console.log(JSON.stringify(response.data));\n              if (response.data.status === 200) {\n                setEditform(true)\n                setEditData(response.data.data)\n              }\n\n            })\n          // setSelection(newSelection.rowIds);\n        }} /> : <></>}\n      {editData.length > 0 ? <Editagent\n        EditData={editData}\n        TableData={TableData} /> : <></>}\n    </div>\n  );\n}","import React, { useEffect, useState } from 'react';\nimport {\n  Avatar,\n  Grid,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  makeStyles,\n  Typography,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Card,\n  CardContent,\n  Container,\n  CardHeader,\n  Box\n} from '@material-ui/core';\nimport {\n  GET_INBOUND_DASHBOARD_DATA,  \n  GET_INTERACTION_BY_AGENT_SIP_ID\n} from 'src/modules/dashboard-360/utils/endpoints';\nimport Axios from 'axios';\nimport { grey } from '@material-ui/core/colors';\n\nimport socketIOClient from 'socket.io-client';\n\n\nimport CreateAgent from './CreateAgentform'\nimport AgentTable from './AgentTable'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    display: 'flex'\n  },\n  grey: {\n    color: theme.palette.getContrastText(grey[50]),\n    backgroundColor: grey[50]\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  },\n  paper: {\n    textAlign: 'center'\n  },\n  list: {},\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    marginRight: '0.5vw'\n  },\n  listItem: {\n    padding: 0\n  },\n  cardcontent: {\n    padding: '0 0 0 5%',\n    '&:last-child': {\n      paddingBottom: 0\n    }\n  }\n}));\n\n\nconst AgentDashboard = () => {\n  const classes = useStyles();\n  const [agents, setAgents] = useState([]);\n\n  useEffect(() => {\n\n \n\n  }, [])\n  function TableData() {\n    const url = 'http://164.52.205.10:4000/admin/agent/viewAgent'\n\n    Axios.post(url,{},{ headers: { Authorization:`Bearer ${localStorage.getItem('jwtToken')}` }})\n      .then(function (response) {\n        // console.log(JSON.stringify(response.data.data));\n        setAgents(response.data.data)\n\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n  }\n  return (\n    // <>\n    <Container maxWidth={false}>\n        <div className={classes.root}>\n      <Grid container spacing={3}>\n    \n        <Grid item xs={12} sm={4}>\n        <div>\n       \n         <Card>\n                  <CardHeader title={'Create Agent'} />\n                  <CardContent>\n                    <CreateAgent  TableData={TableData}/>\n                    </CardContent>\n                    </Card>\n                  \n               </div>\n        \n        </Grid>\n        <Grid item xs={12} sm={8}>\n        <div>\n        <Card>\n                  <CardHeader title={'Agent Details'} />\n                  <CardContent>\n        <AgentTable/>\n        </CardContent>\n           </Card>\n               </div>\n         \n        </Grid>\n      \n      </Grid>\n    </div>\n  \n     </Container>\n    // </>\n  );\n};\n\nexport default AgentDashboard;\n","import dashboard from '../views/dashboard';\n\nexport default [\n  {\n    path: '/dashboard',\n    key: 'dashboardagent',\n    component: dashboard\n  }\n];\n","import { Field, Form, Formik } from 'formik';\nimport React, { useRef, useState } from 'react';\nimport { TextField, RadioGroup } from 'formik-material-ui';\nimport { useEffect } from 'react';\nimport {\n  UPDATE_CALL_STATUS,\n  UPDATE_CURRENT_STATUS,\n} from 'src/modules/dashboard-360/utils/endpoints';\nimport {\n  Button,\n  FormControl,\n  FormControlLabel,\n  Grid,\n  makeStyles,\n  Radio\n} from '@material-ui/core';\nimport * as yup from 'yup';\nimport Axios from 'axios';\n// import config from '../../../ticketing/views/config.json';g\nimport { Autocomplete } from '@material-ui/lab';\nimport { set } from 'lodash';\n// import { AlternateEmailTwoTone } from '@material-ui/icons';\nconst useStyle = makeStyles(() => ({\n  fieldContainer: {\n    width: '100%'\n  }\n}));\nexport default function DispositionForm(props) {\n  const config = \"http://192.168.3.45:8083/\"\n  const [initialValue, setInitialValue] = useState({\n\n    GroupAdminName: '',\n    GroupAdminEmail: '',\n    groupcontact: '',\n   \n    Group:{\n      value: \"\",\n      label: \"\"\n    }\n  });\n  const [Groups, setGroups] = useState([]);\n  const classes = useStyle();\n  const formRef = useRef({});\n  const agentServiceURL = 'http://164.52.205.10:42004/';\n\n  // const Groups = [\n  //   {\n  //     id: '1', value: 'Grassroots DD',\n  //   },\n  //   {\n  //     id: '2', value: 'Grassroots OMR',\n  //   },\n  //   {\n  //     id: '3', value: 'Grassroots Site1',\n  //   },\n\n  // ]\n\n\n  function updateAgentCallStatus(contactNumber) {\n    console.log(\"contactNumber\",contactNumber)\n    var axios = require('axios');\n    \n    var data = {\n      agentCallDispositionStatus: \"NotDisposed\",\n      agentCallType: \"Inbound\",\n      agentCallUniqueId: \"1610712538.46886\",\n      agentCallEvent: \"Bridge\",\n      agentCallStatus: \"disconnected\",\n      agentID: \"9998\",\n      agentSipID: \"9998\",\n      contactNumber:contactNumber,\n      breakStatus: \"OUT\",\n     \n    };\n    var config = {\n\n      method: 'post',\n      url: 'https://164.52.205.10:42004/crm/currentstatuses',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data: data\n    };\n\n    axios(config)\n      .then(function (response) {\n        console.log(\"update\", JSON.stringify(response.data));\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n  function handleSubmit(e) {\n\n    console.log('formRef', formRef.current.values);\n    const data = {\n      \"GName\": formRef.current.values.GroupAdminName,\n      \"GEmail\": formRef.current.values.GroupAdminEmail,\n\n      \"Gcontact\": formRef.current.values.groupcontact,\n     \n      \"groupslabel\": formRef.current.values.Group,\n    }\n  \n    const url = 'http://164.52.205.10:4000/admin/groupdadmin/add'\nconsole.log(\"data\",data)\n    Axios.post(url, data)\n      .then(function (response) {\n        console.log(response);\n        if (response.data.status === 200) {\n          alert(\"Created Successfully\")\n          // updateAgentCallStatus(formRef.current.values.Agentcontact)\n        }\n        else{\n          alert(response.data.message)\n        console.log( \"formRef.current\",formRef.current)\n       \n        }\n      })\n\n      setInitialValue({\n\n        GroupAdminName: '',\n        GroupAdminEmail: '',\n        groupcontact: '',\n       \n        Group:{\n          value: \"\",\n          label: \"\"\n        }\n      });\n  \n      formRef.current.values.GroupAdminName = \"\"\n      formRef.current.values.GroupAdminEmail = \"\"\n      formRef.current.values.groupcontact = \"\"\n    \n      formRef.current.values.Group={ value: \"\",\n      label: \"\"}\n      console.log(\"initialValue\", initialValue)\n     \n    e.preventDefault()\n  \n\n  }\n\n\n\n\n  useEffect(() => {\n    console.log('formRef', formRef.current.values);\n    console.log(\"initialValue\", initialValue)\n    const url = 'http://164.52.205.10:4000/admin/group/getGroup'\n\n    Axios.post(url,{},{ headers: { Authorization:`Bearer ${localStorage.getItem('jwtToken')}` } })\n      .then(function (response) {\n        console.log(response);\n        if (response.data.status === 200) {\n          // roup=response.data.data\n          setGroups(response.data.data)\n        }\n        else{\n          alert(response.data.message)\n    \n       \n        }\n      })\n\n\n  }, [])\n  const [autoCompleteKey, setAutoCompleteKey] = useState(0);\n  return (\n    <Formik\n      validateOnBlur={false}\n      initialValues={initialValue}\n      disform={initialValue}\n      onSubmit={(e, { validate }, { resetForm }) => {\n        console.log(\"e\", e)\n        handleSubmit(e);\n        validate(e);\n        resetForm({ e: '' })\n      }}\n      innerRef={formRef}\n      validationSchema={yup.object({\n      \n          Group: yup\n          .object()\n          .required('Please select a Group')\n          .typeError('Please select a Group'),\n          GroupAdminName: yup.string().required('Please Enter Group Admin Name'),\n          GroupAdminEmail: yup.string().required('Please Enter Group Admin Email'),\n          groupcontact: yup.string().required('Please Enter  Group Admin Contact Number'),\n       \n      })}\n    >\n      {({ setFieldValue }) => (\n        <Form>\n          <Grid container spacing={2} direction=\"column\">\n          <Grid item >\n              <FormControl\n                variant=\"outlined\"\n                className={classes.fieldContainer}\n              >\n\n\n                <Autocomplete\n                  options={Groups}\n                  getOptionLabel={option => option.group_name}\n                  // style={{ width: 400, overflow: \"hidden\" }}\n                  getOptionSelected={(option, value) =>\n                    value.id === option.id\n                  }\n                  key={autoCompleteKey}\n                  onChange={(event, value) => {\n\n                    setFieldValue('Group', value);\n\n                  }}\n                  renderInput={params => (\n                    <Field\n                      component={TextField}\n                      {...params}\n                      label=\"Select Groups\"\n                      variant=\"outlined\"\n                      name=\"Group\"\n                    />\n                  )}\n                  name=\"Group\"\n                />\n              </FormControl>\n\n            </Grid>\n            <Grid item>\n              <Field\n                className={classes.fieldContainer}\n                name=\"GroupAdminName\"\n                component={TextField}\n                variant=\"outlined\"\n                multiline\n                // value=\"AgentName\"\n                label=\"Group Admin Name\"\n\n              />\n            </Grid>\n            <Grid item>\n              <Field\n                className={classes.fieldContainer}\n                name=\"GroupAdminEmail\"\n                component={TextField}\n                variant=\"outlined\"\n                multiline\n                label=\"Group Admin Email\"\n              />\n            </Grid>\n            <Grid item>\n              <Field\n                className={classes.fieldContainer}\n                name=\"groupcontact\"\n                component={TextField}\n                variant=\"outlined\"\n                multiline\n                label=\"Group Admin Contact Number\"\n              />\n            </Grid>\n          \n          \n\n          \n          </Grid>\n          <br />\n\n          <Button color=\"primary\" variant=\"contained\" disabled={localStorage.getItem('callStatus') === 'connected' ? true : false} onClick={handleSubmit}>\n            Submit\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n","import {\n    Box,\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Divider,\n    Typography,\n    TextField\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport React, { useEffect, useState } from 'react';\nimport Axios from 'axios';\nconst useStyles = makeStyles(theme => ({\n    dialog: {\n        minWidth: 400\n    }\n}));\n\nexport default function DistSelect({InputLabelProps = {}, ...props }) {\n    const classes = useStyles();\n    const [Groups, setGroups] = useState([]);\n    //   console.log(\"EditData\",props.EditData)\n    // const [formData, setFormData] = useState({\n    //         AgentType: \"\",\n    //         EmployeeName: \"\",\n    //         External_num: \"\",\n    //         Location: \"\",\n    //         UserID: \"\",\n    //         UserName: \"\",\n    //         EmailID:\"\"\n    //     });\n    const [showModal, setShowModal] = useState(true);\n\n    const Data = props.EditData[0]\n\n    const [formData, setFormData] = useState(Data);\n\n\n    const handleChange = (e) => {\n        console.log(\"target\", e.target )\n        setFormData({\n            ...formData,\n            [e.target.name]: e.target.value\n        });\n    }\n    function updateAgentCallStatus(contactNumber) {\n        console.log(\"contactNumber\",contactNumber)\n        var axios = require('axios');\n        \n        var data = {\n          agentCallDispositionStatus: \"NotDisposed\",\n          agentCallType: \"Inbound\",\n          agentCallUniqueId: \"1610712538.46886\",\n          agentCallEvent: \"Bridge\",\n          agentCallStatus: \"disconnected\",\n          agentID: \"9998\",\n          agentSipID: \"9998\",\n          contactNumber:contactNumber,\n          breakStatus: \"OUT\",\n         \n        };\n        var config = {\n    \n          method: 'post',\n          url: 'https://164.52.205.10:42004/crm/currentstatuses',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          data: data\n        };\n    \n        axios(config)\n          .then(function (response) {\n            console.log(\"update\", JSON.stringify(response.data));\n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n      }\n    const handleSubmit = (e) => {\n\n        console.log(\"formData\", formData)\n        const url = 'http://164.52.205.10:4000/admin/agent/updateAgent'\n\n        Axios.post(url, formData)\n            .then(function (response) {\n                console.log(response);\n                if (response.data.status === 200) {\n                    alert(\"Updated Agent Successfully\")\n                    setShowModal(false)\n                    props.TableData()\n                    updateAgentCallStatus(formData.External_num)\n                }\n            })\n\n    }\n    useEffect(() => {\n        const url = 'http://164.52.205.10:4000/admin/group/getGroup'\n    \n        Axios.post(url,{},{ headers: { Authorization:`Bearer ${localStorage.getItem('jwtToken')}` } })\n          .then(function (response) {\n            console.log(response);\n            if (response.data.status === 200) {\n              // roup=response.data.data\n              setGroups(response.data.data)\n            }\n            else{\n              alert(response.data.message)\n        \n           \n            }\n          })\n    \n    \n      }, [])\n    return (\n        <div>\n            {showModal && (\n                <Dialog\n                    open\n                    onClose={() => setShowModal(false)}\n                    classes={{ paper: classes.dialog }}\n                >\n                    <DialogTitle>Edit Agent Details</DialogTitle>\n                    <Divider light />\n                    <DialogContent>\n                        <Typography variant=\"h6\">\n                            <TextField\n                                fullWidth\n                                label=\"Agent Name\"\n                                name=\"EmployeeName\"\n                                onChange={handleChange}\n                                required\n\n                                SelectProps={{ native: true }}\n                                value={formData.EmployeeName}\n                                variant=\"outlined\"\n                            />\n                            <br />\n                            <br />\n                            <TextField\n                                fullWidth\n                                label=\"Agent Email\"\n                                name=\"EmailID\"\n                                onChange={handleChange}\n                                required\n\n                                SelectProps={{ native: true }}\n                                value={formData.EmailID}\n                                variant=\"outlined\"\n                            />\n                            <br />\n                            <br />\n                            <TextField\n                                fullWidth\n                                label=\"Agent Contact Number\"\n                                name=\"External_num\"\n                                onChange={handleChange}\n                                required\n\n                                SelectProps={{ native: true }}\n                                value={formData.External_num}\n                                variant=\"outlined\"\n                            />\n                            <br />\n                            <br />\n                            <TextField\n                                fullWidth\n                                label=\"Location\"\n                                name=\"Location\"\n                                onChange={handleChange}\n                                required\n\n                                SelectProps={{ native: true }}\n                                value={formData.Location}\n                                variant=\"outlined\"\n                            />\n                            <br />\n                            <br />\n                            <TextField\n                                fullWidth\n                                label=\"Select Group\"\n                                name=\"GroupName\"\n                                onChange={handleChange}\n                                required\n                                select\n                                SelectProps={{ native: true }}\n                                value={formData.GroupName}\n                                variant=\"outlined\"\n                                InputLabelProps={{ ...InputLabelProps, shrink: true }}\n                                {...props}\n                            >\n                                 {Groups.map((option) => (\n                  <option\n                    key={option.group_id}\n                    value={option.group_name}\n                  >\n                    {option.group_name}\n                  </option>\n                ))}\n                               \n\n                            </TextField>\n                            <br/>\n                            <br/>\n                            <TextField\n                                fullWidth\n                                label=\"Select Agent Type\"\n                                name=\"AgentType\"\n                                onChange={handleChange}\n                                required\n                                select\n                                SelectProps={{ native: true }}\n                                value={formData.AgentType}\n                                variant=\"outlined\"\n                            >\n                                <option\n                                    key=\"L1\"\n                                    value=\"L1\"\n                                >\n                                    L1\n                                    </option>\n                                <option\n                                    key=\"L2\"\n                                    value=\"L2\"\n                                >\n                                    L2\n                                    </option>\n                                   \n                            </TextField>\n                           \n                            <br/>\n                            <br/>\n                            <TextField\n                                fullWidth\n                                label=\"Select Agent Type\"\n                                name=\"Enabled\"\n                                onChange={handleChange}\n                                required\n                                select\n                                SelectProps={{ native: true }}\n                                value={formData.Enabled}\n                                variant=\"outlined\"\n                            >\n                                <option\n                                    key=\"1\"\n                                    value=\"True\"\n                                >\n                                    Enable\n                                    </option>\n                                <option\n                                    key=\"0\"\n                                    value=\"False\"\n                                >\n                                    Disable\n                                    </option>\n\n                            </TextField>\n                            <br />\n                            <br />\n                            <Box style={{ flexBasis: '100%' }}>\n                                <br />\n                            </Box>\n                        </Typography>\n                    </DialogContent>\n\n                    <DialogActions>\n                        <Button\n                            color=\"primary\"\n                            variant=\"contained\"\n                            onClick={\n                                (e) => {\n                                    setShowModal(false)\n                                }}\n                        >\n                            close\n                </Button>\n                        <Button\n                            color=\"primary\"\n                            variant=\"contained\"\n                            onClick={\n                                handleSubmit}\n                        >\n                            Update\n                </Button>\n\n                    </DialogActions>\n                </Dialog>\n            )}\n        </div>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport Axios from 'axios';\nimport Editgroup from './Edit'\nconst columns = [\n\n  // { field: 'id', headerName: 'ID', width: 70 },\n  { field: 'EmployeeName', headerName: 'Group Admin name', width: 200 },\n  { field: 'External_num', headerName: 'Contact Number', width: 200 },\n  {\n    field: 'EmailID',\n    headerName: 'Email',\n    width: 200,\n  },\n \n  {\n    field: 'GroupName',\n    headerName: 'Groups',\n    width: 160,\n\n  },\n];\n\n\n\nexport default function DataGridDemo() {\n  const [agents, setAgents] = useState([]);\n  const [editform, setEditform] = useState(false);\n  const [editData, setEditData] = useState([]);\n\n  function TableData() {\n    const url = 'http://164.52.205.10:4000/admin/groupdadmin/view'\n\n    Axios.post(url)\n      .then(function (response) {\n        // console.log(JSON.stringify(response.data.data));\n        setAgents(response.data.data)\n\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n  }\n  useEffect(() => {\n    TableData()\n\n\n  }, [])\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n      {agents.length > 0 ? <DataGrid rows={agents.map(calls => ({\n        ...calls,\n        id: calls.UserID\n      }))} columns={columns} pageSize={5} checkboxSelection\n        onSelectionChange={(newSelection) => {\n\n\n          const url = 'http://164.52.205.10:4000/admin/agent/getAgent'\n\n\n          Axios.post(url, newSelection)\n            .then(function (response) {\n              // console.log(JSON.stringify(response.data));\n              if (response.data.status === 200) {\n                setEditform(true)\n                setEditData(response.data.data)\n              }\n\n            })\n          // setSelection(newSelection.rowIds);\n        }} /> : <></>}\n      {/* {editData.length > 0 ? <Editgroup\n        EditData={editData}\n        TableData={TableData} /> : <></>} */}\n    </div>\n  );\n}","import React, { useEffect, useState } from 'react';\nimport {\n  Avatar,\n  Grid,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  makeStyles,\n  Typography,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Card,\n  CardContent,\n  Container,\n  CardHeader,\n  Box\n} from '@material-ui/core';\nimport {\n  GET_INBOUND_DASHBOARD_DATA,  \n  GET_INTERACTION_BY_AGENT_SIP_ID\n} from 'src/modules/dashboard-360/utils/endpoints';\n\nimport { grey } from '@material-ui/core/colors';\n\nimport socketIOClient from 'socket.io-client';\n\n\nimport CreateGroup from './Createform'\nimport GroupTable from './Table'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    display: 'flex'\n  },\n  grey: {\n    color: theme.palette.getContrastText(grey[50]),\n    backgroundColor: grey[50]\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  },\n  paper: {\n    textAlign: 'center'\n  },\n  list: {},\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    marginRight: '0.5vw'\n  },\n  listItem: {\n    padding: 0\n  },\n  cardcontent: {\n    padding: '0 0 0 5%',\n    '&:last-child': {\n      paddingBottom: 0\n    }\n  }\n}));\n\n\nconst AgentDashboard = () => {\n  const classes = useStyles();\n\n\n  useEffect(() => {\n\n \n\n  }, [])\n\n  return (\n    // <>\n    <Container maxWidth={false}>\n        <div className={classes.root}>\n      <Grid container spacing={3}>\n    \n        <Grid item xs={12} sm={4}>\n        <div>\n       \n         <Card>\n                  <CardHeader title={'Create Group Admin'} />\n                  <CardContent>\n                    <CreateGroup/>\n                    </CardContent>\n                    </Card>\n                  \n               </div>\n        \n        </Grid>\n        <Grid item xs={12} sm={8}>\n        <div>\n        <Card>\n                  <CardHeader title={'Group Admin Details'} />\n                  <CardContent>\n        <GroupTable/>\n        </CardContent>\n           </Card>\n               </div>\n         \n        </Grid>\n      \n      </Grid>\n    </div>\n  \n     </Container>\n    // </>\n  );\n};\n\nexport default AgentDashboard;\n","import dashboard from '../views/dashboard';\n\nexport default [\n  {\n    path: '/dashboard',\n    key: 'dashboardgroup',\n    component: dashboard\n  }\n];\n","import React, { useState } from 'react'\nimport XLSX from \"xlsx\";\nimport { v4 as uuidv4 } from 'uuid';\nimport axios from 'axios';\n\nimport { CAMPAIGN } from 'src/modules/dashboard-360/utils/endpoints'\n\nconst FileUpload = (props) => {\n    const { id, handleUpload } = props\n    const [data1, setData1] = useState([])\n\n\n\n    // console.log(data1)\n\n    const handleFileChosen = (file) => {\n        const reader = new FileReader();\n        const rABS = !!reader.readAsBinaryString;\n        reader.onload = ({ target: { result } }) => {\n            const wb = XLSX.read(result, { type: rABS ? \"binary\" : \"array\" });\n            const wsname = wb.SheetNames[0];\n\n            const ws = wb.Sheets[wsname];\n\n            const data = XLSX.utils.sheet_to_json(ws, { header: 1, raw: false });\n\n            // console.log(data.length)\n            // console.log(data)\n            // console.log(data[0])\n            // console.log(data.pop())\n            // data.pop()\n            data.shift()\n            let arr = []\n\n            data.map((ele) => {\n                let obj = {\n                    \"crmUID\": uuidv4(),\n                    \"cutomerpno\": `${ele[3]}`,\n                    \"campaignID\": id,\n                    \"prefix\": \"5\"\n                }\n                return arr.push(obj)\n            })\n\n            const data3 = { data: arr }\n            // console.log(data3)\n\n            axios.post(`${CAMPAIGN}/Upload_Campaign`, data3)\n                .then((response) => {\n                    console.log(response.data)\n                    alert(`file uploaded succesfully`)\n                })\n                .catch((err) => {\n                    console.log(err)\n                })\n        };\n\n        if (rABS) reader.readAsBinaryString(file);\n        else reader.readAsArrayBuffer(file);\n\n\n    };\n\n    return (\n        <div>\n            <div className=\"form-group col-md-6\">\n                {/* <label>Bank Statement File {idx + 1}</label> */}\n                <input type=\"file\" className=\"form-control\"\n                    name=\"bankfile\"\n                    // data-id={idx}\n                    // onChange={this.onChange}\n                    // onChange={this.onChangeHandler}\n                    onChange={e => handleFileChosen(e.target.files[0])}\n                    // value={this.state.bankfile}\n                    // defaultValue={this.state.upload[idx].bankfile}\n                    // id={bankfile}\n                    accept='.csv, .xls,.xlsx'\n                    placeholder=\"true\" multiple required />\n            </div>\n\n\n        </div>\n    );\n}\n\nexport default FileUpload","import React, { useEffect, useState } from 'react'\nimport TimePicker from './timepicker'\nimport {\n    Box,\n    Card,\n    CardContent,\n    CardHeader,\n    Container,\n    Divider,\n    Grid,\n    makeStyles,\n    Typography,\n    TextField,\n    Paper,\n    Button,\n    Tooltip,\n    IconButton\n\n} from '@material-ui/core';\nimport moment from 'moment';\nimport Date from './DaterangeReport'\nimport { DataGrid } from '@material-ui/data-grid';\nimport axios from 'axios'\nimport FileUpload from './FileUpload3'\nimport { CAMPAIGN } from 'src/modules/dashboard-360/utils/endpoints'\n\n\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        flexGrow: 1,\n        margin: '1rem 2rem'\n    }\n}));\n\nconst Campaign = (props) => {\n    const classes = useStyles();\n    const [startTime, setStartTime] = useState(\"\")\n    const [endTime, setEndtime] = useState(\"\")\n    const [queue, setQueue] = useState(\"\")\n    const [campaignRetry, setRetry] = useState(\"\")\n    const [campaignName, setcampaignname] = useState(\"\")\n    const [date, setdate] = useState(\"\")\n    const [campaigns, setCampaigns] = useState([])\n    const [disable, setDisable] = useState(true)\n\n\n    useEffect(() => {\n        getCampaigns()\n    }, [])\n\n    const handleQueueChange = (e) => setQueue(e.target.value)\n    const handleretryChange = (e) => {\n        setRetry(e.target.value)\n        setDisable(false)\n    }\n    const handlecampaignNameChange = (e) => setcampaignname(e.target.value)\n\n    const handleReset = () => {\n        setdate(\"\")\n        setStartTime(\"\")\n        setEndtime(\"\")\n        setQueue(\"\")\n        setRetry(\"\")\n        setcampaignname(\"\")\n\n    }\n\n    const handleTime = (time, label) => {\n        if (label === 'start time') {\n            console.log(time)\n            const time1 = moment(time).format()\n            const time2 = time1.replace('T', \" \").slice(10, 19)\n            setStartTime(time2)\n\n        } else if (label === 'End time') {\n            const time1 = moment(time).format()\n            const time2 = time1.replace('T', \" \").slice(10, 19)\n            setEndtime(time2)\n        }\n\n    }\n\n    const handleAddCampaign = (e) => {\n        const data = {\n            \"campaignName\": campaignName,\n            \"campaignQueue\": queue,\n            \"campaignStartDate\": `${date}${startTime}`,\n            \"campaignEndDate\": `${date}${endTime}`,\n            \"campaignRetry\": campaignRetry\n        }\n\n        axios.post(`${CAMPAIGN}/Create_Campaign`, data)\n            .then((response) => {\n                console.log(response.data)\n                handleReset()\n            })\n            .catch((error) => {\n                console.log(error)\n            })\n        // console.log(data)\n\n    }\n\n    const updateCampaign = (id, status) => {\n        const data = {\n            \"campaignID\": id,\n            \"campaignStatus\": status\n\n        }\n        console.log(data, \"fdsfsd\")\n\n        axios.post(`${CAMPAIGN}/Update_Status_Campaign`, data)\n            .then((response) => {\n                console.log(response.data, \"update\")\n                getCampaigns()\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    const getCampaigns = () => {\n        var axios = require('axios');\n        var data = '';\n\n        var config = {\n            method: 'get',\n            url: `${CAMPAIGN}/getCampaign`,\n            headers: {},\n            data: data\n        };\n\n        axios(config)\n            .then(function (response) {\n                if (response.data.length > 0) {\n                    response.data.map((ele) => {\n                        return ele.datetime_end === ele.datetime_end.slice(0, 10)\n                    })\n                }\n                // console.log(response.data)\n                // let rdata = response.data.reverse()\n                // console.log()\n                // rdata = rdata.reverse()\n                // console.log(rdata)\n                setCampaigns(response.data.reverse())\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    // console.log(campaigns, \"cammmm\")\n    const handleUpload = (data) => {\n        console.log(data)\n        // data.map((ele) => {\n        //     console.log(ele)\n        // })\n\n    }\n\n    const profilesColumns = [\n        {\n            headerName: 'Name',\n            field: 'name',\n            flex: 0.5\n\n        },\n        {\n            headerName: 'Start Date',\n            field: 'datetime_init',\n            flex: 0.5\n        },\n        {\n            headerName: 'End Date',\n            field: 'datetime_end',\n            flex: 0.5\n        },\n        {\n            headerName: 'Start Time',\n            field: 'daytime_init',\n            flex: 0.5\n        },\n        {\n            headerName: 'End Time',\n            field: 'daytime_end',\n            flex: 0.5\n        },\n        {\n            headerName: 'Queue',\n            field: 'queue',\n            flex: 0.5\n        },\n        {\n            headerName: 'Retries',\n            field: 'retries',\n            flex: 0.5\n        },\n        {\n            headerName: 'Status',\n            field: '',\n\n            renderCell: rowData => (\n                <>\n                    {\n                        rowData.row.estatus === 'I' && (<div>\n                            <Tooltip title=\"Activated\">\n                                <IconButton\n\n                                ><Typography>Inactive</Typography>\n                                </IconButton>\n                            </Tooltip>\n                        </div>)\n                    }\n                    {\n                        rowData.row.estatus === 'A' && (<div>\n                            <Tooltip title=\"Activate\">\n                                <IconButton\n                                ><Typography>Active</Typography>\n                                </IconButton>\n                            </Tooltip>\n                        </div>)\n                    }\n                    {\n                        rowData.row.estatus === 'T' && (<div>\n                            <Tooltip title=\"Finished\">\n                                <IconButton\n                                ><Typography>Finished</Typography>\n                                </IconButton>\n                            </Tooltip>\n                        </div>)\n                    }\n                </>\n            ),\n            flex: 0.5\n        },\n        {\n            headerName: 'Actions',\n            field: 'id',\n\n            renderCell: rowData => (\n                <>\n                    {\n                        rowData.row.estatus === 'I' && (<div>\n                            <Tooltip title=\"Activate\">\n                                <IconButton\n                                    onClick={() => { updateCampaign(rowData.row.id, \"A\") }}\n                                ><Button variant=\"contained\" >Activate</Button>\n                                </IconButton>\n                            </Tooltip>\n                        </div>)\n                    }\n                    {\n                        rowData.row.estatus === 'A' && (<div>\n                            <Tooltip title=\"Deactivate\">\n                                <IconButton\n                                    onClick={() => { updateCampaign(rowData.row.id, \"I\") }}\n                                ><Button variant=\"contained\" >Deactivate</Button>\n                                </IconButton>\n                            </Tooltip>\n                        </div>)\n                    }\n                </>\n            ),\n            flex: 0.5\n        },\n        {\n            headerName: 'Upload',\n            field: 'Script',\n\n            renderCell: rowData => (\n                <>\n                    {\n                        <FileUpload id={rowData.row.id} handleUpload={handleUpload} />\n                    }\n\n                </>\n            ),\n            flex: 0.5\n        }\n\n\n    ];\n\n    const showProfile = (data) => {\n        // console.log(data)\n    }\n\n\n\n    return (<div>\n        <Grid container spacing={3}>\n            <Grid item lg={4} md={12} xs={0}></Grid>\n            <Grid item lg={4} md={12} xs={0}>\n                <h1 >&nbsp;Campaign Admin Dashboard</h1>\n            </Grid>\n            <Grid item lg={4} md={12} xs={0}></Grid>\n        </Grid>\n        <br /><br />\n        <Paper className={classes.root}>\n\n            <Grid container spacing={3}>\n                <Grid item lg={12} md={12} xs={12}></Grid>\n                <Grid item lg={12} md={12} xs={12}>\n                    &nbsp;<Date setdate={setdate} />\n                </Grid>\n                <Grid item lg={2} md={12} xs={12}>\n                    <TimePicker label=\"start time\" handleTime={handleTime} />\n                </Grid>\n                <Grid item lg={2} md={12} xs={12}>\n                    <TimePicker label=\"End time\" handleTime={handleTime} />\n                </Grid>\n                <Grid item lg={2} md={12} xs={12}>\n                    <TextField id=\"outlined-basic\" label=\"Queue\" variant=\"outlined\" value={queue} onChange={handleQueueChange} />\n                </Grid>\n                <Grid item lg={2} md={12} xs={12}>\n                    <TextField id=\"outlined-basic\" label=\"Campaign Name\" variant=\"outlined\" value={campaignName} onChange={handlecampaignNameChange} />\n                </Grid>\n                <Grid item lg={2} md={12} xs={12}>\n                    <TextField id=\"outlined-basic\" label=\"Campaign Retry\" variant=\"outlined\" value={campaignRetry} onChange={handleretryChange} />\n                </Grid>\n                <Grid item lg={2} md={12} xs={12}>\n                    <Button variant=\"contained\" color=\"primary\" onClick={handleAddCampaign} disabled={disable}>\n                        Add Campaign\n                    </Button>\n                </Grid>\n\n\n            </Grid>\n        </Paper>\n        <Grid container spacing={3}>\n            <Grid item lg={12} md={12} xs={12}>\n                <Card>\n                    <CardContent>\n                        <div style={{ height: 500, width: '100%' }}>\n                            <DataGrid rows={campaigns} columns={profilesColumns} pageSize={20}\n                                // rowsPerPageOptions={[10, 20, 50]}\n                                // onRowClick={showProfile}\n                                pagination />\n                        </div>\n\n                    </CardContent>\n                </Card>\n            </Grid>\n        </Grid>\n    </div>)\n}\n\nexport default Campaign","import React, { useEffect, useState } from 'react'\nimport TimePicker from './timepicker'\nimport {\n    Box,\n    Card,\n    CardContent,\n    CardHeader,\n    Container,\n    Divider,\n    Grid,\n    makeStyles,\n    Typography,\n    TextField,\n    Paper,\n    Button,\n    Tooltip,\n    IconButton\n\n} from '@material-ui/core';\nimport moment from 'moment';\nimport Date from './DaterangeReport'\nimport { DataGrid } from '@material-ui/data-grid';\nimport axios from 'axios'\nimport FileUpload from './Ivrfileupload'\nimport { UPLOAD_FILE } from 'src/modules/dashboard-360/utils/endpoints'\n\n\n\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        flexGrow: 1,\n        margin: '1rem 2rem'\n    }\n}));\n\nconst Campaign = (props) => {\n    const classes = useStyles();\n    const [startTime, setStartTime] = useState(\"\")\n    const [endTime, setEndtime] = useState(\"\")\n    const [queue, setQueue] = useState(\"\")\n    const [campaignRetry, setRetry] = useState(\"\")\n    const [campaignName, setcampaignname] = useState(\"\")\n    const [date, setdate] = useState(\"\")\n    const [campaigns, setCampaigns] = useState([])\n    const [disable, setDisable] = useState(true)\n\n\n    useEffect(() => {\n        getCampaigns()\n    }, [])\n\n    const handleQueueChange = (e) => setQueue(e.target.value)\n    const handleretryChange = (e) => {\n        setRetry(e.target.value)\n        setDisable(false)\n    }\n    const handlecampaignNameChange = (e) => setcampaignname(e.target.value)\n\n    const handleReset = () => {\n        setdate(\"\")\n        setStartTime(\"\")\n        setEndtime(\"\")\n        setQueue(\"\")\n        setRetry(\"\")\n        setcampaignname(\"\")\n\n    }\n\n    const handleTime = (time, label) => {\n        if (label === 'start time') {\n            console.log(time)\n            const time1 = moment(time).format()\n            const time2 = time1.replace('T', \" \").slice(10, 19)\n            setStartTime(time2)\n\n        } else if (label === 'End time') {\n            const time1 = moment(time).format()\n            const time2 = time1.replace('T', \" \").slice(10, 19)\n            setEndtime(time2)\n        }\n\n    }\n\n    const handleAddCampaign = (e) => {\n        const data = {\n            \"campaign_name\": campaignName,\n            \"queue\": queue,\n            \"startdate\": `${date}${startTime}`,\n            \"enddate\": `${date}${endTime}`,\n            \"retries\": campaignRetry,\n            \"status\": \"1\"\n        }\n\n        axios.post(`${UPLOAD_FILE}/campaign/createCampaign`, data)\n            .then((response) => {\n                console.log(response.data)\n                handleReset()\n            })\n            .catch((error) => {\n                console.log(error)\n            })\n        // console.log(data)\n\n    }\n\n    const updateCampaign = (id, status) => {\n        const data = {\n            \"_id\": id,\n            \"status\": status\n\n        }\n        console.log(data, \"fdsfsd\")\n\n        axios.post(`${UPLOAD_FILE}/campaign/updateCampaignbyID`, data)\n            .then((response) => {\n                console.log(response.data, \"update\")\n                getCampaigns()\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    const getCampaigns = () => {\n        var axios = require('axios');\n        var data = '';\n\n        var config = {\n            method: 'get',\n            url: `${UPLOAD_FILE}/campaign/getAllCampaign`,\n            headers: {},\n            data: data\n        };\n\n        axios(config)\n            .then(function (response) {\n                if (response.data.Record.length > 0) {\n                    // console.log(\"chaitra\",response.data.Record)\n                    var i = 0;\n                    response.data.Record.map((ele) => {\n                        i = i + 1;\n\n                        var dateFormat = 'DD-MM-YYYY HH:mm:ss';\n                        var endUtc = moment.utc(ele.enddate);\n                        var startUtc = moment.utc(ele.startdate);\n                        var localeDate = endUtc.local();\n                        var localsDate = startUtc.local();\n                        ele.enddate = localeDate.format(dateFormat);\n                        ele.startdate = localsDate.format(dateFormat);\n                        return ele.id = i;\n\n                        // return ele.enddate === ele.enddate.slice(0, 10)\n                    })\n                    setCampaigns(response.data.Record.reverse())\n                }\n                // console.log(\"chaitra\",response.data.Record)\n                // let rdata = response.data.reverse()\n                // console.log()\n                // rdata = rdata.reverse()\n                // console.log(rdata)\n\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    // console.log(campaigns, \"cammmm\")\n    const handleUpload = (data) => {\n        console.log(data)\n        // data.map((ele) => {\n        //     console.log(ele)\n        // })\n\n    }\n\n    const profilesColumns = [\n        {\n            headerName: 'Name',\n            field: 'campaign_name',\n            flex: 0.5\n\n        },\n        {\n            headerName: 'Start Date',\n            field: 'startdate',\n            flex: 0.5,\n\n            // renderCell: rowData => (\n            //     <>\n            //         {\n            //             (<div>rowData.row.status</div>)\n            //             // rowData.row.status === '1' && (<div>\n            //             //     <Tooltip title=\"Activated\">\n            //             //         <IconButton\n\n            //             //         ><Typography>Inactive</Typography>\n            //             //         </IconButton>\n            //             //     </Tooltip>\n            //             // </div>)\n            //         }\n            //         </>\n            // ),\n        },\n        {\n            headerName: 'End Date',\n            field: 'enddate',\n            flex: 0.5\n        },\n        // {\n        //     headerName: 'Start Time',\n        //     field: 'startdate',\n        //     flex: 0.5\n        // },\n        // {\n        //     headerName: 'End Time',\n        //     field: 'startdate',\n        //     flex: 0.5\n        // },\n        {\n            headerName: 'Queue',\n            field: 'queue',\n            flex: 0.5\n        },\n        {\n            headerName: 'Retries',\n            field: 'retries',\n            flex: 0.5\n        },\n        {\n            headerName: 'Status',\n            field: '',\n\n            renderCell: rowData => (\n                <>\n                    {\n                        rowData.row.status === '1' && (<div>\n                            <Tooltip title=\"Activated\">\n                                <IconButton\n\n                                ><Typography>Inactive</Typography>\n                                </IconButton>\n                            </Tooltip>\n                        </div>)\n                    }\n                    {\n                        rowData.row.status === '0' && (<div>\n                            <Tooltip title=\"Activate\">\n                                <IconButton\n                                ><Typography>Active</Typography>\n                                </IconButton>\n                            </Tooltip>\n                        </div>)\n                    }\n                    {\n                        rowData.row.status === 'F' && (<div>\n                            <Tooltip title=\"Finished\">\n                                <IconButton\n                                ><Typography>Finished</Typography>\n                                </IconButton>\n                            </Tooltip>\n                        </div>)\n                    }\n                </>\n            ),\n            flex: 0.5\n        },\n        {\n            headerName: 'Actions',\n            field: 'id',\n\n            renderCell: rowData => (\n                <>\n                    {\n                        rowData.row.status === '1' && (<div>\n                            <Tooltip title=\"Activate\">\n                                <IconButton\n                                    onClick={() => { updateCampaign(rowData.row._id, \"0\") }}\n                                ><Button variant=\"contained\" >Activate</Button>\n                                </IconButton>\n                            </Tooltip>\n                        </div>)\n                    }\n                    {\n                        rowData.row.status === '0' && (<div>\n                            <Tooltip title=\"Deactivate\">\n                                <IconButton\n                                    onClick={() => { updateCampaign(rowData.row._id, \"1\") }}\n                                ><Button variant=\"contained\" >Deactivate</Button>\n                                </IconButton>\n                            </Tooltip>\n                        </div>)\n                    }\n                </>\n            ),\n            flex: 0.5\n        },\n        {\n            headerName: 'Upload',\n            field: 'Script',\n\n            renderCell: rowData => (\n                <>\n                    {\n                        <FileUpload id={rowData.row._id} retries={rowData.row.retries} campaignID={rowData.row._id} handleUpload={handleUpload} />\n                    }\n\n                </>\n            ),\n            flex: 0.5\n        }\n\n\n    ];\n\n    const showProfile = (data) => {\n        // console.log(data)\n    }\n\n\n\n    return (<div>\n        <Grid container spacing={3}>\n            <Grid item lg={4} md={12} xs={0}></Grid>\n            <Grid item lg={4} md={12} xs={0}>\n                <h1 style={{ textAlign: 'center' }}> IVR Campaign Admin Dashboard</h1>\n            </Grid>\n            <Grid item lg={4} md={12} xs={0}></Grid>\n        </Grid>\n        <br /><br />\n        <Paper className={classes.root}>\n\n            <Grid container spacing={3}>\n                <Grid item lg={12} md={12} xs={12}></Grid>\n                <Grid item lg={12} md={12} xs={12}>\n                    &nbsp;<Date setdate={setdate} />\n                </Grid>\n                <Grid item lg={2} md={12} xs={12}>\n                    <TimePicker label=\"start time\" handleTime={handleTime} />\n                </Grid>\n                <Grid item lg={2} md={12} xs={12}>\n                    <TimePicker label=\"End time\" handleTime={handleTime} />\n                </Grid>\n                <Grid item lg={2} md={12} xs={12}>\n                    <TextField id=\"outlined-basic\" label=\"Queue\" variant=\"outlined\" value={queue} onChange={handleQueueChange} />\n                </Grid>\n                <Grid item lg={2} md={12} xs={12}>\n                    <TextField id=\"outlined-basic\" label=\"Campaign Name\" variant=\"outlined\" value={campaignName} onChange={handlecampaignNameChange} />\n                </Grid>\n                <Grid item lg={2} md={12} xs={12}>\n                    <TextField id=\"outlined-basic\" label=\"Campaign Retry\" variant=\"outlined\" value={campaignRetry} onChange={handleretryChange} />\n                </Grid>\n                <Grid item lg={2} md={12} xs={12}>\n                    <Button variant=\"contained\" color=\"primary\" onClick={handleAddCampaign} disabled={disable}>\n                        Add Campaign\n                    </Button>\n                </Grid>\n\n\n            </Grid>\n        </Paper>\n        <Grid container spacing={3}>\n            <Grid item lg={12} md={12} xs={12}>\n                <Card>\n                    <CardContent>\n                        <div style={{ height: 500, width: '100%' }}>\n                            <DataGrid rows={campaigns} columns={profilesColumns} pageSize={20}\n                                // rowsPerPageOptions={[10, 20, 50]}\n                                // onRowClick={showProfile}\n                                pagination />\n                        </div>\n\n                    </CardContent>\n                </Card>\n            </Grid>\n        </Grid>\n    </div>)\n}\n\nexport default Campaign","import React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport AddIcon from '@material-ui/icons/Add';\nimport {\n    Grid, TextField\n} from '@material-ui/core';\nimport axios from 'axios';\n\nconst styles = (theme) => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(2),\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n    const { children, classes, onClose, ...other } = props;\n    return (\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n            <Typography variant=\"h6\">{children}</Typography>\n            {onClose ? (\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n                    <CloseIcon />\n                </IconButton>\n            ) : null}\n        </MuiDialogTitle>\n    );\n});\n\nconst DialogContent = withStyles((theme) => ({\n    root: {\n        padding: theme.spacing(2),\n    },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(1),\n    },\n}))(MuiDialogActions);\n\nexport default function CustomizedDialogs(props) {\n    const [open, setOpen] = React.useState(false);\n    const [name, setname] = useState(\"\")\n    const [processtype, setProcessType] = useState(\"\")\n    const [processName, setProcessname] = useState(\"\")\n    const [phone, setPhone] = useState(\"\")\n    const [sip, setSip] = useState(\"\")\n    const [processlocation, setProcessLocation] = useState(\"\")\n    const [queue, setQueue] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [processGroup, setProcessGroup] = useState(\"\")\n\n    const handleName = (e) => setname(e.target.value)\n    const handleprocesstype = (e) => setProcessType(e.target.value)\n    const handleprocessName = (e) => setProcessname(e.target.value)\n    const handlephone = (e) => setPhone(e.target.value)\n    const handlesip = (e) => setSip(e.target.value)\n    const handleprocesslocation = (e) => setProcessLocation(e.target.value)\n    const handlequeue = (e) => setQueue(e.target.value)\n    const handleemail = (e) => setEmail(e.target.value)\n    const handleprocessGroup = (e) => setProcessGroup(e.target.value)\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleReset = () => {\n        setname(\"\")\n        setProcessType(\"\")\n        setProcessname(\"\")\n        setPhone(\"\")\n        setSip(\"\")\n        setProcessLocation(\"\")\n        setQueue(\"\")\n        setEmail(\"\")\n        setProcessGroup(\"\")\n    }\n\n    const Addagent = () => {\n\n        if (name.length !== 0 && processtype.length !== 0 && processName.length !== 0 && phone.length !== 0 && processlocation.length !== 0 && queue.length !== 0 && email.length !== 0 && processGroup.length !== 0) {\n            // if (sip.length === 0) {\n            //     setSip(phone)\n            // }\n\n            if (sip.length === 0) {\n                //setSip(phone)\n                const data = {\n                    \"username\": email,\n                    \"password\": phone,\n                    \"role\": \"agent\",\n                    \"id\": phone,\n                    \"Name\": name,\n                    \"agentAvailability\": \"Mobile\",\n                    \"queuePrefix\": \"\",\n                    \"ProcessName\": processName,\n                    \"ProcessLocation\": processlocation,\n                    \"Queue\": queue,\n                    \"enabled\": \"true\",\n                    \"queueLocation\": `Local/5${phone}@from-internal`,\n                    \"ProcessGroup\": processGroup,\n                    \"ProcessType\": processtype,\n                    \"Location\": `Local/5${phone}@from-internal`,\n                    \"MemberName\": `Local/5${phone}@from-internal`,\n                    \"StateInterface\": `Local/5${phone}@from-internal`\n                }\n\n                axios.post(`http://192.168.4.44:62003/api/register`, data)\n                    .then((res) => {\n                        console.log(res.data)\n                        alert(`Agent Added Successfully`)\n                    })\n                    .catch((err) => {\n                        console.log(err)\n                    })\n\n\n                //console.log(data)\n\n            } else {\n                const id = `SIP/${sip}`\n                const data = {\n                    \"username\": email,\n                    \"password\": phone,\n                    \"role\": \"agent\",\n                    \"id\": sip,\n                    \"Name\": name,\n                    \"agentAvailability\": \"Sip\",\n                    \"queuePrefix\": \"\",\n                    \"ProcessName\": processName,\n                    \"ProcessLocation\": processlocation,\n                    \"Queue\": queue,\n                    \"enabled\": \"true\",\n                    \"queueLocation\": id,\n                    \"ProcessGroup\": processGroup,\n                    \"ProcessType\": processtype,\n                    \"Location\": id,\n                    \"MemberName\": id,\n                    \"StateInterface\": id\n                }\n                axios.post(`http://192.168.4.44:62003/api/register`, data)\n                    .then((res) => {\n                        console.log(res.data)\n                        alert(`Agent Added Successfully`)\n                    })\n                    .catch((err) => {\n                        console.log(err)\n                    })\n            }\n\n\n\n            //console.log(data)\n            handleReset()\n\n            handleClose()\n        }\n\n\n\n    }\n\n    return (\n        <div>\n            <Button onClick={handleClickOpen}>\n                <AddIcon />\n            </Button>\n            <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n                <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n                    Add Agent\n        </DialogTitle>\n                <DialogContent dividers>\n                    <Grid container spacing={3} direction=\"row\">\n                        <Grid item xs={6} sm={6} lg={6}><TextField id=\"outlined-basic\" label=\"Name\" variant=\"outlined\" value={name} onChange={handleName} /></Grid>\n                        <Grid item xs={6} sm={6} lg={6}><TextField id=\"outlined-basic\" label=\"Email-ID\" variant=\"outlined\" value={email} onChange={handleemail} /></Grid>\n                        <Grid item xs={6} sm={6} lg={6}><TextField id=\"outlined-basic\" label=\"Number\" variant=\"outlined\" value={phone} onChange={handlephone} /></Grid>\n                        <Grid item xs={6} sm={6} lg={6}><TextField id=\"outlined-basic\" label=\"Process Name\" variant=\"outlined\" value={processName} onChange={handleprocessName} /></Grid>\n                        <Grid item xs={6} sm={6} lg={6}><TextField id=\"outlined-basic\" label=\"Process Location\" variant=\"outlined\" value={processlocation} onChange={handleprocesslocation} /></Grid>\n                        <Grid item xs={6} sm={6} lg={6}><TextField id=\"outlined-basic\" label=\"Process Group\" variant=\"outlined\" value={processGroup} onChange={handleprocessGroup} /></Grid>\n                        <Grid item xs={6} sm={6} lg={6}><TextField id=\"outlined-basic\" label=\"SIP ID\" variant=\"outlined\" value={sip} onChange={handlesip} /></Grid>\n                        <Grid item xs={6} sm={6} lg={6}><TextField id=\"outlined-basic\" label=\"Process Type\" variant=\"outlined\" value={processtype} onChange={handleprocesstype} /></Grid>\n                        <Grid item xs={6} sm={6} lg={6}><TextField id=\"outlined-basic\" label=\"Queue\" variant=\"outlined\" value={queue} onChange={handlequeue} /></Grid>\n                        <Grid item xs={6} sm={6} lg={6}><Button variant=\"contained\" color=\"primary\" onClick={Addagent}>Add Agent</Button></Grid>\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button autoFocus onClick={handleClose} color=\"primary\">\n                        Close\n          </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}","import React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport AddIcon from '@material-ui/icons/Add';\nimport {\n    Grid, TextField\n} from '@material-ui/core';\nimport axios from 'axios';\n\nconst styles = (theme) => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(2),\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n    const { children, classes, onClose, ...other } = props;\n    return (\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n            <Typography variant=\"h6\">{children}</Typography>\n            {onClose ? (\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n                    <CloseIcon />\n                </IconButton>\n            ) : null}\n        </MuiDialogTitle>\n    );\n});\n\nconst DialogContent = withStyles((theme) => ({\n    root: {\n        padding: theme.spacing(2),\n    },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(1),\n    },\n}))(MuiDialogActions);\n\nexport default function CustomizedDialogs(props) {\n    const [open, setOpen] = React.useState(false);\n    const [name, setname] = useState(\"\")\n    const [processtype, setProcessType] = useState(\"\")\n    const [processName, setProcessname] = useState(\"\")\n    const [phone, setPhone] = useState(\"\")\n    const [sip, setSip] = useState(\"\")\n    const [processlocation, setProcessLocation] = useState(\"\")\n    const [queue, setQueue] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [processGroup, setProcessGroup] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n\n    const handleName = (e) => setname(e.target.value)\n    const handleprocesstype = (e) => setProcessType(e.target.value)\n    const handleprocessName = (e) => setProcessname(e.target.value)\n    const handlephone = (e) => setPhone(e.target.value)\n    const handlesip = (e) => setSip(e.target.value)\n    const handleprocesslocation = (e) => setProcessLocation(e.target.value)\n    const handlequeue = (e) => setQueue(e.target.value)\n    const handleemail = (e) => setEmail(e.target.value)\n    const handleprocessGroup = (e) => setProcessGroup(e.target.value)\n    const handlepassword = (e) => setPassword(e.target.value)\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleReset = () => {\n        setname(\"\")\n        setProcessType(\"\")\n        setProcessname(\"\")\n        setPhone(\"\")\n        setSip(\"\")\n        setProcessLocation(\"\")\n        setQueue(\"\")\n        setEmail(\"\")\n        setProcessGroup(\"\")\n    }\n\n    const Addagent = () => {\n\n        if (name.length !== 0 && processtype.length !== 0 && processName.length !== 0 && phone.length !== 0 && processlocation.length !== 0 && queue.length !== 0 && email.length !== 0 && processGroup.length !== 0) {\n            // if (sip.length === 0) {\n            //     setSip(phone)\n            // }\n\n            if (sip.length === 0) {\n                //setSip(phone)\n                const data = {\n                    \"username\": email,\n                    \"password\": phone,\n                    \"role\": \"agent\",\n                    \"id\": phone,\n                    \"Name\": name,\n                    \"agentAvailability\": \"Mobile\",\n                    \"queuePrefix\": \"\",\n                    \"ProcessName\": processName,\n                    \"ProcessLocation\": processlocation,\n                    \"Queue\": queue,\n                    \"enabled\": \"true\",\n                    \"queueLocation\": `Local/5${phone}@from-internal`,\n                    \"ProcessGroup\": processGroup,\n                    \"ProcessType\": processtype,\n                    \"Location\": `Local/5${phone}@from-internal`,\n                    \"MemberName\": `Local/5${phone}@from-internal`,\n                    \"StateInterface\": `Local/5${phone}@from-internal`\n                }\n\n                axios.post(`http://192.168.4.44:62003/api/register`, data)\n                    .then((res) => {\n                        console.log(res.data)\n                        alert(`Agent Added Successfully`)\n                    })\n                    .catch((err) => {\n                        console.log(err)\n                    })\n\n                //console.log(data)\n\n            } else {\n                const id = `SIP/${sip}`\n                const data = {\n                    \"username\": email,\n                    \"password\": phone,\n                    \"role\": \"agent\",\n                    \"id\": sip,\n                    \"Name\": name,\n                    \"agentAvailability\": \"Sip\",\n                    \"queuePrefix\": \"\",\n                    \"ProcessName\": processName,\n                    \"ProcessLocation\": processlocation,\n                    \"Queue\": queue,\n                    \"enabled\": \"true\",\n                    \"queueLocation\": id,\n                    \"ProcessGroup\": processGroup,\n                    \"ProcessType\": processtype,\n                    \"Location\": id,\n                    \"MemberName\": id,\n                    \"StateInterface\": id\n                }\n                axios.post(`http://192.168.4.44:62003/api/register`, data)\n                    .then((res) => {\n                        console.log(res.data)\n                        alert(`Agent Added Successfully`)\n                    })\n                    .catch((err) => {\n                        console.log(err)\n                    })\n            }\n\n\n\n            //console.log(data)\n            handleReset()\n\n            handleClose()\n        }\n\n\n\n    }\n\n    return (\n        <div>\n            <Button onClick={handleClickOpen}>\n                <AddIcon />\n            </Button>\n            <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n                <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n                    Add Agent\n        </DialogTitle>\n                <DialogContent dividers>\n                    <Grid container spacing={3} direction=\"row\">\n                        <Grid item xs={6} sm={6} lg={6}><TextField id=\"outlined-basic\" label=\"Name\" variant=\"outlined\" value={name} onChange={handleName} /></Grid>\n                        <Grid item xs={6} sm={6} lg={6}><TextField id=\"outlined-basic\" label=\"Email-ID\" variant=\"outlined\" value={email} onChange={handleemail} /></Grid>\n                        <Grid item xs={6} sm={6} lg={6}><TextField id=\"outlined-basic\" label=\"Number\" variant=\"outlined\" value={phone} onChange={handlephone} /></Grid>\n                        <Grid item xs={6} sm={6} lg={6}><TextField id=\"outlined-basic\" label=\"Process Name\" variant=\"outlined\" value={processName} onChange={handleprocessName} /></Grid>\n                        <Grid item xs={6} sm={6} lg={6}><TextField id=\"outlined-basic\" label=\"Process Location\" variant=\"outlined\" value={processlocation} onChange={handleprocesslocation} /></Grid>\n                        <Grid item xs={6} sm={6} lg={6}><TextField id=\"outlined-basic\" label=\"Process Group\" variant=\"outlined\" value={processGroup} onChange={handleprocessGroup} /></Grid>\n                        <Grid item xs={6} sm={6} lg={6}><TextField id=\"outlined-basic\" label=\"SIP ID\" variant=\"outlined\" value={sip} onChange={handlesip} /></Grid>\n                        <Grid item xs={6} sm={6} lg={6}><TextField id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" value={password} onChange={handlepassword} /></Grid>\n                        <Grid item xs={6} sm={6} lg={6}><TextField id=\"outlined-basic\" label=\"Process Type\" variant=\"outlined\" value={processtype} onChange={handleprocesstype} /></Grid>\n                        <Grid item xs={6} sm={6} lg={6}><TextField id=\"outlined-basic\" label=\"Queue\" variant=\"outlined\" value={queue} onChange={handlequeue} /></Grid>\n                        <Grid item xs={6} sm={6} lg={6}><Button variant=\"contained\" color=\"primary\" onClick={Addagent}>Add Agent</Button></Grid>\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button autoFocus onClick={handleClose} color=\"primary\">\n                        Close\n          </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}","import React, { useEffect, useState } from 'react'\nimport { Modal } from 'react-bootstrap'\nimport {\n    Avatar,\n    Grid,\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemText,\n    makeStyles,\n    Typography,\n    Accordion,\n    AccordionSummary,\n    AccordionDetails,\n    Card,\n    CardContent,\n    CardHeader,\n    Box,\n    Button,\n    TextField,\n    Dialog,\n    DialogContent,\n    DialogTitle\n} from '@material-ui/core';\nimport axios from 'axios'\nimport { AGENT_PERFORMANCE } from 'src/modules/dashboard-360/utils/endpoints'\n\n\nconst Popup = (props) => {\n    const { show, handleClose, record } = props\n    const [open, setOpen] = React.useState(false);\n    const [name, setname] = useState(\"\")\n    const [processtype, setProcessType] = useState(\"\")\n    const [processName, setProcessname] = useState(\"\")\n    const [phone, setPhone] = useState(\"\")\n    const [sip, setSip] = useState(\"\")\n    const [processlocation, setProcessLocation] = useState(\"\")\n    const [queue, setQueue] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [processGroup, setProcessGroup] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n\n    const handleName = (e) => setname(e.target.value)\n    const handleprocesstype = (e) => setProcessType(e.target.value)\n    const handleprocessName = (e) => setProcessname(e.target.value)\n    const handlephone = (e) => setPhone(e.target.value)\n    const handlesip = (e) => setSip(e.target.value)\n    const handleprocesslocation = (e) => setProcessLocation(e.target.value)\n    const handlequeue = (e) => setQueue(e.target.value)\n    const handleemail = (e) => setEmail(e.target.value)\n    const handleprocessGroup = (e) => setProcessGroup(e.target.value)\n    const handlepassword = (e) => setPassword(e.target.value)\n\n    //console.log(record)\n\n    useEffect(() => {\n        setname(record.name)\n        setProcessType(record.ProcessType)\n        setProcessname(record.ProcessName)\n        if (show && record.id.length > 9) {\n            setPhone(record.id)\n        } else {\n            setSip(record.id)\n        }\n\n        setProcessLocation(record.ProcessLocation)\n        setQueue(record.Queue)\n        setEmail(record.UserName)\n        setProcessGroup(record.ProcessGroup)\n    }, [props])\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n\n    const handleReset = () => {\n        setname(\"\")\n        setProcessType(\"\")\n        setProcessname(\"\")\n        setPhone(\"\")\n        setSip(\"\")\n        setProcessLocation(\"\")\n        setQueue(\"\")\n        setEmail(\"\")\n        setProcessGroup(\"\")\n        setPassword(\"\")\n    }\n\n    const Addagent = () => {\n        // console.log(\"i am here\")\n        // console.log(sip, \"sip\")\n        if (!sip) {\n            //setSip(phone)\n            const data = {\n                \"username\": email,\n                // \"password\": phone,\n                \"role\": \"agent\",\n                \"id\": phone,\n                \"Name\": name,\n                \"agentAvailability\": \"Mobile\",\n                \"queuePrefix\": \"\",\n                \"ProcessName\": processName,\n                \"ProcessLocation\": processlocation,\n                \"Queue\": queue,\n                \"enabled\": \"true\",\n                \"queueLocation\": `Local/5${phone}@from-internal`,\n                \"ProcessGroup\": processGroup,\n                \"ProcessType\": processtype,\n                \"Location\": `Local/5${phone}@from-internal`,\n                \"MemberName\": `Local/5${phone}@from-internal`,\n                \"StateInterface\": `Local/5${phone}@from-internal`\n            }\n            console.log(data)\n\n            axios.put(`${AGENT_PERFORMANCE}/agents/${record._id}`, data)\n                .then((res) => {\n                    // console.log(res.data)\n                    alert(`Agent Updated Successfully`)\n                })\n                .catch((err) => {\n                    console.log(err)\n                })\n\n            if (password) {\n                const data1 = {\n                    \"token\": localStorage.getItem('jwt'),\n                    \"newpassword\": password,\n                    \"_id\": record._id\n                }\n\n\n                axios.post(`http://192.168.4.44:62003/api/reset-password`, data1)\n                    .then((res) => {\n                        if (res.data.status === 'ok') {\n                            alert(`Password Changed Successfully`)\n                        }\n                    })\n                    .catch((err) => {\n                        console.log(err)\n                    })\n            }\n\n            //console.log(data)\n\n        } else {\n            const id = `SIP/${sip}`\n            const data = {\n                \"username\": email,\n                //\"password\": phone,\n                \"role\": \"agent\",\n                \"id\": sip,\n                \"Name\": name,\n                \"agentAvailability\": \"Sip\",\n                \"queuePrefix\": \"\",\n                \"ProcessName\": processName,\n                \"ProcessLocation\": processlocation,\n                \"Queue\": queue,\n                \"enabled\": \"true\",\n                \"queueLocation\": id,\n                \"ProcessGroup\": processGroup,\n                \"ProcessType\": processtype,\n                \"Location\": id,\n                \"MemberName\": id,\n                \"StateInterface\": id\n            }\n            console.log(\"i am here\")\n            console.log(data)\n            axios.put(`${AGENT_PERFORMANCE}/agents/${record._id}`, data)\n                .then((res) => {\n                    // console.log(res.data)\n                    alert(`Agent updated Successfully`)\n                })\n                .catch((err) => {\n                    console.log(err)\n                })\n\n            if (password) {\n                const data1 = {\n                    \"token\": localStorage.getItem('jwt'),\n                    \"newpassword\": password,\n                    \"_id\": record._id\n                }\n                axios.post(`http://192.168.4.44:62003/api/reset-password`, data1)\n                    .then((res) => {\n                        //console.log(res.data)\n                        if (res.data.status === 'ok') {\n                            alert(`Password Changed Successfully`)\n                        }\n\n                    })\n                    .catch((err) => {\n                        console.log(err)\n                    })\n            }\n        }\n        //console.log(data)\n        handleReset()\n\n        handleClose()\n\n    }\n\n\n    return (<div>\n        <Dialog\n            open={show}\n            onClose={() => handleClose()}\n            style={{ padding: 2 }}\n        >\n            <DialogTitle>Update Agent</DialogTitle>\n            < DialogContent>\n                <Grid container spacing={3} direction=\"row\">\n                    <Grid item xs={6} sm={6} lg={6}><TextField id=\"outlined-basic\" label=\"Name\" variant=\"outlined\" value={name} onChange={handleName} /></Grid>\n                    <Grid item xs={6} sm={6} lg={6}><TextField id=\"outlined-basic\" label=\"Email-ID\" variant=\"outlined\" value={email} onChange={handleemail} /></Grid>\n                    <Grid item xs={6} sm={6} lg={6}><TextField id=\"outlined-basic\" label=\"Number\" variant=\"outlined\" value={phone} onChange={handlephone} /></Grid>\n                    <Grid item xs={6} sm={6} lg={6}><TextField id=\"outlined-basic\" label=\"Process Name\" variant=\"outlined\" value={processName} onChange={handleprocessName} /></Grid>\n                    <Grid item xs={6} sm={6} lg={6}><TextField id=\"outlined-basic\" label=\"Process Location\" variant=\"outlined\" value={processlocation} onChange={handleprocesslocation} /></Grid>\n                    <Grid item xs={6} sm={6} lg={6}><TextField id=\"outlined-basic\" label=\"Process Group\" variant=\"outlined\" value={processGroup} onChange={handleprocessGroup} /></Grid>\n                    <Grid item xs={6} sm={6} lg={6}><TextField id=\"outlined-basic\" label=\"SIP ID\" variant=\"outlined\" value={sip} onChange={handlesip} /></Grid>\n                    <Grid item xs={6} sm={6} lg={6}><TextField id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" value={password} onChange={handlepassword} /></Grid>\n                    <Grid item xs={6} sm={6} lg={6}><TextField id=\"outlined-basic\" label=\"Process Type\" variant=\"outlined\" value={processtype} onChange={handleprocesstype} /></Grid>\n                    <Grid item xs={6} sm={6} lg={6}><TextField id=\"outlined-basic\" label=\"Queue\" variant=\"outlined\" value={queue} onChange={handlequeue} /></Grid>\n                    <Grid item xs={6} sm={6} lg={6}><Button variant=\"contained\" color=\"primary\" onClick={Addagent}>Update Agent</Button></Grid>\n                    <p><Button variant=\"contained\" onClick={() => { handleClose(); handleReset() }}>Close</Button></p>\n                </Grid>\n            </DialogContent>\n        </Dialog>\n    </div>)\n}\n\nexport default Popup","import React, { useEffect, useState } from 'react';\nimport axios from 'axios'\nimport DownloadReport from '../DownloadReport'\nimport { DataGrid } from '@material-ui/data-grid';\nimport Dialog from './dialog'\nimport AddIcon from '@material-ui/icons/Add';\nimport {\n    Avatar,\n    Grid,\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemText,\n    makeStyles,\n    Typography,\n    Accordion,\n    AccordionSummary,\n    AccordionDetails,\n    Card,\n    CardContent,\n    CardHeader,\n    Box,\n    Button,\n    TextField,\n    Paper,\n    Snackbar,\n    Tooltip,\n    IconButton\n} from '@material-ui/core';\nimport {\n    MenuItem, InputLabel, Select,\n    FormControl\n} from '@material-ui/core'\nimport { grey } from '@material-ui/core/colors';\nimport moment from 'moment';\nimport { propTypes } from 'react-bootstrap/esm/Image';\nimport Dialog1 from './updatedialog'\nimport Popup from './PopUp'\nimport { date } from 'yup';\nimport { AGENT_PERFORMANCE } from 'src/modules/dashboard-360/utils/endpoints'\n\n\nconst Inbound = (props) => {\n\n    const [profiles1, setProfiles1] = useState([]);\n    const [agents, setAgents] = useState([])\n    const [liveCalls, setLivecalls] = useState([])\n    const [breakdetails, setBreakdetails] = useState([])\n    const [agentsFree, setAgentsFree] = useState([])\n    const [idle, setIdle] = useState([])\n    const [update, setUpdate] = useState({})\n    const [show, setShow] = useState(false)\n\n\n    const profilesColumns = [\n        {\n            headerName: 'Name',\n            field: 'name',\n            flex: 0.5\n\n        },\n        {\n            headerName: 'Actions',\n            field: 'id',\n\n            renderCell: rowData => (\n                <>\n                    <Tooltip title=\"update\">\n                        <IconButton\n                            onClick={() => <Dialog1 update={rowData.row} />}\n                        ><Typography>{rowData.row.id}</Typography>\n                        </IconButton>\n                    </Tooltip>\n                </>\n            ),\n            flex: 0.5\n        },\n\n        {\n            headerName: 'Email',\n            field: 'UserName',\n            flex: 0.5\n        },\n        {\n            headerName: 'Queue',\n            field: 'Queue',\n            flex: 0.5\n        },\n    ]\n    const agentStatusColumn = [\n        {\n            headerName: 'Name',\n            field: 'name',\n            flex: 1\n\n        },\n        {\n            headerName: 'Status',\n            field: 'Event',\n            flex: 1\n        },\n        {\n            headerName: 'Duration',\n            field: 'Mduration',\n            flex: 1\n        }\n    ]\n    const liveCallsColumn = [\n\n        {\n            headerName: 'Name',\n            field: 'name',\n            flex: 1\n\n        },\n        {\n            headerName: 'Customer Number',\n            field: 'CallerIDNum',\n            flex: 1\n        },\n        {\n            headerName: 'Queue',\n            field: 'Queue',\n            flex: 1\n        },\n        {\n            headerName: 'Duration',\n            field: 'Mduration',\n            flex: 1\n        }\n    ]\n    const callsNotDisposed = [\n        {\n            headerName: 'Name',\n            field: 'name',\n            flex: 1\n\n        },\n        {\n            headerName: 'Customer Number',\n            field: 'CallerIDNum',\n            flex: 1\n        },\n        {\n            headerName: 'Queue Name',\n            field: 'Queue',\n            flex: 1\n        },\n        {\n            headerName: 'Duration',\n            field: 'Mduration',\n            flex: 1\n        }\n    ]\n    const agentsFreeColumn = [\n        {\n            headerName: 'Name',\n            field: 'name',\n            flex: 1\n\n        },\n        {\n            headerName: 'Customer Number',\n            field: 'CallerIDNum',\n            flex: 1\n        },\n        {\n            headerName: 'Queue ',\n            field: 'queue',\n            flex: 1\n        },\n        {\n            headerName: 'Duration',\n            field: 'Mduration',\n            flex: 1\n        }\n    ]\n    const showProfile = (data) => {\n        console.log(data.row)\n        // const record = profiles1.filter((ele) => {\n        //     return ele._id === data.row._id\n        // })\n        // console.log(record)\n        setUpdate(data.row)\n        setShow(true)\n    }\n\n\n    const handleRejectPopup = (id) => {\n        // console.log(id)\n\n        // setOpen(true)\n    }\n\n    const getAgents = () => {\n        axios.get(`${AGENT_PERFORMANCE}/agents`)\n            .then((res) => {\n                console.log(res.data)\n                if (res.data.length > 0) {\n                    res.data.map((ele) => {\n                        if (ele.Event === 'AgentComplete') {\n                            return ele.Event = 'Call Disconnected Not Disposed'\n                        } else if (ele.Event === 'LoggedOut') {\n                            return ele.Event = 'Logged Out'\n                        } else if (ele.Event === 'BREAKIN') {\n                            return ele.Event = 'On Break'\n                        } else if (ele.Event === 'LoggedIn') {\n                            return ele.Event = 'Logged In'\n                        } else if (ele.Event === 'BREAKOUT') {\n                            return ele.Event = 'Free for Next Call'\n                        } else if (ele.Event === 'AgentCalled') {\n                            return ele.Event = 'Ringing'\n                        } else if (ele.Event === 'AgentRingNoAnswer') {\n                            return ele.Event = 'Missed Last Call, Ready for Next Call'\n                        } else if (ele.Event === 'AgentConnect') {\n                            return ele.Event = 'On Call'\n                        } else if (ele.Event === 'AgentDisposed') {\n                            return ele.Event = 'Free for Next Call'\n                        }\n                    })\n\n\n                    let value;\n                    res.data.map((ele) => {\n\n                        value = new Date(ele.updatedAt).toUTCString()\n                        //console.log(value)\n                        // value = new date() - new Date(value)\n                        value = new Date() - new Date(value)\n                        console.log(value)\n                        value = new Date(value).toUTCString().slice(17, 25)\n                        //value = moment(value).format().slice(11, 18)\n                        //value = moment(value).format()\n                        return (\n                            ele.Mduration = value\n                        )\n                    })\n\n                    setAgents(res.data)\n                    const idle1 = agents.filter((ele) => {\n                        return ele.Event === 'Call Disconnected Not Disposed'\n                    })\n                    setIdle(idle1)\n                    const break1 = agents.filter((ele) => {\n                        return ele.Event === 'On Break'\n                    })\n                    setBreakdetails(break1)\n                    const agentsFree1 = agents.filter((ele) => {\n                        return ele.Event === 'Free for Next Call'\n                    })\n                    setAgentsFree(agentsFree1)\n                    const live = agents.filter((ele) => {\n                        return ele.Event === 'On Call'\n                    })\n                    setLivecalls(live)\n                }\n\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    useEffect(() => {\n\n        const interval = setInterval(async () => {\n            getAgents()\n\n        }, 3000);\n\n\n    }, [])\n\n    console.log(agents, \"agents\")\n\n    const handleClose = () => {\n        setShow(false);\n        setUpdate({})\n    };\n\n\n    return (\n        <>\n            <Grid container spacing={3} direction=\"row\">\n                <Grid item xs={6} sm={6} lg={6}>\n                    <Card>\n                        <CardContent style={{ 'height': '500px' }}>\n                            <Grid container spacing={3} direction=\"row\">\n                                <Grid item xs={6} sm={6} lg={5}></Grid>\n                                <Grid item xs={6} sm={6} lg={5}> <b>Manage Agents</b></Grid>\n                                <Grid item xs={6} sm={6} lg={1}></Grid>\n                                <Grid item xs={6} sm={6} lg={1}>\n                                    <Dialog />\n                                </Grid>\n                                <Grid item xs={6} sm={6} lg={12}>\n                                    <DataGrid rows={agents} columns={profilesColumns} pageSize={5}\n                                        // rowsPerPageOptions={[10, 20, 50]}\n                                        onRowClick={showProfile}\n                                        autoHeight=\"true\"\n                                        pagination />\n                                </Grid>\n                            </Grid>\n                        </CardContent>\n                    </Card>\n\n                </Grid>\n                <Grid item xs={6} sm={6} lg={6}>\n                    <Card style={{ 'height': '500px' }}>\n                        <CardContent>\n                            <Grid container spacing={3} direction=\"row\">\n                                <Grid item xs={6} sm={6} lg={5}></Grid>\n                                <Grid item xs={6} sm={6} lg={5}> <b>Agents Status</b></Grid>\n                                <Grid item xs={6} sm={6} lg={1}></Grid>\n                                <Grid item xs={6} sm={6} lg={12}>\n                                    <DataGrid rows={agents} columns={agentStatusColumn} pageSize={5}\n                                        //rowsPerPageOptions={[5, 20, 50]}\n                                        autoHeight=\"true\"\n                                        pagination onRowClick={showProfile} />\n                                </Grid>\n                            </Grid>\n                        </CardContent>\n                    </Card>\n                </Grid>\n                <Grid item xs={6} sm={6} lg={6}>\n                    <Card style={{ 'height': '500px' }}>\n                        <CardContent>\n                            <Grid container spacing={3} direction=\"row\">\n                                <Grid item xs={6} sm={6} lg={5}></Grid>\n                                <Grid item xs={6} sm={6} lg={5}> <b>Break Details</b></Grid>\n                                <Grid item xs={6} sm={6} lg={1}></Grid>\n                                <Grid item xs={6} sm={6} lg={12}>\n                                    <DataGrid rows={breakdetails} columns={agentStatusColumn} pageSize={5}\n                                        //rowsPerPageOptions={[5, 20, 50]}\n                                        autoHeight=\"true\"\n                                        pagination onRowClick={showProfile} />\n                                </Grid>\n                            </Grid>\n                        </CardContent>\n                    </Card>\n                </Grid>\n                <Grid item xs={6} sm={6} lg={6}>\n                    <Card style={{ 'height': '500px' }}>\n                        <CardContent>\n                            <Grid container spacing={3} direction=\"row\">\n                                <Grid item xs={6} sm={6} lg={5}></Grid>\n                                <Grid item xs={6} sm={6} lg={5}> <b>Live Calls</b></Grid>\n                                <Grid item xs={6} sm={6} lg={1}></Grid>\n                                <Grid item xs={6} sm={6} lg={12}>\n                                    <DataGrid rows={liveCalls} columns={liveCallsColumn} pageSize={5}\n                                        //rowsPerPageOptions={[5, 20, 50]}\n                                        autoHeight=\"true\"\n                                        pagination onRowClick={showProfile} />\n                                </Grid>\n                            </Grid>\n                        </CardContent>\n                    </Card>\n                </Grid>\n                <Grid item xs={6} sm={6} lg={6}>\n                    <Card style={{ 'height': '500px' }}>\n                        <CardContent>\n                            <Grid container spacing={3} direction=\"row\">\n                                <Grid item xs={6} sm={6} lg={5}></Grid>\n                                <Grid item xs={6} sm={6} lg={5}> <b>Agents Free</b></Grid>\n                                <Grid item xs={6} sm={6} lg={1}></Grid>\n                                <Grid item xs={6} sm={6} lg={12}>\n                                    <DataGrid rows={agentsFree} columns={agentsFreeColumn} pageSize={5}\n                                        //rowsPerPageOptions={[5, 20, 50]}\n                                        autoHeight=\"true\"\n                                        pagination onRowClick={showProfile} />\n                                </Grid>\n                            </Grid>\n                        </CardContent>\n                    </Card>\n                </Grid>\n                <Grid item xs={6} sm={6} lg={6}>\n                    <Card style={{ 'height': '500px' }}>\n                        <CardContent>\n                            <Grid container spacing={3} direction=\"row\">\n                                <Grid item xs={6} sm={6} lg={5}></Grid>\n                                <Grid item xs={6} sm={6} lg={5}> <b>Call Completed Not Disposed</b></Grid>\n                                <Grid item xs={6} sm={6} lg={1}></Grid>\n                                <Grid item xs={6} sm={6} lg={12}>\n                                    <DataGrid rows={idle} columns={callsNotDisposed} pageSize={5}\n                                        //rowsPerPageOptions={[5, 20, 50]}\n                                        autoHeight=\"true\"\n                                        pagination onRowClick={showProfile} />\n                                </Grid>\n                            </Grid>\n                        </CardContent>\n                    </Card>\n                </Grid>\n            </Grid>\n            <Popup record={update} show={show} handleClose={handleClose} />\n        </>\n    );\n\n\n\n}\n\nexport default Inbound\n","import 'date-fns';\nimport React from 'react';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport { Button, makeStyles } from '@material-ui/core';\n// import classes from '*.module.css';\n\nexport default function MaterialUIPickers(props) {\n    const [startDate, setStartDate] = React.useState(new Date());\n    const [endDate, setEndDate] = React.useState(new Date());\n    const useStyles = makeStyles({\n        root: {\n\n            \"& .MuiInputBase-root\": {\n                // padding: 0,\n                \"& .MuiButtonBase-root\": {\n                    // padding: 0,\n                    // paddingLeft: 10\n                },\n                \"&.MuiFormControl-marginNormal\": {\n\n                },\n                \"& .MuiInputBase-input\": {\n                    padding: 0,\n                    // paddingLeft: 0,\n                    marginTop: 0\n                }\n            }\n        }\n    });\n    const classes = useStyles();\n\n    const handleSubmit = (e) => {\n        // console.log(\"i submitted\")\n        props.getData(startDate)\n    };\n\n    //console.log(startDate, endDate)\n\n    return (\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            {/* <Grid item lg={3} sm={6}> */}\n            <KeyboardDatePicker\n                className={classes.root}\n                disableToolbar\n                variant=\"inline\"\n                format=\"dd/MM/yyyy\"\n                margin=\"normal\"\n                id=\"date-picker-inline\"\n                label=\"Start Date\"\n                value={startDate}\n                onChange={date => {\n                    // props.handleChange()\n                    setStartDate(date)\n                }}\n                KeyboardButtonProps={{\n                    'aria-label': 'change date',\n                }}\n            /> &nbsp;\n            {/* </Grid> */}\n            {/* <Grid item lg={3} sm={6}> */}\n\n            <br />\n            <Button size=\"small\" variant=\"contained\" color=\"primary\" onClick={handleSubmit}>Show Records</Button>\n            {/* </Grid> */}\n            {/* <Grid item lg={3} sm={6}> */}\n            <br />\n            {/* </Grid> */}\n        </MuiPickersUtilsProvider>\n    );\n}\n","import { Button } from '@material-ui/core';\nimport React from 'react';\nimport ReactExport from 'react-export-excel';\n\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n\nconst ExcelReport = ({ data, fileName }) => {\n  return (\n    <ExcelFile\n      filename={fileName}\n      element={\n        <Button variant=\"contained\" color=\"primary\" size=\"small\">\n          Download\n        </Button>\n      }\n    >\n      <ExcelSheet data={data} name=\"Table\">\n        {Object.entries(data[0]).map(([key, value]) => {\n          return <ExcelColumn label={key} key={key} value={key} />;\n        })}\n      </ExcelSheet>\n    </ExcelFile>\n  );\n};\n\nexport default ExcelReport;\n","import React, { useState } from 'react'\nimport {\n    Avatar,\n    Grid,\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemText,\n    makeStyles,\n    Typography,\n    Accordion,\n    AccordionSummary,\n    AccordionDetails,\n    Card,\n    CardContent,\n    CardHeader,\n    Box,\n    Button,\n    TextField,\n    Paper,\n    Snackbar,\n    Tooltip,\n    IconButton\n} from '@material-ui/core';\nimport InteractionDate from './agentperformance_date'\nimport DownloadReport from '../DownloadReport'\nimport axios from 'axios';\nimport moment from 'moment'\nimport { DataGrid } from '@material-ui/data-grid';\nimport ExcelReport from '../ExcelReport'\nimport { AGENT_PERFORMANCE } from 'src/modules/dashboard-360/utils/endpoints'\n\n\nconst AgentPerformance = (props) => {\n    const [date, setdate] = useState(\"\")\n    const [records, setRecords] = useState([])\n\n    const profilesColumns = [\n        {\n            headerName: 'SL.No',\n            field: 'id',\n            flex: 0.5\n        },\n        {\n            headerName: 'Agent Name',\n            field: 'AgentName',\n            flex: 0.5\n\n        },\n        {\n            headerName: 'Login Duration',\n            field: 'TotalLoginTime',\n            flex: 0.5\n        },\n        {\n            headerName: 'Calls Offered',\n            field: 'TotalCalls',\n            flex: 0.5\n        },\n        {\n            headerName: 'Calls Handled',\n            field: 'TotalConnectedCalls',\n            flex: 0.5\n        },\n        {\n            headerName: 'Missed Calls',\n            field: 'TotalRingNoAnswerCalls',\n            flex: 0.5\n        },\n        {\n            headerName: 'Break Duration',\n            field: 'TotalBreakTime',\n            flex: 0.5\n        },\n        {\n            headerName: 'Talk Duration',\n            field: 'TotalTalkTime',\n            flex: 0.5\n        },\n        {\n            headerName: 'Idle Duration',\n            field: 'TotalIdleDuration',\n            flex: 0.5\n        },\n        {\n            headerName: 'ACW',\n            field: 'ACW',\n            flex: 0.5\n        },\n    ]\n\n    const getData = (date) => {\n        let value = moment(date).format().slice(0, 10)\n        const data = {\n            \"startDate\": value\n        }\n\n        axios.post(`${AGENT_PERFORMANCE}/AgentPeformanceReport`, data)\n            .then((res) => {\n                console.log(res.data.filteredArray)\n                var i = 0\n                res.data.filteredArray.map((ele) => {\n                    i = i + 1\n                    return ele.id = i\n                })\n                setRecords(res.data.filteredArray)\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    return (<div>\n        <br />\n        <br />\n        <Grid container spacing={3} direction=\"row\">\n            <Grid item xs={6} sm={6} lg={5}></Grid>\n            <Grid item xs={6} sm={6} lg={4}><h3>Agent Performance Report</h3></Grid>\n            <Grid item xs={6} sm={6} lg={3}></Grid>\n        </Grid>\n        <Grid container spacing={3} direction=\"row\">\n            <Grid item xs={6} sm={6} lg={5}></Grid>\n            <Grid item xs={6} sm={6} lg={4}> <InteractionDate getData={getData} /> {records && records.length > 0 && (\n                <ExcelReport\n                    data={records}\n                    fileName={'Agent Performance'}\n                />\n            )}</Grid>\n            <Grid item xs={6} sm={6} lg={1}></Grid>\n            <Grid item xs={6} sm={6} lg={2}></Grid>\n        </Grid>\n        <Grid container spacing={3} direction=\"row\">\n            {\n                records.length > 0 ? (\n                    <Grid item xs={6} sm={6} lg={12}>\n                        <DataGrid rows={records} columns={profilesColumns} pageSize={10}\n                            //rowsPerPageOptions={[10, 20, 50]}\n                            autoHeight=\"true\"\n                            pagination />\n                    </Grid>\n                ) : (null)\n            }\n\n        </Grid>\n    </div>)\n}\n\nexport default AgentPerformance","import 'date-fns';\nimport React from 'react';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport { Button, makeStyles } from '@material-ui/core';\n// import classes from '*.module.css';\n\nexport default function MaterialUIPickers(props) {\n  const [startDate, setStartDate] = React.useState(new Date());\n  const [endDate, setEndDate] = React.useState(new Date());\n  const useStyles = makeStyles({\n    root: {\n\n      \"& .MuiInputBase-root\": {\n        // padding: 0,\n        \"& .MuiButtonBase-root\": {\n          // padding: 0,\n          // paddingLeft: 10\n        },\n        \"&.MuiFormControl-marginNormal\": {\n\n        },\n        \"& .MuiInputBase-input\": {\n          padding: 0,\n          // paddingLeft: 0,\n          marginTop: 0\n        }\n      }\n    }\n  });\n  const classes = useStyles();\n\n  const handleSubmit = (e) => {\n    console.log(\"i submitted\")\n    props.getData(startDate, endDate)\n  };\n\n  //console.log(startDate, endDate)\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      {/* <Grid item lg={3} sm={6}> */}\n      <KeyboardDatePicker\n        className={classes.root}\n        disableToolbar\n        variant=\"inline\"\n        format=\"dd/MM/yyyy\"\n        margin=\"normal\"\n        id=\"date-picker-inline\"\n        label=\"Start Date\"\n        value={startDate}\n        onChange={date => {\n          //props.handleChange()\n          setStartDate(date)\n        }}\n        KeyboardButtonProps={{\n          'aria-label': 'change date',\n        }}\n      /> &nbsp;\n      {/* </Grid> */}\n      {/* <Grid item lg={3} sm={6}> */}\n      <KeyboardDatePicker\n        className={classes.root}\n        disableToolbar\n        variant=\"inline\"\n        format=\"dd/MM/yyyy\"\n        margin=\"normal\"\n        id=\"date-picker-inline\"\n        label=\"End Date\"\n        value={endDate}\n        onChange={date => {\n          //props.handleChange()\n          setEndDate(date)\n        }}\n        KeyboardButtonProps={{\n          'aria-label': 'change date',\n        }}\n      />\n      {/* </Grid> */}\n      {/* <Grid item lg={3} sm={6}> */}\n      <br />\n      <Button size=\"large\" variant=\"contained\" color=\"primary\" onClick={handleSubmit}>Show Records</Button>\n      {/* </Grid> */}\n      {/* <Grid item lg={3} sm={6}> */}\n      <br />\n      {/* </Grid> */}\n    </MuiPickersUtilsProvider>\n  );\n}\n","import React, { useEffect, useState } from 'react'\nimport { Modal } from 'react-bootstrap'\nimport {\n    Avatar,\n    Grid,\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemText,\n    makeStyles,\n    Typography,\n    Accordion,\n    AccordionSummary,\n    AccordionDetails,\n    Card,\n    CardContent,\n    CardHeader,\n    Box,\n    Button,\n    TextField,\n    Dialog,\n    DialogContent,\n    DialogTitle\n} from '@material-ui/core';\nimport axios from 'axios'\n\n\nconst Popup = (props) => {\n    const { show, handleClose, record } = props\n\n    console.log(record)\n    return (<div>\n        <Dialog\n            open={show}\n            onClose={() => handleClose()}\n            style={{ padding: 2 }}\n        >\n            <DialogTitle>Cdr Report</DialogTitle>\n            < DialogContent>\n                <Grid container spacing={3} direction=\"row\">\n                    <Grid item xs={6} sm={6} lg={6}>\n                        {\n                            record.CRD ? (<div>\n                                <p><b>CDR</b></p>\n                                <p>AccountCode : {record.CRD.AccountCode}</p>\n                                <p>AnswerTime:{record.CRD.AnswerTime}</p>\n                                <p>UniqueID:{record.CRD.UniqueID}</p>\n                                <p>CallerID:{record.CRD.CallerID}</p>\n                                <p>Channel:{record.CRD.Channel}</p>\n                                <p>Destination:{record.CRD.Destination}</p>\n                                <p>DestinationChannel:{record.CRD.DestinationChannel}</p>\n                                <p>DestinationContext:{record.CRD.DestinationContext}</p>\n                                <p>Disposition:{record.CRD.Disposition}</p>\n                                <p>Duration:{record.CRD.Duration}</p>\n                                <p>EndTime:{record.CRD.EndTime}</p>\n                                <p>Event:{record.CRD.Event}</p>\n                                <p>LastApplication:{record.CRD.LastApplication}</p>\n                                <p>LastData:{record.CRD.LastData}</p>\n                                <p>Privilege:{record.CRD.Privilege}</p>\n                                <p>Source:{record.CRD.Source}</p>\n                                <p>StartTime:{record.CRD.StartTime}</p>\n\n                            </div>\n\n                            ) : (<div></div>)\n                        }\n                    </Grid>\n                    <Grid item xs={6} sm={6} lg={6}>\n                        {\n                            record.DIALSTARTEVENT ? (\n                                <div>\n                                    <p><b>DIALSTARTEVENT</b></p>\n                                    <p>CallerIDName : {record.DIALSTARTEVENT.CallerIDName}</p>\n                                    <p>CallerIDNum : {record.DIALSTARTEVENT.CallerIDNum}</p>\n                                    <p>Channel : {record.DIALSTARTEVENT.Channel}</p>\n                                    <p>ConnectedLineName : {record.DIALSTARTEVENT.ConnectedLineName}</p>\n                                    <p>ConnectedLineNum : {record.DIALSTARTEVENT.ConnectedLineNum}</p>\n                                    <p>DestUniqueID : {record.DIALSTARTEVENT.DestUniqueID}</p>\n                                    <p>Dialstring : {record.DIALSTARTEVENT.Dialstring}</p>\n                                    <p>Event : {record.DIALSTARTEVENT.Event}</p>\n                                    <p>Privilege : {record.DIALSTARTEVENT.Privilege}</p>\n                                    <p>SubEvent : {record.DIALSTARTEVENT.SubEvent}</p>\n                                    <p>UniqueID : {record.DIALSTARTEVENT.UniqueID}</p>\n                                </div>\n                            ) : (<div></div>)\n                        }\n\n                    </Grid>\n                    <Grid item xs={6} sm={6} lg={6}>\n                        {\n                            record.ORIGINATEEVENT ? (\n                                <div>\n                                    <p><b>ORIGINATEEVENT</b></p>\n                                    <p>ActionID : {record.ORIGINATEEVENT.ActionID}</p>\n                                    <p>CallerIDName : {record.ORIGINATEEVENT.CallerIDName}</p>\n                                    <p>CallerIDNum : {record.ORIGINATEEVENT.CallerIDNum}</p>\n                                    <p>Channel : {record.ORIGINATEEVENT.Channel}</p>\n                                    <p>Context : {record.ORIGINATEEVENT.Context}</p>\n                                    <p>Event : {record.ORIGINATEEVENT.Event}</p>\n                                    <p>Exten : {record.ORIGINATEEVENT.Exten}</p>\n                                    <p>Event : {record.ORIGINATEEVENT.Event}</p>\n                                    <p>Privilege : {record.ORIGINATEEVENT.Privilege}</p>\n                                    <p>Reason : {record.ORIGINATEEVENT.Reason}</p>\n                                    <p>Response : {record.ORIGINATEEVENT.Response}</p>\n                                    <p>Uniqueid : {record.ORIGINATEEVENT.Uniqueid}</p>\n                                </div>\n                            ) : (<div></div>)\n                        }\n                    </Grid>\n                    <Grid item xs={6} sm={6} lg={6}>\n                        {\n                            record.AGENTCALLEDEVENT ? (\n                                <div>\n                                    <p><b>AGENTCALLEDEVENT</b></p>\n                                    <p>AgentName : {record.AGENTCALLEDEVENT.AgentName}</p>\n                                    <p>AgentName : {record.AGENTCALLEDEVENT.AgentName}</p>\n                                    <p>CallerIDName : {record.AGENTCALLEDEVENT.CallerIDName}</p>\n                                    <p>CallerIDNum : {record.AGENTCALLEDEVENT.CallerIDNum}</p>\n                                    <p>ChannelCalling : {record.AGENTCALLEDEVENT.ChannelCalling}</p>\n                                    <p>ConnectedLineName : {record.AGENTCALLEDEVENT.ConnectedLineName}</p>\n                                    <p>ConnectedLineNum : {record.AGENTCALLEDEVENT.ConnectedLineNum}</p>\n                                    <p>Context : {record.AGENTCALLEDEVENT.Context}</p>\n                                    <p>DestinationChannel : {record.AGENTCALLEDEVENT.DestinationChannel}</p>\n                                    <p>Event : {record.AGENTCALLEDEVENT.Event}</p>\n                                    <p>Extension : {record.AGENTCALLEDEVENT.Extension}</p>\n                                    <p>Priority : {record.AGENTCALLEDEVENT.Priority}</p>\n                                    <p>Privilege : {record.AGENTCALLEDEVENT.Privilege}</p>\n                                    <p>Queue : {record.AGENTCALLEDEVENT.Queue}</p>\n                                    <p>Uniqueid : {record.AGENTCALLEDEVENT.Uniqueid}</p>\n                                </div>\n                            ) : (<div></div>)\n                        }\n                    </Grid>\n\n                    <Grid item xs={6} sm={6} lg={6}>\n                        {\n                            record.DIALENDEVENT ? (\n                                <div>\n                                    <p><b>DIALENDEVENT</b></p>\n                                    <p>Channel : {record.DIALENDEVENT.Channel}</p>\n                                    <p>DialStatus : {record.DIALENDEVENT.DialStatus}</p>\n                                    <p>Event : {record.DIALENDEVENT.Event}</p>\n                                    <p>Privilege : {record.DIALENDEVENT.Privilege}</p>\n                                    <p>SubEvent : {record.DIALENDEVENT.SubEvent}</p>\n                                    <p>UniqueID : {record.DIALENDEVENT.UniqueID}</p>\n                                </div>\n                            ) : (<div></div>)\n\n                        }\n                    </Grid>\n\n                    <p><Button variant=\"contained\" onClick={() => { handleClose() }}>Close</Button></p>\n                </Grid>\n            </DialogContent>\n        </Dialog>\n    </div>)\n}\n\nexport default Popup","import React, { useState } from 'react'\nimport {\n    Avatar,\n    Grid,\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemText,\n    makeStyles,\n    Typography,\n    Accordion,\n    AccordionSummary,\n    AccordionDetails,\n    Card,\n    CardContent,\n    CardHeader,\n    Box,\n    Button,\n    TextField,\n    Paper,\n    Snackbar,\n    Tooltip,\n    IconButton\n} from '@material-ui/core';\nimport InteractionDate from './DaterangeReport'\nimport DownloadReport from '../DownloadReport'\nimport axios from 'axios';\nimport moment from 'moment'\nimport { DataGrid } from '@material-ui/data-grid';\nimport Popup from './cdrPopup'\nimport ExcelReport from '../ExcelReport'\nimport { AGENT_PERFORMANCE } from 'src/modules/dashboard-360/utils/endpoints'\n\nconst InteractionReport = (props) => {\n    const [records, setRecords] = useState([])\n    const [show, setShow] = useState(false)\n    const [cdr, setCdr] = useState([])\n\n    const handleClose = () => {\n        setShow(false);\n\n    };\n\n    const getDataof1 = (id) => {\n        console.log(id)\n        axios.get(`${AGENT_PERFORMANCE}/interactions/${id}`)\n            .then((res) => {\n                console.log(res.data)\n                setCdr(res.data)\n                setShow(true)\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n\n\n\n    const getData = (date, enddate) => {\n        console.log(date, enddate)\n        let value = moment(date).format().slice(0, 10)\n        let value2 = moment(enddate).format().slice(0, 10)\n        const data = {\n            \"startDate\": value,\n            \"endDate\": value2\n        }\n\n        axios.post(`${AGENT_PERFORMANCE}/interactions/bydaterange`, data)\n            .then((res) => {\n                console.log(res.data.records)\n                res.data.records = res.data.records.reverse()\n                var i = 0\n                res.data.records.map((ele) => {\n                    i = i + 1\n                    return ele.id = i\n                })\n\n                // res.data.records.map((ele) => {\n                //     if (ele.CALLSTARTTIME.length > 1) {\n                //         value = new Date(ele.CALLSTARTTIME).toLocaleString()\n                //         return ele.CALLSTARTTIME = value\n                //     }\n\n                // })\n                // res.data.records.map((ele) => {\n                //     if (ele.CALLPICKEDTIME.length > 1) {\n                //         return ele.CALLPICKEDTIME = new Date(ele.CALLPICKEDTIME / 1000).toUTCString()\n                //     }\n\n                // })\n                res.data.records.map((ele) => {\n                    const value = ele.LASTDTMFOPTION.toString()\n                    return ele.optionsselct = value\n                })\n                res.data.records.map((ele) => {\n                    const value = moment(ele.createdAt).format('MMMM Do YYYY, h:mm:ss a')\n                    return ele.createdAt = value\n                })\n\n                res.data.records.map((ele) => {\n\n                    if (ele.hasOwnProperty(\"CRMDISPOSITION\")) {\n                        return (\n                            ele.mainDisposition = ele.CRMDISPOSITION.mainDisposition,\n                            ele.subDisposition = ele.CRMDISPOSITION.subDisposition,\n                            ele.sip_id = ele.CRMDISPOSITION.sip_id,\n                            ele.agent_type = ele.CRMDISPOSITION.agent_type,\n                            ele.agent_id = ele.CRMDISPOSITION.agent_id,\n                            ele.agentName = ele.CRMDISPOSITION.agentName,\n                            ele.response = ele.CRMDISPOSITION.response\n                        )\n                    } else {\n                        return (ele.mainDisposition = '',\n                            ele.subDisposition = '',\n                            ele.sip_id = '',\n                            ele.agent_type = '',\n                            ele.agent_id = '',\n                            ele.agentName = '',\n                            ele.response = '')\n                    }\n                })\n                res.data.records.map((ele) => {\n\n                    if (ele.hasOwnProperty(\"CRD\")) {\n                        return (\n                            ele.CRD_AMAFlags = ele.CRD.AMAFlags,\n                            ele.CRD_AccountCode = ele.CRD_AccountCode,\n                            ele.CRD_AnswerTime = ele.CRD_AnswerTime,\n                            ele.CRD_CallerID = ele.CRD_CallerID,\n                            ele.CRD_Channel = ele.CRD_Channel,\n                            ele.CRD_Destination = ele.CRD_Destination,\n                            ele.CRD_DestinationChannel = ele.CRD_DestinationChannel,\n                            ele.CRD_DestinationContext = ele.CRD_DestinationContext,\n                            ele.CRD_Disposition = ele.CRD_Disposition,\n                            ele.CRD_Duration = ele.CRD_Duration,\n                            ele.CRD_EndTime = ele.CRD_EndTime,\n                            ele.CRD_Event = ele.CRD_Event,\n                            ele.CRD_LastApplication = ele.CRD_LastApplication,\n                            ele.CRD_LastData = ele.CRD_LastData,\n                            ele.CRD_Privilege = ele.CRD_Privilege,\n                            ele.CRD_Source = ele.CRD_Source,\n                            ele.CRD_StartTime = ele.CRD_StartTime,\n                            ele.CRD_UniqueID = ele.CRD_UniqueID,\n                            ele.CRD_UserField = ele.CRD_UserField\n                        )\n                    } else {\n                        return (ele.CRD_AMAFlags = \"\",\n                            ele.CRD_AccountCode = \"\",\n                            ele.CRD_AnswerTime = \"\",\n                            ele.CRD_CallerID = \"\",\n                            ele.CRD_Channel = \"\",\n                            ele.CRD_Destination = \"\",\n                            ele.CRD_DestinationChannel = \"\",\n                            ele.CRD_DestinationContext = \"\",\n                            ele.CRD_Disposition = \"\",\n                            ele.CRD_Duration = \"\",\n                            ele.CRD_EndTime = \"\",\n                            ele.CRD_Event = \"\",\n                            ele.CRD_LastApplication = \"\",\n                            ele.CRD_LastData = \"\",\n                            ele.CRD_Privilege = \"\",\n                            ele.CRD_Source = \"\",\n                            ele.CRD_StartTime = \"\",\n                            ele.CRD_UniqueID = \"\",\n                            ele.CRD_UserField = \"\"\n                        )\n                    }\n                })\n\n                res.data.records.map((ele) => {\n\n                    if (ele.hasOwnProperty(\"DIALENDEVENT\")) {\n                        return (\n                            ele.DIALENDEVENT_Channel = ele.DIALENDEVENT.Channel,\n                            ele.DIALENDEVENT_DialStatus = ele.DIALENDEVENT.DialStatus,\n                            ele.DIALENDEVENT_Event = ele.DIALENDEVENT.Event,\n                            ele.DIALENDEVENT_Privilege = ele.DIALENDEVENT.Privilege,\n                            ele.DIALENDEVENT_SubEvent = ele.DIALENDEVENT.SubEvent,\n                            ele.DIALENDEVENT_UniqueID = ele.DIALENDEVENT.UniqueID\n                        )\n                    } else {\n                        return (ele.DIALENDEVENT_Channel = \"\",\n                            ele.DIALENDEVENT_DialStatus = \"\",\n                            ele.DIALENDEVENT_Event = \"\",\n                            ele.DIALENDEVENT_Privilege = \"\",\n                            ele.DIALENDEVENT_SubEvent = \"\",\n                            ele.DIALENDEVENT_UniqueID = \"\"\n                        )\n                    }\n                })\n                res.data.records.map((ele) => {\n\n                    if (ele.hasOwnProperty(\"DIALSTARTEVENT\")) {\n                        return (\n                            ele.DIALSTARTEVENT_CallerIDName = ele.DIALSTARTEVENT.CallerIDName,\n                            ele.DIALSTARTEVENT_CallerIDNum = ele.DIALSTARTEVENT.CallerIDNum,\n                            ele.DIALSTARTEVENT_Channel = ele.DIALSTARTEVENT.Channel,\n                            ele.DIALSTARTEVENT_ConnectedLineName = ele.DIALSTARTEVENT.ConnectedLineName,\n                            ele.DIALSTARTEVENT_ConnectedLineNum = ele.DIALSTARTEVENT.ConnectedLineNum,\n                            ele.DIALSTARTEVENT_DestUniqueID = ele.DIALSTARTEVENT.DestUniqueID,\n                            ele.DIALSTARTEVENT_Destination = ele.DIALSTARTEVENT.Destination,\n                            ele.DIALSTARTEVENT_Dialstring = ele.DIALSTARTEVENT.Dialstring,\n                            ele.DIALSTARTEVENT_Event = ele.DIALSTARTEVENT.Event,\n                            ele.DIALSTARTEVENT_Privilege = ele.DIALSTARTEVENT.Privilege,\n                            ele.DIALSTARTEVENT_SubEvent = ele.DIALSTARTEVENT.SubEvent,\n                            ele.DIALSTARTEVENT_UniqueID = ele.DIALSTARTEVENT.UniqueID\n                        )\n                    } else {\n                        return (ele.DIALSTARTEVENT_CallerIDName = \"\",\n                            ele.DIALSTARTEVENT_CallerIDNum = \"\",\n                            ele.DIALSTARTEVENT_Channel = \"\",\n                            ele.DIALSTARTEVENT_ConnectedLineName = \"\",\n                            ele.DIALSTARTEVENT_ConnectedLineNum = \"\",\n                            ele.DIALSTARTEVENT_DestUniqueID = \"\",\n                            ele.DIALSTARTEVENT_Destination = \"\",\n                            ele.DIALSTARTEVENT_Dialstring = \"\",\n                            ele.DIALSTARTEVENT_Event = \"\",\n                            ele.DIALSTARTEVENT_Privilege = \"\",\n                            ele.DIALSTARTEVENT_SubEvent = \"\",\n                            ele.DIALSTARTEVENT_UniqueID = \"\"\n                        )\n                    }\n                })\n\n                res.data.records.map((ele) => {\n\n                    if (ele.hasOwnProperty(\"ORIGINATEEVENT\")) {\n                        return (\n                            ele.ORIGINATEEVENT_ActionID = ele.ORIGINATEEVENT.ActionID,\n                            ele.ORIGINATEEVENT_CallerIDNam = ele.ORIGINATEEVENT.CallerIDNam,\n                            ele.ORIGINATEEVENT_CallerIDNum = ele.ORIGINATEEVENT.CallerIDNum,\n                            ele.ORIGINATEEVENT_Channel = ele.ORIGINATEEVENT.Channel,\n                            ele.ORIGINATEEVENT_Context = ele.ORIGINATEEVENT.Context,\n                            ele.ORIGINATEEVENT_Event = ele.ORIGINATEEVENT.Event,\n                            ele.ORIGINATEEVENT_Exten = ele.ORIGINATEEVENT.Exten,\n                            ele.ORIGINATEEVENT_Privilege = ele.ORIGINATEEVENT.Privilege,\n                            ele.ORIGINATEEVENT_Reason = ele.ORIGINATEEVENT.Reason,\n                            ele.ORIGINATEEVENT_Response = ele.ORIGINATEEVENT.Response,\n                            ele.ORIGINATEEVENT_Uniqueid = ele.ORIGINATEEVENT.Uniqueid\n                        )\n                    } else {\n                        return (ele.ORIGINATEEVENT_ActionID = \"\",\n                            ele.ORIGINATEEVENT_CallerIDNam = \"\",\n                            ele.ORIGINATEEVENT_CallerIDNum = \"\",\n                            ele.ORIGINATEEVENT_Channel = \"\",\n                            ele.ORIGINATEEVENT_Context = \"\",\n                            ele.ORIGINATEEVENT_Event = \"\",\n                            ele.ORIGINATEEVENT_Exten = \"\",\n                            ele.ORIGINATEEVENT_Response = \"\",\n                            ele.ORIGINATEEVENT_Reason = \"\",\n                            ele.ORIGINATEEVENT_Uniqueid = \"\"\n                        )\n                    }\n                })\n\n\n                setRecords(res.data.records)\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    // if (records.length > 0) {\n    //     const records1 = records.map((ele) => {\n    //         return ele.CALLSTARTTIME === new Date(ele.CALLSTARTTIME)\n    //     })\n    //     setRecords(records1)\n    // }\n\n\n    return (<div>\n        <br />\n        <br />\n        <Grid container spacing={3} direction=\"row\">\n            <Grid item xs={6} sm={6} lg={5}></Grid>\n            <Grid item xs={6} sm={6} lg={4}><h3>Interaction Performance Report</h3></Grid>\n            <Grid item xs={6} sm={6} lg={3}></Grid>\n        </Grid>\n        <Grid container spacing={3} direction=\"row\">\n            <Grid item xs={6} sm={6} lg={5}></Grid>\n            <Grid item xs={6} sm={6} lg={4}> <InteractionDate getData={getData} /><DownloadReport DownloadData={records} /></Grid>\n            <Grid item xs={6} sm={6} lg={1}></Grid>\n            <Grid item xs={6} sm={6} lg={2}></Grid>\n        </Grid>\n        <Grid container spacing={3} direction=\"row\">\n            {/* {\n                records.length > 0 ? (\n                    <Grid item xs={6} sm={6} lg={12}>\n                        <DataGrid rows={records} columns={profilesColumns} pageSize={10}\n                            //rowsPerPageOptions={[10, 20, 50]}\n                            autoHeight=\"true\"\n                            pagination />\n                    </Grid>\n                ) : (null)\n            } */}\n        </Grid>\n        <Grid container spacing={3} direction=\"row\">\n            {\n                records.length > 0 ? (\n                    <Grid item xs={6} sm={6} lg={12}>\n                        <div id=\"dtHorizontalVerticalExample\" class=\"table table-striped table-bordered table-sm \" cellspacing=\"2\"\n                            width=\"100%\">\n\n                            <table class=\"table table-bordered table-striped mb-0\">\n                                <thead>\n                                    <tr>\n                                        <th scope=\"col\">Id</th>\n                                        <th scope=\"col\">Call Id</th>\n                                        <th scope=\"col\" >Agent Name</th>\n                                        <th scope=\"col\">Agent Id</th>\n                                        <th scope=\"col\">Caller Number</th>\n                                        <th scope=\"col\">Call Start Time</th>\n                                        <th scope=\"col\">Call Picked Time</th>\n                                        <th scope=\"col\">Call Disconnected Time</th>\n                                        <th scope=\"col\">Call No Answer Time</th>\n                                        <th scope=\"col\">Call Disposed Time</th>\n                                        <th scope=\"col\">Total Call Duration</th>\n                                        <th scope=\"col\">Call Connected Duration</th>\n                                        <th scope=\"col\">Call Disconnected Duration</th>\n                                        <th scope=\"col\">Call Ring Duration</th>\n                                        <th scope=\"col\">Caller Name</th>\n                                        <th scope=\"col\">Queue</th>\n                                        <th scope=\"col\">Location </th>\n                                        <th scope=\"col\">Main Disposition</th>\n                                        <th scope=\"col\">SUB Disposition </th>\n                                        <th scope=\"col\">Sip ID</th>\n                                        <th scope=\"col\">Agent Type</th>\n                                        <th scope=\"col\">Agent ID</th>\n                                        <th scope=\"col\">Agent Name</th>\n                                        <th scope=\"col\">Response</th>\n                                        <th scope=\"col\">Callback Date Time </th>\n                                        <th scope=\"col\">Remarks</th>\n                                        <th scope=\"col\">Record Date Time</th>\n                                        <th scope=\"col\">Last DTMF Option</th>\n\n                                    </tr>\n                                </thead>\n                                <tbody>\n\n                                    {\n                                        records.map((ele) => {\n                                            return (\n                                                <tr onClick={() => { getDataof1(ele._id) }}>\n                                                    <td>{ele.id}</td>\n                                                    <td>{ele.CALLID}</td>\n                                                    <td >{ele.AGENTNAME}</td>\n                                                    <td>{ele.AGENTID}</td>\n                                                    <td>{ele.CALLERNUMBER}</td>\n                                                    <td>{ele.CALLSTARTTIME}</td>\n                                                    <td>{ele.CALLPICKEDTIME}</td>\n\n                                                    <td>{ele.CALLDICONNECTEDTIME}</td>\n                                                    <td>{ele.CALLNOANSWERTIME}</td>\n                                                    <td>{ele.CALLDISPOSEDTIME}</td>\n                                                    <td>{ele.TOTALCALLDURATION}</td>\n\n                                                    <td>{ele.CALLCONNECTEDDURATION}</td>\n                                                    <td>{ele.CALLDISCONECTEDDURATION}</td>\n                                                    <td>{ele.CALLRINGDURATION}</td>\n\n                                                    <td>{ele.CallerName}</td>\n                                                    <td>{ele.Queue}</td>\n                                                    <td>{ele.Location}</td>\n\n\n                                                    <td>{ele.mainDisposition}</td>\n                                                    <td>{ele.subDisposition}</td>\n                                                    <td>{ele.sip_id}</td>\n                                                    <td>{ele.agent_type}</td>\n                                                    <td>{ele.agent_id}</td>\n                                                    <td>{ele.agentName}</td>\n\n                                                    <td>{ele.response}</td>\n\n                                                    <td>{ele.CallbackDate}</td>\n                                                    <td>{ele.Remarks}</td>\n                                                    <td>{ele.createdAt}</td>\n                                                    {/* <td>{ele.Location}</td> */}\n                                                    <td>{ele.optionsselct}</td>\n\n\n\n\n                                                    {/* <td>{ele.Disposition}</td>\n                                                    <td>{ele.SubDisposition}</td> */}\n\n                                                </tr>\n                                            )\n                                        })\n                                    }\n\n                                </tbody>\n                            </table>\n\n                        </div>\n                        <Popup record={cdr} show={show} handleClose={handleClose} />\n                    </Grid>\n                ) : (null)\n            }\n        </Grid>\n\n    </div>)\n}\n\nexport default InteractionReport","import routes from 'src/modules/dashboard-360/routes';\nimport React from 'react';\nimport telephonyRoutes from '../modules/telephony/routes';\nimport faqRoutes from '../modules/FAQ/routes';\n\nimport authRoutes from '../modules/auth/routes';\n\nimport agentRoutes from '../modules/agentForm/routes';\nimport groupRoutes from '../modules/groupadminForm/routes';\nimport campaign from '../modules/telephony/views/dashboard/campaign'\n\nimport ivrcampaign from '../modules/telephony/views/dashboard/ivrcampaign'\nimport manageagents from 'src/modules/telephony/views/dashboard/Auto-report/manageagents'\nimport agentPerformance from 'src/modules/telephony/views/dashboard/Auto-report/agentperformance'\nimport interactionreport from 'src/modules/telephony/views/dashboard/Auto-report/interactionreport'\n\nexport const dash360 = React.lazy(() =>\n  import('src/modules/dashboard-360/views')\n);\n\nexport const telephony = React.lazy(() =>\n  import('src/modules/telephony/views/index')\n);\n\nexport const faq = React.lazy(() =>\n  import('src/modules/FAQ/views/index')\n);\n\nexport const agentform = React.lazy(() =>\n  import('src/modules/agentForm/views/index')\n);\nexport const groupform = React.lazy(() =>\n  import('src/modules/groupadminForm/views/index')\n);\nexport const auth = React.lazy(() => import('src/modules/auth/views/index'));\n\nexport default [\n  {\n    path: '/dash360',\n    routes,\n    key: 'dash360',\n    component: dash360,\n    crumb: 'Interaction',\n    requiresAuth: true\n  },\n\n  {\n    path: '/telephony',\n    routes: telephonyRoutes,\n    key: 'telephony',\n    component: telephony,\n    crumb: 'Admin',\n    requiresAuth: true\n  },\n\n  {\n    path: '/faq',\n    routes: faqRoutes,\n    key: 'faq',\n    component: faq,\n    crumb: 'faq',\n    requiresAuth: true\n  },\n  {\n    path: '/agent',\n    routes: agentRoutes,\n    key: 'dashboardagent',\n    component: agentform,\n    crumb: 'Agents',\n    requiresAuth: true\n  },\n  {\n    path: '/group',\n    routes: groupRoutes,\n    key: 'dashboardgroup',\n    component: groupform,\n    crumb: 'Groups',\n    requiresAuth: true\n  },\n  {\n    path: '/auth',\n    routes: authRoutes,\n    key: 'auth',\n    component: auth,\n    requiresAuth: false\n  },\n  {\n    path: '/campaign',\n    component: campaign,\n    requiresAuth: true\n  },\n  {\n    path: '/ivrcampaign',\n    component: ivrcampaign,\n    requiresAuth: true\n  },\n  {\n    path: '/manageagents',\n    component: manageagents,\n    requiresAuth: true\n  },\n  {\n    path: '/agentPerformance',\n    component: agentPerformance,\n    requiresAuth: true\n  },\n  {\n    path: '/interactionreport',\n    component: interactionreport,\n    requiresAuth: true\n  },\n\n];\n","import Axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport MainLoader from './components/MainLoader';\nimport RouteSwitch from './components/RouteSwitch';\nimport TopBar from './components/TopBar';\nimport NavBar from './modules/dashboard-360/layouts/DashboardLayout/NavBar';\nimport { setAccountType, setLoggedIn, setUserDetails } from './redux/action';\nimport { ADMIN, USER } from './redux/constants';\nimport routes from './routes';\n\n\nfunction Main({\n  isLoggedIn,\n  classes,\n  setUserDetailsMain,\n  setAccountTypeMain,\n  setLoggedInMain\n}) {\n  const [loading, setLoading] = useState(true);\n  const [filteredRoutes, setfilteredRoutes] = useState(\n    routes.filter(route => route.requiresAuth === false)\n  );\n\n  const [localLoggedInState, setLocalLoggedIn] = useState(false);\n  const [routeAccess, setRouteAccess] = useState(false);\n  useEffect(() => {\n    (async function checkLoggedInState() {\n      try {\n        if (localStorage.getItem('jwtToken')) {\n          setLoggedInMain(true);\n          localStorage.removeItem('campaign')\n          // var test = await Axios.post('http://192.168.3.36:4000/api/login/verifyClient', {}, { headers: { Authorization: `Bearer ${localStorage.getItem('jwtToken')}` } })\n          //   .then(response => {\n          //     console.log('respose', response)\n          //     var result = response.data.userDetails\n          //     var obj = {\n          //       UserID: result.UserID,\n          //       AllowPublic: result.AllowPublic,\n          //       UserName: result.UserName,\n          //       EmployeeName: result.EmployeeName,\n          //       EmailID: result.EmailID,\n          //       OTP: result.OTP,\n          //       tenetID: result.tenetID,\n          //       tenentId: result.tenentId,\n          //       tenentName: result.tenentName,\n          //       roleids: result.roleids,\n          //       role: result.role,\n          //       modules: result.modules,\n          //       External_num: result.External_num\n          //     }\n          //     setUserDetailsMain(obj)\n          //     localStorage.setItem('AgentSIPID', obj.External_num);\n          //     setAccountTypeMain(obj.role === 'Agent' || obj.role === 'Admin' || obj.role === 'Group admin' ? ADMIN : USER);\n          //     setAccountTypeMain(obj.role === 'Agent' ? ADMIN : USER);\n          //     if (obj.role === 'Agent') {\n          //       setRouteAccess(true)\n          //     }\n          //   })\n          //   .catch(error => console.log(error));\n\n        } else {\n          setLoggedInMain(false);\n        }\n      } catch (error) {\n        setLoggedInMain(false);\n      } finally {\n        setLoading(false);\n      }\n    })();\n  }, []);\n\n  useEffect(() => {\n    setfilteredRoutes(\n      routes.filter(route => route.requiresAuth === isLoggedIn)\n    );\n    setLocalLoggedIn(isLoggedIn);\n  }, [isLoggedIn]);\n  return loading ? (\n    <MainLoader />\n  ) : localLoggedInState ? (\n    <>\n      <TopBar />\n      <NavBar openMobile={false} onMobileClose={() => null} />\n      <div className={classes.wrapper}>\n        <div className={classes.contentContainer}>\n          <div className={classes.content}>\n            <RouteSwitch\n              routes={filteredRoutes}\n              isRoot\n              redirectPath=\"/dash360\"\n            />\n            {/* <RouteSwitch\n              routes={filteredRoutes}\n              isRoot\n              redirectPath=\"/telephony\"\n            /> */}\n\n          </div>\n        </div>\n      </div>\n    </>\n  ) : (\n    <RouteSwitch routes={filteredRoutes} isRoot redirectPath=\"/auth/login\" />\n  );\n}\n\nconst mapStateToProps = state => ({\n  isLoggedIn: state.logInState\n});\nconst mapDispatchToProps = dispatch => ({\n  setUserDetailsMain: details => dispatch(setUserDetails(details)),\n  setAccountTypeMain: type => dispatch(setAccountType(type)),\n  setLoggedInMain: val => dispatch(setLoggedIn(val))\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\n","import 'react-perfect-scrollbar/dist/css/styles.css';\nimport React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { makeStyles, ThemeProvider } from '@material-ui/core';\nimport GlobalStyles from 'src/modules/dashboard-360/components/GlobalStyles';\nimport 'src/modules/dashboard-360/mixins/chartjs';\nimport theme from 'src/modules/dashboard-360/theme';\nimport { Provider } from 'react-redux';\nimport rootStore from './redux/store';\nimport MainLoader from './components/MainLoader';\nimport Main from './Main';\n// import Axios from 'axios';\n\n// Axios.defaults.baseURL = '/ui';\n// Axios.defaults.withCredentials = true;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    display: 'flex',\n    height: '100%',\n    overflow: 'hidden',\n    width: '100%'\n  },\n  wrapper: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden',\n    paddingTop: 64\n  },\n  contentContainer: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden'\n  },\n  content: {\n    flex: '1 1 auto',\n    height: '100%',\n    overflow: 'auto'\n  }\n}));\n\nconst App = () => {\n  const classes = useStyles();\n  return (\n    <Provider store={rootStore}>\n      <BrowserRouter>\n        <ThemeProvider theme={theme}>\n          <React.Suspense fallback={<MainLoader />}>\n            <div className={classes.root}>\n              <GlobalStyles />\n              <Main classes={classes} />\n            </div>\n          </React.Suspense>\n        </ThemeProvider>\n      </BrowserRouter>\n    </Provider>\n  );\n};\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nReactDOM.render((\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n), document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}